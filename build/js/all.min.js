!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.interceptors.push("myHttpInterceptor")}function t(e){var t=angular.element(document.querySelector(".m-app-loading"));return{request:function(e){return"POST"===e.method&&t.css("display","block"),e},requestError:function(t){return e.reject(t)},response:function(e){return t.css("display","none"),e},responseError:function(o){return t.css("display","none"),e.reject(o)}}}angular.module("app").factory("myHttpInterceptor",t).config(e),e.$inject=["$httpProvider"],t.$inject=["$q"]}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,t){t.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("aspirantes",{url:"/aspirantes",templateProvider:["$templateCache",function(e){return e.get("aspirantes/list/aspirantes.html")}],controller:"Aspirantes",controllerAs:"vm",resolve:{aspirantesPrepService:t}}).state("aspirantesDetalle",{url:"/aspirantes/:aspiranteId",templateProvider:["$templateCache",function(e){return e.get("aspirantes/detail/aspiranteDetalle.html")}],controller:"AspiranteDetalle",controllerAs:"vm",resolve:{getAspirantePrepService:o}}).state("aspirantesCambios",{url:"/aspirantes/cambios/:aspiranteId",templateProvider:["$templateCache",function(e){return e.get("aspirantes/addModify/aspiranteAddModify.html")}],controller:"AspiranteAddModify",controllerAs:"vm",resolve:{getAspirantePrepService:o}})}function t(e){return e.aspirantesRest().query()}function o(e,t){return t.aspiranteId?e.aspirantesRest().get({id:t.aspiranteId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["aspirantesService"],o.$inject=["aspirantesService","$stateParams"]}(),function(){"use strict";function e(e){e.state("autoridades",{url:"/autoridades",templateProvider:["$templateCache",function(e){return e.get("autoridades/list/autoridades.html")}],controller:"Autoridades",controllerAs:"vm",resolve:{autoridadesPrepService:t}}).state("autoridadesDetalle",{url:"/autoridades/:autoridadId",templateProvider:["$templateCache",function(e){return e.get("autoridades/detail/autoridadDetalle.html")}],controller:"AutoridadDetalle",controllerAs:"vm",resolve:{getAutoridadPrepService:o,getMapsPrepService:r}}).state("autoridadesCambios",{url:"/autoridades/cambios/:autoridadId",templateProvider:["$templateCache",function(e){return e.get("autoridades/addModify/autoridadAddModify.html")}],controller:"AutoridadAddModify",controllerAs:"vm",resolve:{getAutoridadPrepService:o}})}function t(e){return e.autoridadesRest().query()}function o(e,t){return t.autoridadId?e.autoridadesRest().get({id:t.autoridadId}):!1}function r(e,t,o){return t.$promise.then(function(t){var r=t.direccion.calle+" "+t.direccion.numero+" "+t.direccion.municipio+" "+t.direccion.provincia+" "+t.direccion.cp;return o.geoCodingAPI(r).then(function(t){if(t.data.results.length){var o=t.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["autoridadesService"],o.$inject=["autoridadesService","$stateParams"],r.$inject=["uiGmapGoogleMapApi","getAutoridadPrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:t,cofradesBajasPrepService:o}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:r,getMapsPrepService:a}}).state("cofradesCambios",{url:"/cofrades/cambios/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/addModify/cofradeAddModify.html")}],controller:"CofradeAddModify",controllerAs:"vm",resolve:{getCofradePrepService:r}})}function t(e){return e.cofradesRest().query()}function o(e){return e.cofradesBajasRest().query()}function r(e,t){return t.cofradeId?e.cofradesRest().get({id:t.cofradeId}):!1}function a(e,t,o){return t.$promise.then(function(t){var r=t.datosPersonales.direccion.calle+" "+t.datosPersonales.direccion.numero+" "+t.datosPersonales.direccion.municipio+" "+t.datosPersonales.direccion.provincia+" "+t.datosPersonales.direccion.cp;return o.geoCodingAPI(r).then(function(t){if(t.data.results.length){var o=t.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["cofradesService"],o.$inject=["cofradesService"],r.$inject=["cofradesService","$stateParams"],a.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("costaleros",{url:"/costaleros",templateProvider:["$templateCache",function(e){return e.get("costaleros/list/costaleros.html")}],controller:"Costaleros",controllerAs:"vm",resolve:{costalerosPrepService:t}}).state("costalerosDetalle",{url:"/costaleros/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/detail/costaleroDetalle.html")}],controller:"CostaleroDetalle",controllerAs:"vm",resolve:{getCostaleroPrepService:o}}).state("costalerosCambios",{url:"/costaleros/cambios/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/addModify/costaleroAddModify.html")}],controller:"CostaleroAddModify",controllerAs:"vm",resolve:{getCostaleroPrepService:o}})}function t(e){return e.costalerosRest().query()}function o(e,t){return t.costaleroId?e.costalerosRest().get({id:t.costaleroId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["costalerosService"],o.$inject=["costalerosService","$stateParams"]}(),function(){"use strict";function e(e){e.state("papeletasSitios",{url:"/papeletasSitios",templateProvider:["$templateCache",function(e){return e.get("papeletasSitios/list/papeletasSitios.html")}],controller:"PapeletasSitios",controllerAs:"vm",resolve:{papeletasSitiosPrepService:t}}).state("papeletasSitiosCambios",{url:"/papeletasSitios/cambios",templateProvider:["$templateCache",function(e){return e.get("papeletasSitios/addModify/papeletaSitioAddModify.html")}],controller:"PapeletaSitioAddModify",controllerAs:"vm"})}function t(e){return e.papeletasSitiosRest().query({anios:!0})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["papeletasSitiosService"]}(),function(){"use strict";function e(e){e.state("sectores",{url:"/sectores",templateProvider:["$templateCache",function(e){return e.get("sectores/list/sectores.html")}],controller:"Sectores",controllerAs:"vm",resolve:{sectoresPrepService:t}}).state("sectoresCambios",{url:"/sectores/cambios/:sectorId/:calle",templateProvider:["$templateCache",function(e){return e.get("sectores/addModify/sectorAddModify.html")}],controller:"SectorAddModify",controllerAs:"vm",resolve:{getSectorPrepService:o}})}function t(e){return e.sectoresRest().query()}function o(e,t){return t.sectorId?e.sectoresRest().get({id:t.sectorId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["sectoresService"],o.$inject=["sectoresService","$stateParams"]}(),function(){"use strict";function e(e,t){function o(t){e(t).toggle()}function r(e,r){o(r),t.go(e)}var a=this;a.toggleSidenav=o,a.navigateTo=r}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e){e.state("directivos",{url:"/directivos",templateProvider:["$templateCache",function(e){return e.get("directivos/list/directivos.html")}],controller:"Directivos",controllerAs:"vm",resolve:{directivosPrepService:t}}).state("directivosDetalle",{url:"/directivos/:directivoId",templateProvider:["$templateCache",function(e){return e.get("directivos/detail/directivoDetalle.html")}],controller:"DirectivoDetalle",controllerAs:"vm",resolve:{getDirectivoPrepService:o}}).state("directivosCambios",{url:"/directivos/cambios/:directivoId",templateProvider:["$templateCache",function(e){return e.get("directivos/addModify/directivoAddModify.html")}],controller:"DirectivoAddModify",controllerAs:"vm",resolve:{getDirectivoPrepService:o}})}function t(e){return e.directivosRest().query()}function o(e,t){return t.directivoId?e.directivosRest().get({id:t.directivoId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["directivosService"],o.$inject=["directivosService","$stateParams"]}(),function(){"use strict";function e(e,t,o,r,a,n,i){function c(){a?a.$promise.then(s):l()}function s(e){return h.aspirante=e,!0}function l(){h.newCofrade=!0,h.aspirante={cofrade:null,fecha:(new Date).toLocaleDateString()}}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.aspirante.cofrade=e?e.id:null}function p(t){t?h.aspirante.cofrade?(h.aspirante.cofrade=h.aspirante.cofrade.id?h.aspirante.cofrade.id:h.aspirante.cofrade,n.aspirantesRest().save(h.aspirante,m,v)):(e.aspiranteForm.cofrade.$error.required=!0,g()):g()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("aspirantes")}function v(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,c()}angular.module("app").controller("AspiranteAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getAspirantePrepService","aspirantesService","cofradesService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.aspirantes=e})}var o=this;o.aspirantes=null,t()}angular.module("app").controller("Aspirantes",e),e.$inject=["aspirantesPrepService"]}(),function(){"use strict";function e(e,t,o,r,a,n,i){function c(){a?a.$promise.then(s):l()}function s(e){return h.autoridad=e,h.calleSelected={calle:h.autoridad.direccion.calle,cp:h.autoridad.direccion.cp,provincia:h.autoridad.direccion.provincia,municipio:h.autoridad.direccion.municipio},!0}function l(){h.newCofrade=!0,h.autoridad={direccion:{}}}function u(){window.history.back()}function d(e){return i.getCalles(e).then(function(e){return e.data})}function f(e){e?(h.autoridad.direccion.calle=e.calle,h.autoridad.direccion.municipio=e.municipio,h.autoridad.direccion.cp=e.cp,h.autoridad.direccion.provincia=e.provincia):(h.autoridad.direccion.calle=null,h.autoridad.direccion.municipio=null,h.autoridad.direccion.cp=null,h.autoridad.direccion.provincia=null)}function p(e){e?(h.autoridad.direccion.calle=h.autoridad.direccion.calle?h.autoridad.direccion.calle:h.searchText,n.autoridadesRest().save(h.autoridad,m,v)):g()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("autoridades")}function v(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,c()}angular.module("app").controller("AutoridadAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getAutoridadPrepService","autoridadesService","cofradesService"]}(),function(){"use strict";function e(e,t,o){function r(){return t.$promise.then(function(e){n.autoridad=e,n.maps=o})}function a(t,o){e.go("autoridadesCambios",{autoridadId:t})}var n=this;n.modifyAutoridad=a,r()}angular.module("app").controller("AutoridadDetalle",e),e.$inject=["$state","getAutoridadPrepService","getMapsPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.autoridades=e})}var o=this;o.autoridades=null,t()}angular.module("app").controller("Autoridades",e),e.$inject=["autoridadesPrepService"]}(),function(){"use strict";function e(e,t,o,r,a,n,i){function c(){a?a.$promise.then(s):n.getRegistros().then(function(e){S.cofrade.numeroOrden=e.data.numeroOrden,S.cofrade.numeroCofrade=e.data.numeroCofrade})}function s(e){return S.cofrade=e,S.calleSelected={calle:S.cofrade.datosPersonales.direccion.calle,cp:S.cofrade.datosPersonales.direccion.cp,provincia:S.cofrade.datosPersonales.direccion.provincia,municipio:S.cofrade.datosPersonales.direccion.municipio},S.fechaNacimiento=S.cofrade.datosPersonales.fechaNacimiento,S.fechaInscripcion=S.cofrade.datosPersonales.fechaInscripcion,S.cofrade.datosFinancieros=S.cofrade.datosFinancieros||{cuenta:{},deuda:[]},S.cofrade.datosFinancieros.cuenta=S.cofrade.datosFinancieros.cuenta||{},S.cofrade.datosFinancieros.deuda=S.cofrade.datosFinancieros.deuda||[],!0}function l(){window.history.back()}function u(e){return n.getCalles(e).then(function(e){return e.data})}function d(e){e?(S.cofrade.datosPersonales.direccion.calle=e.calle,S.cofrade.datosPersonales.direccion.municipio=e.municipio,S.cofrade.datosPersonales.direccion.cp=e.cp,S.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):(S.cofrade.datosPersonales.direccion.calle=null,S.cofrade.datosPersonales.direccion.municipio=null,S.cofrade.datosPersonales.direccion.cp=null,S.cofrade.datosPersonales.direccion.provincia=null,S.sector=null,S.nuevaCalle=!0)}function f(e){i.sectoresRest().query({calle:e},function(e){S.sector=e[0].numeroSector,S.nuevaCalle=!1})}function p(){S.cofrade.datosFinancieros.cuenta.iban&&(S.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")(S.cofrade.datosFinancieros.cuenta.iban))}function m(){S.cofrade.datosFinancieros.cuenta.cc&&(S.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")(S.cofrade.datosFinancieros.cuenta.cc))}function v(e){function r(){s.save(S.cofrade,g,h)}function a(){i.sectoresRest().get({sector:S.sector},function(e){var a=e[0];a?(a.cofrade=a.cofrade.id,a.calles.push(S.searchText),a.$save(null,r,h)):o.show(o.simple().content("El sector "+S.sector+" no existe!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var c={cuenta:{},deuda:[]};S.cofrade.datosPersonales.direccion.calle=S.searchText,JSON.stringify(S.cofrade.datosFinancieros)===JSON.stringify(c)&&delete S.cofrade.datosFinancieros;var s=n.cofradesRest();S.nuevaCalle?a():r()}else $()}function g(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("cofrades")}function h(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function $(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var S=this;S.nuevaCalle=!0,S.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:(new Date).toLocaleDateString(),fechaNacimiento:(new Date).toLocaleDateString()}},S.backState=l,S.querySearch=u,S.selectedItemChange=d,S.calcularCC=p,S.calcularIban=m,S.guardar=v,c()}angular.module("app").controller("CofradeAddModify",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,t,o,r){function a(){return o.$promise.then(function(e){i.cofrade=e,i.cofrade.datosFinancieros&&i.cofrade.datosFinancieros.cuenta&&(i.iban=t("parseIban")(i.cofrade.datosFinancieros.cuenta.iban),i.cc=t("parseCC")(i.cofrade.datosFinancieros.cuenta.cc)),i.maps=r})}function n(t,o){e.go("cofradesCambios",{cofradeId:t})}var i=this;i.cofrade=null,i.maps=null,i.modifyCofrade=n,a()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,t){function o(){return e.$promise.then(function(e){r.nextPage=e.next,r.cofrades=e.results}),t.$promise.then(function(e){r.nextPageBajas=e.next,r.cofradesBajas=e.results})}var r=this;r.cofrades=null,r.nextPage=null,r.cofradesBajas=null,r.nextPageBajas=null,r.selectedTab=0,o()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,t,o){var r=t[0];t.bind("scroll",function(){r.scrollTop+r.offsetHeight>=r.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var t="",o=0;o<e.length;o++)o>0&&o%4===0&&(t+=" "),t+=e[o];return t}}function t(){return function(e){e=e||"";var t="";return t=e.substr(0,4)+"-",t+=e.substr(4,4)+"-",t+=e.substr(8,2)+"-",t+=e.substr(10,10)}}function o(){return function(e){return e=e||"",e.substr(4,20)}}function r(){function e(e){for(var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",o=[],r=0;r<e.length;r++){var a=t.indexOf(e[r]);o.push(0>a?"-":a)}return o.join("")}function t(e,t){for(var o=10,r=e.length,a=0,n=0;r>n;n+=o){var i=a+""+e.substr(n,o);a=i%t}return a}function o(e,t){for(e+="";e.length<t;)e="0"+e;return e}return function(r){var a="ES",n=r+e(a)+"00",i=t(n,97);return a+o(98-i,2)+r}}angular.module("app").filter("parseIban",e).filter("parseCC",t).filter("calcularIban",r).filter("calcularCC",o)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales&&(e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento).toLocaleDateString(),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion).toLocaleDateString()),e.fecha&&(e.fecha=new Date(e.fecha).toLocaleDateString()),e}}function t(){return function(e){var t=null;return e.datosPersonales?(t=e.datosPersonales.fechaNacimiento.split("/"),e.datosPersonales.fechaNacimiento=t[2]+"-"+t[1]+"-"+t[0],t=e.datosPersonales.fechaInscripcion.split("/"),e.datosPersonales.fechaInscripcion=t[2]+"-"+t[1]+"-"+t[0]):e.fecha?(t=e.fecha.split("/"),e.fecha=t[2]+"-"+t[1]+"-"+t[0]):e=new Date(e).toLocaleDateString(),e}}angular.module("app").filter("stringToDateFormat",e).filter("formatDates",t)}(),function(){"use strict";function e(){return function(t){var o=t instanceof Array;for(var r in t)null===t[r]?o?t.splice(r,1):delete t[r]:"object"==typeof t[r]&&e(t[r]);return t}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/aspirantes/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,o){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}return{aspirantesRest:o}}angular.module("app").factory("aspirantesService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/autoridades/:id.json:json",null,{query:{method:"GET",isArray:!0},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("removeNulls")(e))}}})}return{autoridadesRest:o}}angular.module("app").factory("autoridadesService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t,o){function r(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,t){return o("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,t){return angular.toJson(o("formatDates")(o("removeNulls")(e)))}}})}function a(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(e){return t.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function i(){return t.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:r,cofradesBajasRest:a,getCalles:n,getRegistros:i}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/costaleros/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,o){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}return{costalerosRest:o}}angular.module("app").factory("costalerosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/directivos/:id.json:json",null,{query:{method:"GET",isArray:!0},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("removeNulls")(e))}}})}return{directivosRest:o}}angular.module("app").factory("directivosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function t(t){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:t,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:t}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/papeletasSitios/:id.json:json",null,{query:{method:"GET",isArray:!0},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("removeNulls")(e))}}})}return{papeletasSitiosRest:o}}angular.module("app").factory("papeletasSitiosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function t(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:t}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t,o,r,a,n,i,c){function s(){n&&n.$promise.then(l)}function l(e){return h.costalero=e,h.cofradeSelected=h.costalero.cofrade,!0}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),c.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.costalero.cofrade=e?e.id:null}function p(t){t?(h.costalero.fecha=""===h.costalero.fecha?null:h.costalero.fecha,h.costalero.cofrade?i.costalerosRest().save(h.costalero,m,v):(e.costaleroForm.cofrade.$error.required=!0,g())):g()}function m(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("costaleros")}function v(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,s()}angular.module("app").controller("CostaleroAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","getCostaleroPrepService","costalerosService","cofradesService"]}(),function(){"use strict";function e(e,t){function o(){return t.$promise.then(function(e){a.costalero=e})}function r(t,o){e.go("costalerosCambios",{costaleroId:t})}var a=this;a.modifyCostalero=r,o()}angular.module("app").controller("CostaleroDetalle",e),e.$inject=["$state","getCostaleroPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.costaleros=e})}var o=this;o.costaleros=null,t()}angular.module("app").controller("Costaleros",e),e.$inject=["costalerosPrepService"]}(),function(){"use strict";function e(e,t,o,r,a,n,i){function c(){v.newCofrade=!0,v.fecha=(new Date).toLocaleDateString(),v.papeletaSitio={cofrade:null}}function s(){window.history.back()}function l(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function u(e){v.papeletaSitio.cofrade=e?e.id:null}function d(o){o?v.papeletaSitio.cofrade?(v.papeletaSitio.fecha=v.fecha,t("formatDates")(v.papeletaSitio),n.papeletasSitiosRest().save({anio:new Date(v.papeletaSitio.fecha).getFullYear(),papeletas:[v.papeletaSitio]},f,p)):(e.papeletaSitioForm.cofrade.$error.required=!0,m()):m()}function f(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("papeletasSitios")}function p(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function m(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var v=this;v.newCofrade=!1,v.backState=s,v.querySearch=l,v.selectedItemChange=u,v.guardar=d,c()}angular.module("app").controller("PapeletaSitioAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","papeletasSitiosService","cofradesService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.papeletasSitios=e})}var o=this;o.papeletasSitios=null,t()}angular.module("app").controller("PapeletasSitios",e),e.$inject=["papeletasSitiosPrepService"]}(),function(){"use strict";function e(e,t,o,r,a,n,i,c,s){function l(){i?i.$promise.then(u):d()}function u(e){return C.sector=e[0],C.cofradeSelected=C.sector.cofrade,C.originSector=C.sector.numeroSector,"new"===n.calle?(C.newCalle=!0,C.indexCalle=C.sector.calles.length):C.indexCalle=C.sector.calles.indexOf(n.calle)>-1?C.sector.calles.indexOf(n.calle):null,!0}function d(){C.newEncargado=!0,C.sector={cofrade:null}}function f(){window.history.back()}function p(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),s.cofradesRest().query(t).$promise.then(function(e){return e.results})}function m(e){C.sector.cofrade=e?e.id:null}function v(t){t?C.sector.cofrade?C.sector.numeroSector===C.originSector||C.newEncargado?g():h():(e.sectorForm.cofrade.$error.required=!0,P()):P()}function g(){c.sectoresRest().save(C.sector,$,S)}function h(){c.sectoresRest().get({sector:C.sector.numeroSector}).$promise.then(function(e){return e[0]?(e[0].cofrade=e[0].cofrade.id,e[0].calles.push(C.sector.calles[C.indexCalle]),void e[0].$save(null,function(){C.sector.calles.splice(C.indexCalle,1),C.sector.numeroSector=C.originSector,g()},S)):void r.show(r.simple().content("No existe ese sector").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))})}function $(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("sectores")}function S(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function P(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var C=this;C.newEncargado=!1,C.newCalle=!1,C.indexCalle=null,C.backState=f,C.querySearch=p,C.selectedItemChange=m,C.guardar=v,l()}angular.module("app").controller("SectorAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","$stateParams","getSectorPrepService","sectoresService","cofradesService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.sectores=e})}var o=this;o.sectores=null,t()}angular.module("app").controller("Sectores",e),e.$inject=["sectoresPrepService"]}(),function(){"use strict";function e(e,t,o,r,a,n,i){function c(){a?a.$promise.then(s):l()}function s(e){return h.directivo=e,!0}function l(){h.newCofrade=!0,h.directivo={cofrade:null,fecha:(new Date).toLocaleDateString()}}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.directivo.cofrade=e?e.id:null}function p(t){t?h.directivo.cofrade?(h.directivo.cofrade=h.directivo.cofrade.id?h.directivo.cofrade.id:h.directivo.cofrade,n.directivosRest().save(h.directivo,m,v)):(e.directivoForm.cofrade.$error.required=!0,g()):g()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("directivos")}function v(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,c()}angular.module("app").controller("DirectivoAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getDirectivoPrepService","directivosService","cofradesService"]}(),function(){"use strict";function e(e,t){function o(){return t.$promise.then(function(e){a.directivo=e})}function r(t,o){e.go("directivosCambios",{directivoId:t})}var a=this;a.modifyDirectivo=r,o()}angular.module("app").controller("DirectivoDetalle",e),e.$inject=["$state","getDirectivoPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.directivos=e})}var o=this;o.directivos=null,t()}angular.module("app").controller("Directivos",e),e.$inject=["directivosPrepService"]}(),function(){"use strict";function e(e,t){function o(){return t.$promise.then(function(e){a.aspirante=e})}function r(t,o){e.go("aspirantesCambios",{aspiranteId:t})}var a=this;a.modifyAspirante=r,o()}angular.module("app").controller("AspiranteDetalle",e),e.$inject=["$state","getAspirantePrepService"]}(),function(){"use strict";function e(e){function t(t,o){e.go("aspirantesDetalle",{aspiranteId:t})}function o(t,o){o.stopPropagation(),e.go("aspirantesCambios",{aspiranteId:t})}var r=this;r.modifyAspirante=o,r.goToAspirante=t}angular.module("app").controller("ListaAspirantes",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/aspirantes/list/aspirantes.directive.html",
scope:{aspirantes:"=aspirantes"},link:function(e,t){e.$watch("vm.aspirantes",function(t){t&&(e.vm.aspirantesShort=e.vm.aspirantes.map(function(e){var t={id:e.id,fecha:e.fecha};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaAspirantes",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaAspirantes",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar aspirante").content("¿Está seguro que desea eliminar este aspirante?<br>Perderá su antiguedad.").ariaLabel("Eliminar aspirante").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){var r=o.aspirantesRest().get({id:t},function(){r.$delete({id:t}).then(function(){"aspirantes"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("aspirantes")})})}var n=this;n.removeAspirante=r}angular.module("app").controller("RemoveAspirante",e),e.$inject=["$state","$mdDialog","aspirantesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/aspirantes/remove/removeAspirante.directive.html",scope:{aspiranteId:"=aspirante"},controller:"RemoveAspirante",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeAspirante",e)}(),function(){"use strict";function e(e){function t(t,o){e.go("autoridadesDetalle",{autoridadId:t})}function o(t,o){o.stopPropagation(),e.go("autoridadesCambios",{autoridadId:t})}var r=this;r.modifyAutoridad=o,r.goToAutoridad=t}angular.module("app").controller("ListaAutoridades",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/autoridades/list/autoridades.directive.html",scope:{autoridades:"=autoridades"},controller:"ListaAutoridades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaAutoridades",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar autoridad").content("¿Está seguro que desea eliminar este autoridad?").ariaLabel("Eliminar autoridad").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){var r=o.autoridadesRest().get({id:t},function(){r.$delete({id:t}).then(function(){"autoridades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("autoridades")})})}var n=this;n.removeAutoridad=r}angular.module("app").controller("RemoveAutoridad",e),e.$inject=["$state","$mdDialog","autoridadesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/autoridades/remove/removeAutoridad.directive.html",scope:{autoridadId:"=autoridad"},controller:"RemoveAutoridad",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeAutoridad",e)}(),function(){"use strict";function e(e,t,o,r){function a(){p.bajas?i():n()}function n(){if(p.nextPage){var e={page:p.nextPage};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=p.cofrades.concat(e.results)})}}function i(){if(p.nextPageBajas){var e={page:p.nextPageBajas};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=p.cofradesBajas.concat(e.results)})}}function c(){p.bajas?l():s()}function s(){var e={};e[p.filtro]=p.buscar,r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=e.results})}function l(){var e={};e[p.filtro]=p.buscar,r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=e.results})}function u(){p.buscar=null,p.typeInput="nombre"===p.filtro?"text":"number",p.search()}function d(e,t){o.go("cofradesDetalle",{cofradeId:e})}function f(e,t){t.stopPropagation(),o.go("cofradesCambios",{cofradeId:e})}var p=this;p.filtro="nombre",p.typeInput="text",p.buscar=null,p.search=c,p.radioChange=u,p.goToCofrade=d,p.modifyCofrade=f;var m=e.$on("scrollDown",a);t.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}(),function(){"use strict";function e(e,t){function o(e,o){o.stopPropagation(),t.show({templateUrl:"./templates/directives/cofrades/remove/dialogTmpl/removeCofrade.tmpl.html",locals:{id:e},controller:"RemoveCofradeTmpl",controllerAs:"vm",bindToController:!0,targetEvent:o,clickOutsideToClose:!0}).then(function(){})}var r=this;r.removeCofrade=o}angular.module("app").controller("RemoveCofrade",e),e.$inject=["$state","$mdDialog"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/remove/removeCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RemoveCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCofrade",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){var r=o.cofradesRest().get({id:t},function(){r.baja=null,r.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.restoreCofrade=r}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e){function t(t,o){e.go("costalerosDetalle",{costaleroId:t})}function o(t,o){o.stopPropagation(),e.go("costalerosCambios",{costaleroId:t})}var r=this;r.modifyCostalero=o,r.goToCostalero=t}angular.module("app").controller("ListaCostaleros",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/list/costaleros.directive.html",scope:{costaleros:"=costaleros"},link:function(e,t){e.$watch("vm.costaleros",function(t){t&&(e.vm.costalerosShort=e.vm.costaleros.map(function(e){var t={id:e.id,sitio:e.sitio};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaCostaleros",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCostaleros",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar costalero").content("¿Está seguro que desea eliminar este costalero?<br>Dejará su sitio libre.").ariaLabel("Eliminar costalero").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){var r=o.costalerosRest().get({id:t},function(){r.cofrade=null,r.talla=null,r.fecha=null,r.$save().then(function(){"costaleros"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("costaleros")})})}var n=this;n.removeCostalero=r}angular.module("app").controller("RemoveCostalero",e),e.$inject=["$state","$mdDialog","costalerosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/remove/removeCostalero.directive.html",scope:{costaleroId:"=costalero"},controller:"RemoveCostalero",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCostalero",e)}(),function(){"use strict";function e(e){function t(t,o){e.go("directivosDetalle",{directivoId:t})}function o(t,o){o.stopPropagation(),e.go("directivosCambios",{directivoId:t})}var r=this;r.modifyDirectivo=o,r.goToDirectivo=t}angular.module("app").controller("ListaDirectivos",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/directivos/list/directivos.directive.html",scope:{directivos:"=directivos"},link:function(e,t){e.$watch("vm.directivos",function(t){t&&(e.vm.directivosShort=e.vm.directivos.map(function(e){var t={id:e.id,posicion:e.posicion};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaDirectivos",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaDirectivos",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar directivo").content("¿Está seguro que desea eliminar este directivo?").ariaLabel("Eliminar directivo").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){var r=o.directivosRest().get({id:t},function(){r.$delete({id:t}).then(function(){"directivos"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("directivos")})})}var n=this;n.removeDirectivo=r}angular.module("app").controller("RemoveDirectivo",e),e.$inject=["$state","$mdDialog","directivosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/directivos/remove/removeDirectivo.directive.html",scope:{directivoId:"=directivo"},controller:"RemoveDirectivo",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeDirectivo",e)}(),function(){"use strict";function e(e,t){function o(){t.papeletasSitiosRest().query({anio:r.anio},function(e){r.papeletasSitio=e[0]})}var r=this;r.anio=null,r.getAnio=o}angular.module("app").controller("ListaPapeletasSitios",e),e.$inject=["$state","papeletasSitiosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/papeletasSitios/list/papeletasSitios.directive.html",scope:{anios:"=papeletas"},controller:"ListaPapeletasSitios",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaPapeletasSitios",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar papeleta sitio").content("¿Está seguro que desea eliminar esta papeleta de sitio?").ariaLabel("Eliminar papeletaSitio").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){o.papeletasSitiosRest().save({anio:t.anio,papeletas:[t.papeleta],remove:!0},function(){"papeletasSitios"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("papeletasSitios")})}var n=this;n.removePapeletaSitio=r}angular.module("app").controller("RemovePapeletaSitio",e),e.$inject=["$state","$mdDialog","papeletasSitiosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/papeletasSitios/remove/removePapeletaSitio.directive.html",scope:{papeletaSitio:"=papeleta"},controller:"RemovePapeletaSitio",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removePapeletaSitio",e)}(),function(){"use strict";function e(e){function t(e,t){e="callesSector"+e,angular.element(document.getElementById(e)).toggleClass("ocultar")}function o(t,o){o.stopPropagation(),e.go("sectoresCambios",{sectorId:t})}function r(t,o,r){r.stopPropagation(),e.go("sectoresCambios",{sectorId:t,calle:o})}function a(t,o){o.stopPropagation(),e.go("sectoresCambios",{sectorId:t,calle:"new"})}var n=this;n.modifySector=o,n.modifyCalle=r,n.addCalle=a,n.showCalles=t}angular.module("app").controller("ListaSectores",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/sectores/list/sectores.directive.html",scope:{sectores:"=sectores"},link:function(e,t){e.$watch("vm.sectores",function(t){t&&(e.vm.sectoresShort=e.vm.sectores.map(function(e){var t={id:e.id,numeroSector:e.numeroSector,calles:e.calles};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaSectores",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaSectores",e)}(),function(){"use strict";function e(e,t,o,r){function a(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar sector").content("¿Está seguro que desea eliminar este sector?").ariaLabel("Eliminar sector").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){var a=r.sectoresRest().get({id:t},function(){0!==a[0].calles.length?o.show(o.simple().content("No se puede eliminar un sector con calles asignadas").position("top right").hideDelay(3e3)):a[0].$delete({id:t}).then(function(){"sectores"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("sectores")})})}var i=this;i.removeSector=a}angular.module("app").controller("RemoveSector",e),e.$inject=["$state","$mdDialog","$mdToast","sectoresService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/sectores/remove/removeSector.directive.html",scope:{sectorId:"=sector"},controller:"RemoveSector",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeSector",e)}(),function(){"use strict";function e(e,t,o){function r(){t.cancel()}function a(t){var r=o.cofradesRest().get({id:t},function(){r.baja={motivo:n.motivoBaja,fechaBaja:(new Date).toLocaleDateString()},r.numeroCofrade=null,r.$save({updateNumeroCofrade:!0}).then(function(){n.closeDialog(),"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.closeDialog=r,n.removeEndCofrade=a}angular.module("app").controller("RemoveCofradeTmpl",e),e.$inject=["$state","$mdDialog","cofradesService"]}();
//# sourceMappingURL=data:application/json;base64,
