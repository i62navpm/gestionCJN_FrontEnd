!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,r){r.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:r}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:o,getMapsPrepService:n}}).state("cofradesCambios",{url:"/cofrades/nuevos/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/add/cofradeNuevo.html")}],controller:"CofradeNuevo",controllerAs:"vm",resolve:{getCofradePrepService:o,getCallesPrepService:t}})}function r(e){return e.cofradesRest().query()}function o(e,r){return r.cofradeId?e.cofradesRest().get({id:r.cofradeId}):!1}function t(e){return e.getCalles().then(function(e){return e.data})}function n(e,r,o){return r.$promise.then(function(r){var t=r.datosPersonales.direccion.calle+" "+r.datosPersonales.direccion.numero+" "+r.datosPersonales.direccion.municipio+" "+r.datosPersonales.direccion.provincia+" "+r.datosPersonales.direccion.cp;return o.geoCodingAPI(t).then(function(r){if(r.data.results.length){var o=r.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],r.$inject=["cofradesService"],o.$inject=["cofradesService","$stateParams"],t.$inject=["cofradesService"],n.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e,r){function o(r){e(r).toggle()}function t(e,t){o(t),r.go(e)}var n=this;n.toggleSidenav=o,n.navigateTo=t}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,r,o,t,n,a,c,i){function s(){n?n.$promise.then(function(e){return $.cofrade=e,$.calleSelected={calle:$.cofrade.datosPersonales.direccion.calle,cp:$.cofrade.datosPersonales.direccion.cp,provincia:$.cofrade.datosPersonales.direccion.provincia,municipio:$.cofrade.datosPersonales.direccion.municipio},p($.cofrade.datosPersonales.direccion.calle),$.cofrade.datosFinancieros=$.cofrade.datosFinancieros||{cuenta:{},deuda:[]},$.cofrade.datosFinancieros.cuenta=$.cofrade.datosFinancieros.cuenta||{},$.cofrade.datosFinancieros.deuda=$.cofrade.datosFinancieros.deuda||[],!0}):c.getRegistros().then(function(e){$.cofrade.numeroOrden=e.data.numeroOrden,$.cofrade.numeroCofrade=e.data.numeroCofrade}),$.calles=a}function u(){window.history.back()}function l(e){var r=e?$.calles.filter(d(e)):$.calles;return r}function d(e){var r=angular.lowercase(e);return function(e){return 0===angular.lowercase(e.calle).indexOf(r)}}function f(e){e?($.cofrade.datosPersonales.direccion.calle=e.calle,$.cofrade.datosPersonales.direccion.municipio=e.municipio,$.cofrade.datosPersonales.direccion.cp=e.cp,$.cofrade.datosPersonales.direccion.provincia=e.provincia,p(e.calle)):($.cofrade.datosPersonales.direccion.calle=null,$.cofrade.datosPersonales.direccion.municipio=null,$.cofrade.datosPersonales.direccion.cp=null,$.cofrade.datosPersonales.direccion.provincia=null,$.sector=null,$.nuevaCalle=!0)}function p(e){i.sectoresRest().query({calle:e},function(e){$.sector=e[0].numeroSector,$.nuevaCalle=!1})}function g(){$.cofrade.datosFinancieros.cuenta.iban&&($.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")($.cofrade.datosFinancieros.cuenta.iban))}function m(){$.cofrade.datosFinancieros.cuenta.cc&&($.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")($.cofrade.datosFinancieros.cuenta.cc))}function v(e){function t(){i.sectoresRest().get({sector:$.sector},function(e){var t=e[0];t?(t.calles.push($.searchText),t.$save(),a.save($.cofrade,h,P)):o.show(o.simple().content("El sector "+$.sector+" no existe!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var n={cuenta:{},deuda:[]};$.cofrade.datosPersonales.direccion.calle=$.searchText,JSON.stringify($.cofrade.datosFinancieros)===JSON.stringify(n)&&delete $.cofrade.datosFinancieros;var a=c.cofradesRest();$.nuevaCalle?t():a.save($.cofrade,h,P)}else C()}function h(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),t.go("cofrades")}function P(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))}function C(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(r[0].querySelector("#toastBounds")).position("top right"))}var $=this;$.nuevaCalle=!0,$.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:new Date,fechaNacimiento:new Date}},$.backState=u,$.querySearch=l,$.selectedItemChange=f,$.calcularCC=g,$.calcularIban=m,$.guardar=v,s()}angular.module("app").controller("CofradeNuevo",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","getCallesPrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,r,o,t){function n(){return o.$promise.then(function(e){c.cofrade=r("dateToString")(e),c.cofrade.datosFinancieros&&c.cofrade.datosFinancieros.cuenta&&(c.iban=r("parseIban")(c.cofrade.datosFinancieros.cuenta.iban),c.cc=r("parseCC")(c.cofrade.datosFinancieros.cuenta.cc)),c.maps=t})}function a(r,o){e.go("cofradesCambios",{cofradeId:r})}var c=this;c.cofrade=null,c.maps=null,c.modifyCofrade=a,n()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e){function r(){return e.$promise.then(function(e){o.nextPage=e.next,o.cofrades=e.results})}var o=this;o.cofrades=null,o.nextPage=null,r()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService"]}(),function(){"use strict";function e(e){function r(){return e.$promise.then(function(e){t.cofrade=e,t.cofrade.datosFinancieros||(t.cofrade.datosFinancieros={deuda:[]})})}function o(){window.history.back()}var t=this;t.cofrade=null,t.cofrade={datosFinancieros:{deuda:[]}},t.backState=o,r()}angular.module("app").controller("CofradeModificar",e),e.$inject=["getCofradePrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,r,o){var t=r[0];r.bind("scroll",function(){t.scrollTop+t.offsetHeight>=t.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var r="",o=0;o<e.length;o++)o>0&&o%4===0&&(r+=" "),r+=e[o];return r}}function r(){return function(e){e=e||"";var r="";return r=e.substr(0,4)+"-",r+=e.substr(4,4)+"-",r+=e.substr(8,2)+"-",r+=e.substr(10,10)}}function o(){return function(e){return e=e||"",e.substr(4,20)}}function t(){function e(e){for(var r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",o=[],t=0;t<e.length;t++){var n=r.indexOf(e[t]);o.push(0>n?"-":n)}return o.join("")}function r(e,r){for(var o=10,t=e.length,n=0,a=0;t>a;a+=o){var c=n+""+e.substr(a,o);n=c%r}return n}function o(e,r){for(e+="";e.length<r;)e="0"+e;return e}return function(t){var n="ES",a=t+e(n)+"00",c=r(a,97);return n+o(98-c,2)+t}}angular.module("app").filter("parseIban",e).filter("parseCC",r).filter("calcularIban",t).filter("calcularCC",o)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion),e}}function r(){return function(e){return e.datosPersonales.fechaNacimiento=e.datosPersonales.fechaNacimiento.toLocaleDateString(),e.datosPersonales.fechaInscripcion=e.datosPersonales.fechaInscripcion.toLocaleDateString(),e}}angular.module("app").filter("stringToDate",e).filter("dateToString",r)}(),function(){"use strict";function e(){return function(r){var o=r instanceof Array;for(var t in r)null===r[t]?o?r.splice(t,1):delete r[t]:"object"==typeof r[t]&&e(r[t]);return r}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,r,o){function t(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,r){return o("stringToDate")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,r){return angular.toJson(o("removeNulls")(e))}}})}function n(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function a(){return r.get("http://127.0.0.1:5050/api/calles/").then(function(e){return angular.fromJson(e)})}function c(){return r.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:t,cofradesBajasRest:n,getCalles:a,getRegistros:c}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e){function r(r){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:r,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:r}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function r(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:r}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,r,o,t){function n(){if(u.nextPage){var e={page:u.nextPage};u.buscar&&(e[u.filtro]=u.buscar),t.cofradesRest().query(e,function(e){u.nextPage=e.next,u.cofrades=u.cofrades.concat(e.results)})}}function a(){var e={};e[u.filtro]=u.buscar,t.cofradesRest().query(e,function(e){u.nextPage=e.next,u.cofrades=e.results})}function c(){u.buscar=null,u.typeInput="nombre"===u.filtro?"text":"number"}function i(e,r){o.go("cofradesDetalle",{cofradeId:e})}function s(e,r){o.go("cofradesCambios",{cofradeId:e})}var u=this;u.filtro="nombre",u.typeInput="text",u.buscar=null,u.busqueda=a,u.radioChange=c,u.goToCofrade=i,u.modifyCofrade=s;var l=e.$on("scrollDown",n);r.$on("$destroy",function(){l(),l=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}();
//# sourceMappingURL=data:application/json;base64,
