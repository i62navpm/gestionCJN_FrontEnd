!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.interceptors.push("myHttpInterceptor")}function t(e){var t=angular.element(document.querySelector(".m-app-loading"));return{request:function(e){return"POST"===e.method&&t.css("display","block"),e},requestError:function(t){return e.reject(t)},response:function(e){return t.css("display","none"),e},responseError:function(r){return t.css("display","none"),e.reject(r)}}}angular.module("app").factory("myHttpInterceptor",t).config(e),e.$inject=["$httpProvider"],t.$inject=["$q"]}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,t){t.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("aspirantes",{url:"/aspirantes",templateProvider:["$templateCache",function(e){return e.get("aspirantes/list/aspirantes.html")}],controller:"Aspirantes",controllerAs:"vm",resolve:{aspirantesPrepService:t}}).state("aspirantesDetalle",{url:"/aspirantes/:aspiranteId",templateProvider:["$templateCache",function(e){return e.get("aspirantes/detail/aspiranteDetalle.html")}],controller:"AspiranteDetalle",controllerAs:"vm",resolve:{getAspirantePrepService:r}}).state("aspirantesCambios",{url:"/aspirantes/cambios/:aspiranteId",templateProvider:["$templateCache",function(e){return e.get("aspirantes/addModify/aspiranteAddModify.html")}],controller:"AspiranteAddModify",controllerAs:"vm",resolve:{getAspirantePrepService:r}})}function t(e){return e.aspirantesRest().query()}function r(e,t){return t.aspiranteId?e.aspirantesRest().get({id:t.aspiranteId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["aspirantesService"],r.$inject=["aspirantesService","$stateParams"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:t,cofradesBajasPrepService:r}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:o,getMapsPrepService:a}}).state("cofradesCambios",{url:"/cofrades/cambios/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/addModify/cofradeAddModify.html")}],controller:"CofradeAddModify",controllerAs:"vm",resolve:{getCofradePrepService:o}})}function t(e){return e.cofradesRest().query()}function r(e){return e.cofradesBajasRest().query()}function o(e,t){return t.cofradeId?e.cofradesRest().get({id:t.cofradeId}):!1}function a(e,t,r){return t.$promise.then(function(t){var o=t.datosPersonales.direccion.calle+" "+t.datosPersonales.direccion.numero+" "+t.datosPersonales.direccion.municipio+" "+t.datosPersonales.direccion.provincia+" "+t.datosPersonales.direccion.cp;return r.geoCodingAPI(o).then(function(t){if(t.data.results.length){var r=t.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:r.lat,longitude:r.lng},marker:{latitude:r.lat,longitude:r.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["cofradesService"],r.$inject=["cofradesService"],o.$inject=["cofradesService","$stateParams"],a.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("costaleros",{url:"/costaleros",templateProvider:["$templateCache",function(e){return e.get("costaleros/list/costaleros.html")}],controller:"Costaleros",controllerAs:"vm",resolve:{costalerosPrepService:t}}).state("costalerosDetalle",{url:"/costaleros/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/detail/costaleroDetalle.html")}],controller:"CostaleroDetalle",controllerAs:"vm",resolve:{getCostaleroPrepService:r}}).state("costalerosCambios",{url:"/costaleros/cambios/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/addModify/costaleroAddModify.html")}],controller:"CostaleroAddModify",controllerAs:"vm",resolve:{getCostaleroPrepService:r}})}function t(e){return e.costalerosRest().query()}function r(e,t){return t.costaleroId?e.costalerosRest().get({id:t.costaleroId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["costalerosService"],r.$inject=["costalerosService","$stateParams"]}(),function(){"use strict";function e(e,t){function r(t){e(t).toggle()}function o(e,o){r(o),t.go(e)}var a=this;a.toggleSidenav=r,a.navigateTo=o}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,t,r,o,a,n,s){function i(){a?a.$promise.then(c):l()}function c(e){return h.aspirante=e,!0}function l(){h.newCofrade=!0,h.aspirante={cofrade:null,fecha:(new Date).toLocaleDateString()}}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),s.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.aspirante.cofrade=e?e.id:null}function p(t){t?h.aspirante.cofrade?(h.aspirante.cofrade=h.aspirante.cofrade.id?h.aspirante.cofrade.id:h.aspirante.cofrade,n.aspirantesRest().save(h.aspirante,m,g)):(e.aspiranteForm.cofrade.$error.required=!0,v()):v()}function m(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),o.go("aspirantes")}function g(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function v(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,i()}angular.module("app").controller("AspiranteAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getAspirantePrepService","aspirantesService","cofradesService"]}(),function(){"use strict";function e(e,t){function r(){return t.$promise.then(function(e){a.aspirante=e})}function o(t,r){e.go("aspirantesCambios",{aspiranteId:t})}var a=this;a.modifyAspirante=o,r()}angular.module("app").controller("AspiranteDetalle",e),e.$inject=["$state","getAspirantePrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){r.aspirantes=e})}var r=this;r.aspirantes=null,t()}angular.module("app").controller("Aspirantes",e),e.$inject=["aspirantesPrepService"]}(),function(){"use strict";function e(e,t,r,o,a,n,s){function i(){a?a.$promise.then(c):n.getRegistros().then(function(e){C.cofrade.numeroOrden=e.data.numeroOrden,C.cofrade.numeroCofrade=e.data.numeroCofrade})}function c(e){return C.cofrade=e,C.calleSelected={calle:C.cofrade.datosPersonales.direccion.calle,cp:C.cofrade.datosPersonales.direccion.cp,provincia:C.cofrade.datosPersonales.direccion.provincia,municipio:C.cofrade.datosPersonales.direccion.municipio},C.fechaNacimiento=C.cofrade.datosPersonales.fechaNacimiento,C.fechaInscripcion=C.cofrade.datosPersonales.fechaInscripcion,C.cofrade.datosFinancieros=C.cofrade.datosFinancieros||{cuenta:{},deuda:[]},C.cofrade.datosFinancieros.cuenta=C.cofrade.datosFinancieros.cuenta||{},C.cofrade.datosFinancieros.deuda=C.cofrade.datosFinancieros.deuda||[],!0}function l(){window.history.back()}function u(e){return n.getCalles(e).then(function(e){return e.data})}function d(e){e?(C.cofrade.datosPersonales.direccion.calle=e.calle,C.cofrade.datosPersonales.direccion.municipio=e.municipio,C.cofrade.datosPersonales.direccion.cp=e.cp,C.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):(C.cofrade.datosPersonales.direccion.calle=null,C.cofrade.datosPersonales.direccion.municipio=null,C.cofrade.datosPersonales.direccion.cp=null,C.cofrade.datosPersonales.direccion.provincia=null,C.sector=null,C.nuevaCalle=!0)}function f(e){s.sectoresRest().query({calle:e},function(e){C.sector=e[0].numeroSector,C.nuevaCalle=!1})}function p(){C.cofrade.datosFinancieros.cuenta.iban&&(C.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")(C.cofrade.datosFinancieros.cuenta.iban))}function m(){C.cofrade.datosFinancieros.cuenta.cc&&(C.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")(C.cofrade.datosFinancieros.cuenta.cc))}function g(e){function o(){s.sectoresRest().get({sector:C.sector},function(e){var o=e[0];o?(o.calles.push(C.searchText),o.$save(),i.save(C.cofrade,v,h)):r.show(r.simple().content("El sector "+C.sector+" no existe!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var a={cuenta:{},deuda:[]};C.cofrade.datosPersonales.direccion.calle=C.searchText,JSON.stringify(C.cofrade.datosFinancieros)===JSON.stringify(a)&&delete C.cofrade.datosFinancieros;var i=n.cofradesRest();C.nuevaCalle?o():i.save(C.cofrade,v,h)}else $()}function v(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),o.go("cofrades")}function h(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function $(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var C=this;C.nuevaCalle=!0,C.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:(new Date).toLocaleDateString(),fechaNacimiento:(new Date).toLocaleDateString()}},C.backState=l,C.querySearch=u,C.selectedItemChange=d,C.calcularCC=p,C.calcularIban=m,C.guardar=g,i()}angular.module("app").controller("CofradeAddModify",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,t,r,o){function a(){return r.$promise.then(function(e){s.cofrade=e,s.cofrade.datosFinancieros&&s.cofrade.datosFinancieros.cuenta&&(s.iban=t("parseIban")(s.cofrade.datosFinancieros.cuenta.iban),s.cc=t("parseCC")(s.cofrade.datosFinancieros.cuenta.cc)),s.maps=o})}function n(t,r){e.go("cofradesCambios",{cofradeId:t})}var s=this;s.cofrade=null,s.maps=null,s.modifyCofrade=n,a()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,t){function r(){return e.$promise.then(function(e){o.nextPage=e.next,o.cofrades=e.results}),t.$promise.then(function(e){o.nextPageBajas=e.next,o.cofradesBajas=e.results})}var o=this;o.cofrades=null,o.nextPage=null,o.cofradesBajas=null,o.nextPageBajas=null,o.selectedTab=0,r()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,t,r){var o=t[0];t.bind("scroll",function(){o.scrollTop+o.offsetHeight>=o.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var t="",r=0;r<e.length;r++)r>0&&r%4===0&&(t+=" "),t+=e[r];return t}}function t(){return function(e){e=e||"";var t="";return t=e.substr(0,4)+"-",t+=e.substr(4,4)+"-",t+=e.substr(8,2)+"-",t+=e.substr(10,10)}}function r(){return function(e){return e=e||"",e.substr(4,20)}}function o(){function e(e){for(var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=[],o=0;o<e.length;o++){var a=t.indexOf(e[o]);r.push(0>a?"-":a)}return r.join("")}function t(e,t){for(var r=10,o=e.length,a=0,n=0;o>n;n+=r){var s=a+""+e.substr(n,r);a=s%t}return a}function r(e,t){for(e+="";e.length<t;)e="0"+e;return e}return function(o){var a="ES",n=o+e(a)+"00",s=t(n,97);return a+r(98-s,2)+o}}angular.module("app").filter("parseIban",e).filter("parseCC",t).filter("calcularIban",o).filter("calcularCC",r)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales&&(e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento).toLocaleDateString(),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion).toLocaleDateString()),e.fecha&&(e.fecha=new Date(e.fecha).toLocaleDateString()),e}}function t(){return function(e){var t=null;return e.datosPersonales?(t=e.datosPersonales.fechaNacimiento.split("/"),e.datosPersonales.fechaNacimiento=t[2]+"-"+t[1]+"-"+t[0],t=e.datosPersonales.fechaInscripcion.split("/"),e.datosPersonales.fechaInscripcion=t[2]+"-"+t[1]+"-"+t[0]):e.fecha?(t=e.fecha.split("/"),e.fecha=t[2]+"-"+t[1]+"-"+t[0]):e=new Date(e).toLocaleDateString(),e}}angular.module("app").filter("stringToDateFormat",e).filter("formatDates",t)}(),function(){"use strict";function e(){return function(t){var r=t instanceof Array;for(var o in t)null===t[o]?r?t.splice(o,1):delete t[o]:"object"==typeof t[o]&&e(t[o]);return t}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,t){function r(){return e("http://127.0.0.1:5050/api/aspirantes/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,r){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,r){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}return{aspirantesRest:r}}angular.module("app").factory("aspirantesService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t,r){function o(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,t){return r("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,t){return angular.toJson(r("formatDates")(r("removeNulls")(e)))}}})}function a(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(e){return t.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function s(){return t.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:o,cofradesBajasRest:a,getCalles:n,getRegistros:s}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e,t){function r(){return e("http://127.0.0.1:5050/api/costaleros/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,r){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,r){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}return{costalerosRest:r}}angular.module("app").factory("costalerosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function t(t){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:t,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:t}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function t(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:t}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t,r,o,a,n,s,i){function c(){n&&n.$promise.then(l)}function l(e){return h.costalero=e,h.cofradeSelected=h.costalero.cofrade,!0}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.costalero.cofrade=e?e.id:null}function p(t){t?(h.costalero.fecha=""===h.costalero.fecha?null:h.costalero.fecha,h.costalero.cofrade?s.costalerosRest().save(h.costalero,m,g):(e.costaleroForm.cofrade.$error.required=!0,v())):v()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("costaleros")}function g(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))}function v(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(r[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,c()}angular.module("app").controller("CostaleroAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","getCostaleroPrepService","costalerosService","cofradesService"]}(),function(){"use strict";function e(e,t){function r(){return t.$promise.then(function(e){a.costalero=e})}function o(t,r){e.go("costalerosCambios",{costaleroId:t})}var a=this;a.modifyCostalero=o,r()}angular.module("app").controller("CostaleroDetalle",e),e.$inject=["$state","getCostaleroPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){r.costaleros=e})}var r=this;r.costaleros=null,t()}angular.module("app").controller("Costaleros",e),e.$inject=["costalerosPrepService"]}(),function(){"use strict";function e(e){function t(t,r){e.go("aspirantesDetalle",{aspiranteId:t})}function r(t,r){r.stopPropagation(),e.go("aspirantesCambios",{aspiranteId:t})}var o=this;o.modifyAspirante=r,o.goToAspirante=t}angular.module("app").controller("ListaAspirantes",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/aspirantes/list/aspirantes.directive.html",scope:{aspirantes:"=aspirantes"},link:function(e,t){e.$watch("vm.aspirantes",function(t){t&&(e.vm.aspirantesShort=e.vm.aspirantes.map(function(e){var t={id:e.id,fecha:e.fecha};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaAspirantes",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaAspirantes",e)}(),function(){"use strict";function e(e,t,r){function o(e,r){r.stopPropagation();var o=t.confirm().title("Eliminar aspirante").content("¿Está seguro que desea eliminar este aspirante?<br>Perderá su antiguedad.").ariaLabel("Eliminar aspirante").targetEvent(r).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(o).then(function(){a(e)})}function a(t){var o=r.aspirantesRest().get({id:t},function(){o.$delete({id:t}).then(function(){"aspirantes"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("aspirantes")})})}var n=this;n.removeAspirante=o}angular.module("app").controller("RemoveAspirante",e),e.$inject=["$state","$mdDialog","aspirantesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/aspirantes/remove/removeAspirante.directive.html",scope:{aspiranteId:"=aspirante"},controller:"RemoveAspirante",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeAspirante",e)}(),function(){"use strict";function e(e,t,r,o){function a(){p.bajas?s():n()}function n(){if(p.nextPage){var e={page:p.nextPage};p.buscar&&(e[p.filtro]=p.buscar),o.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=p.cofrades.concat(e.results)})}}function s(){if(p.nextPageBajas){var e={page:p.nextPageBajas};p.buscar&&(e[p.filtro]=p.buscar),o.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=p.cofradesBajas.concat(e.results)})}}function i(){p.bajas?l():c()}function c(){var e={};e[p.filtro]=p.buscar,o.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=e.results})}function l(){var e={};e[p.filtro]=p.buscar,o.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=e.results})}function u(){p.buscar=null,p.typeInput="nombre"===p.filtro?"text":"number",p.search()}function d(e,t){r.go("cofradesDetalle",{cofradeId:e})}function f(e,t){t.stopPropagation(),r.go("cofradesCambios",{cofradeId:e})}var p=this;p.filtro="nombre",p.typeInput="text",p.buscar=null,p.search=i,p.radioChange=u,p.goToCofrade=d,p.modifyCofrade=f;var m=e.$on("scrollDown",a);t.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}(),function(){"use strict";function e(e,t){function r(e,r){r.stopPropagation(),t.show({templateUrl:"./templates/directives/cofrades/remove/dialogTmpl/removeCofrade.tmpl.html",locals:{id:e},controller:"RemoveCofradeTmpl",controllerAs:"vm",bindToController:!0,targetEvent:r,clickOutsideToClose:!0}).then(function(){})}var o=this;o.removeCofrade=r}angular.module("app").controller("RemoveCofrade",e),e.$inject=["$state","$mdDialog"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/remove/removeCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RemoveCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCofrade",e)}(),function(){"use strict";function e(e,t,r){function o(e,r){r.stopPropagation();var o=t.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(r).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(o).then(function(){a(e)})}function a(t){var o=r.cofradesRest().get({id:t},function(){o.baja=null,o.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.restoreCofrade=o}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e){function t(t,r){e.go("costalerosDetalle",{costaleroId:t})}function r(t,r){r.stopPropagation(),e.go("costalerosCambios",{costaleroId:t})}var o=this;o.modifyCostalero=r,o.goToCostalero=t}angular.module("app").controller("ListaCostaleros",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/list/costaleros.directive.html",scope:{costaleros:"=costaleros"},link:function(e,t){e.$watch("vm.costaleros",function(t){t&&(e.vm.costalerosShort=e.vm.costaleros.map(function(e){var t={id:e.id,sitio:e.sitio};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaCostaleros",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCostaleros",e)}(),function(){"use strict";function e(e,t,r){function o(e,r){r.stopPropagation();var o=t.confirm().title("Eliminar costalero").content("¿Está seguro que desea eliminar este costalero?<br>Dejará su sitio libre.").ariaLabel("Eliminar costalero").targetEvent(r).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(o).then(function(){a(e)})}function a(t){var o=r.costalerosRest().get({id:t},function(){o.cofrade=null,o.talla=null,o.fecha=null,o.$save().then(function(){"costaleros"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("costaleros")})})}var n=this;n.removeCostalero=o}angular.module("app").controller("RemoveCostalero",e),e.$inject=["$state","$mdDialog","costalerosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/remove/removeCostalero.directive.html",scope:{costaleroId:"=costalero"},controller:"RemoveCostalero",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCostalero",e)}(),function(){"use strict";function e(e,t,r){function o(){t.cancel()}function a(t){var o=r.cofradesRest().get({id:t},function(){o.baja={motivo:n.motivoBaja,fechaBaja:(new Date).toLocaleDateString()},o.numeroCofrade=null,o.$save({updateNumeroCofrade:!0}).then(function(){n.closeDialog(),"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.closeDialog=o,n.removeEndCofrade=a}angular.module("app").controller("RemoveCofradeTmpl",e),e.$inject=["$state","$mdDialog","cofradesService"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5pbml0Lm1vZHVsZS5qcyIsImFwcC5sb2FkaW5nLmpzIiwiYWxsLm1pbi5qcyIsImFwcC5tYXAuanMiLCJhcHAucGlja2VyRGF0ZS5qcyIsImFwcC5yb3V0ZXMuanMiLCJhcHAudGhlbWUuanMiLCJhc3BpcmFudGVzL2FzcGlyYW50ZXMucm91dGVzLmpzIiwiY29mcmFkZXMvY29mcmFkZXMucm91dGVzLmpzIiwiY29zdGFsZXJvcy9jb3N0YWxlcm9zLnJvdXRlcy5qcyIsImludGVyZmF6L2FwcC5jb250cm9sbGVyLmpzIiwiYXNwaXJhbnRlcy9hZGRNb2RpZnkvYXNwaXJhbnRlQWRkTW9kaWZ5LmNvbnRyb2xsZXIuanMiLCJhc3BpcmFudGVzL2RldGFpbC9hc3BpcmFudGVEZXRhbGxlLmNvbnRyb2xsZXIuanMiLCJhc3BpcmFudGVzL2xpc3QvYXNwaXJhbnRlcy5jb250cm9sbGVyLmpzIiwiY29mcmFkZXMvYWRkTW9kaWZ5L2NvZnJhZGVBZGRNb2RpZnkuY29udHJvbGxlci5qcyIsImNvZnJhZGVzL2RldGFpbC9jb2ZyYWRlRGV0YWxsZS5jb250cm9sbGVyLmpzIiwiY29mcmFkZXMvbGlzdC9jb2ZyYWRlcy5jb250cm9sbGVyLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL3Njcm9sbHkuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9maWx0ZXJzL3BhcnNlQ3VlbnRhLmZpbHRlci5qcyIsImNvbW1vbnMvZmlsdGVycy9wYXJzZURhdGUuZmlsdGVyLmpzIiwiY29tbW9ucy9maWx0ZXJzL3JlbW92ZU51bGxzLmZpbHRlci5qcyIsImNvbW1vbnMvc2VydmljZXMvYXNwaXJhbnRlcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9jb2ZyYWRlcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9jb3N0YWxlcm9zLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL21hcGFzLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL3NlY3RvcmVzLnNlcnZpY2UuanMiLCJjb3N0YWxlcm9zL2FkZE1vZGlmeS9jb3N0YWxlcm9BZGRNb2RpZnkuY29udHJvbGxlci5qcyIsImNvc3RhbGVyb3MvZGV0YWlsL2Nvc3RhbGVyb0RldGFsbGUuY29udHJvbGxlci5qcyIsImNvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmNvbnRyb2xsZXIuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvYXNwaXJhbnRlcy9saXN0L2FzcGlyYW50ZXMuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvYXNwaXJhbnRlcy9saXN0L2FzcGlyYW50ZXMuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2FzcGlyYW50ZXMvcmVtb3ZlL3JlbW92ZUFzcGlyYW50ZS5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9hc3BpcmFudGVzL3JlbW92ZS9yZW1vdmVBc3BpcmFudGUuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL2xpc3QvY29mcmFkZXMuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvbGlzdC9jb2ZyYWRlcy5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVtb3ZlL3JlbW92ZUNvZnJhZGUuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVtb3ZlL3JlbW92ZUNvZnJhZGUuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3Jlc3RvcmUvcmVzdG9yZUNvZnJhZGUuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVzdG9yZS9yZXN0b3JlQ29mcmFkZS5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9saXN0L2Nvc3RhbGVyb3MuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9saXN0L2Nvc3RhbGVyb3MuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2Nvc3RhbGVyb3MvcmVtb3ZlL3JlbW92ZUNvc3RhbGVyby5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb3N0YWxlcm9zL3JlbW92ZS9yZW1vdmVDb3N0YWxlcm8uZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9kaWFsb2dUbXBsL3JlbW92ZUNvZnJhZGUuY29udHJvbGxlci50bXBsLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJsb2FkaW5nU3Bpbm5lciIsIiRodHRwUHJvdmlkZXIiLCJpbnRlcmNlcHRvcnMiLCJwdXNoIiwibXlIdHRwSW50ZXJjZXB0b3IiLCIkcSIsImxvYWRTY3JlZW4iLCJlbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVxdWVzdCIsImNvbmZpZyIsIm1ldGhvZCIsImNzcyIsInJlcXVlc3RFcnJvciIsInJlamVjdGlvbiIsInJlamVjdCIsInJlc3BvbnNlIiwicmVzcG9uc2VFcnJvciIsImZhY3RvcnkiLCIkaW5qZWN0IiwiZ29vZ2xlTWFwQVBJIiwidWlHbWFwR29vZ2xlTWFwQXBpUHJvdmlkZXIiLCJjb25maWd1cmUiLCJsaWJyYXJpZXMiLCJkYXRlUGlja2VyQ29uZmlnIiwiJG1kRGF0ZUxvY2FsZVByb3ZpZGVyIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJkYXlzIiwic2hvcnREYXlzIiwiZmlyc3REYXlPZldlZWsiLCJwYXJzZURhdGUiLCJkYXRlU3RyaW5nIiwiRGF0ZSIsImZvcm1hdERhdGUiLCJkYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlIiwidGhlbWVBbmd1bGFyTWF0ZXJpYWwiLCIkbWRUaGVtaW5nUHJvdmlkZXIiLCJ0ZW1wbGF0ZVByb3ZpZGVyIiwiJHRlbXBsYXRlQ2FjaGUiLCJnZXQiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVzb2x2ZSIsImFzcGlyYW50ZXNQcmVwU2VydmljZSIsImdldEFzcGlyYW50ZVByZXBTZXJ2aWNlIiwiYXNwaXJhbnRlc1NlcnZpY2UiLCJhc3BpcmFudGVzUmVzdCIsInF1ZXJ5IiwiJHN0YXRlUGFyYW1zIiwiaWQiLCJhc3BpcmFudGVJZCIsImNvZnJhZGVzUHJlcFNlcnZpY2UiLCJjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2UiLCJnZXRDb2ZyYWRlUHJlcFNlcnZpY2UiLCJnZXRNYXBzUHJlcFNlcnZpY2UiLCJjb2ZyYWRlc1NlcnZpY2UiLCJjb2ZyYWRlc1Jlc3QiLCJjb2ZyYWRlc0JhamFzUmVzdCIsImNvZnJhZGVJZCIsInVpR21hcEdvb2dsZU1hcEFwaSIsIm1hcGFzU2VydmljZSIsIiRwcm9taXNlIiwidGhlbiIsImRhdGEiLCJhZGRyZXNzIiwiZGF0b3NQZXJzb25hbGVzIiwiZGlyZWNjaW9uIiwiY2FsbGUiLCJudW1lcm8iLCJtdW5pY2lwaW8iLCJwcm92aW5jaWEiLCJjcCIsImdlb0NvZGluZ0FQSSIsInJlc3VsdHMiLCJsZW5ndGgiLCJjb29yZGluYXRlcyIsImdlb21ldHJ5IiwibG9jYXRpb24iLCJtYXBzIiwiY29vcmQiLCJsYXRpdHVkZSIsImxhdCIsImxvbmdpdHVkZSIsImxuZyIsIm1hcmtlciIsInpvb20iLCJjb3N0YWxlcm9zUHJlcFNlcnZpY2UiLCJnZXRDb3N0YWxlcm9QcmVwU2VydmljZSIsImNvc3RhbGVyb3NTZXJ2aWNlIiwiY29zdGFsZXJvc1Jlc3QiLCJjb3N0YWxlcm9JZCIsIkFwcEN0cmwiLCIkbWRTaWRlbmF2IiwiJHN0YXRlIiwidG9nZ2xlU2lkZW5hdiIsIm1lbnVJZCIsInRvZ2dsZSIsIm5hdmlnYXRlVG8iLCJ0byIsImdvIiwidm0iLCJ0aGlzIiwiQXNwaXJhbnRlQWRkTW9kaWZ5IiwiJHNjb3BlIiwiJGRvY3VtZW50IiwiJG1kVG9hc3QiLCJhY3RpdmF0ZSIsImluaXRBc3BpcmFudGUiLCJuZXdBc3BpcmFudGUiLCJhc3BpcmFudGUiLCJuZXdDb2ZyYWRlIiwiY29mcmFkZSIsImZlY2hhIiwiYmFja1N0YXRlIiwid2luZG93IiwiaGlzdG9yeSIsImJhY2siLCJxdWVyeVNlYXJjaCIsImZpbHRybyIsImlzTmFOIiwibm9tYnJlIiwibnVtZXJvT3JkZW4iLCJzZWxlY3RlZEl0ZW1DaGFuZ2UiLCJpdGVtIiwiZ3VhcmRhciIsImlzVmFsaWQiLCJzYXZlIiwiZ3VhcmRhclN1Y2Nlc3MiLCJndWFyZGFyRXJyb3IiLCJhc3BpcmFudGVGb3JtIiwiJGVycm9yIiwicmVxdWlyZWQiLCJzaG93QWN0aW9uVG9hc3QiLCJzaG93Iiwic2ltcGxlIiwiY29udGVudCIsInBvc2l0aW9uIiwiaGlkZURlbGF5IiwicGFyZW50IiwiYWN0aW9uIiwiaGlnaGxpZ2h0QWN0aW9uIiwiQXNwaXJhbnRlRGV0YWxsZSIsIm1vZGlmeUFzcGlyYW50ZSIsImV2ZW50IiwiQXNwaXJhbnRlcyIsImFzcGlyYW50ZXMiLCJDb2ZyYWRlQWRkTW9kaWZ5IiwiJGZpbHRlciIsInNlY3RvcmVzU2VydmljZSIsImluaXRDb2ZyYWRlIiwiZ2V0UmVnaXN0cm9zIiwibnVtZXJvQ29mcmFkZSIsImNhbGxlU2VsZWN0ZWQiLCJmZWNoYU5hY2ltaWVudG8iLCJmZWNoYUluc2NyaXBjaW9uIiwiZGF0b3NGaW5hbmNpZXJvcyIsImN1ZW50YSIsImRldWRhIiwiZ2V0Q2FsbGVzIiwic2VhcmNoU2VjdG9yIiwic2VjdG9yIiwibnVldmFDYWxsZSIsInNlY3RvcmVzUmVzdCIsIm51bWVyb1NlY3RvciIsImNhbGN1bGFyQ0MiLCJpYmFuIiwiY2MiLCJjYWxjdWxhckliYW4iLCJndWFyZGFyQ2FsbGUiLCJzZWN0b3JSZXNvdXJjZSIsImNhbGxlcyIsInNlYXJjaFRleHQiLCIkc2F2ZSIsIkNvZnJhZGVSZXNvdXJjZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZXhvIiwiQ29mcmFkZURldGFsbGUiLCJtb2RpZnlDb2ZyYWRlIiwiQ29mcmFkZXMiLCJuZXh0UGFnZSIsIm5leHQiLCJjb2ZyYWRlcyIsIm5leHRQYWdlQmFqYXMiLCJjb2ZyYWRlc0JhamFzIiwic2VsZWN0ZWRUYWIiLCJzY3JvbGx5IiwicmVzdHJpY3QiLCJsaW5rIiwiJHJvb3RTY29wZSIsImF0dHJzIiwicmF3IiwiYmluZCIsInNjcm9sbFRvcCIsIm9mZnNldEhlaWdodCIsInNjcm9sbEhlaWdodCIsIiRlbWl0IiwiZGlyZWN0aXZlIiwicGFyc2VJYmFuIiwiZm9ybWF0dGVkSWJhbiIsImkiLCJwYXJzZUNDIiwiZm9ybWF0dGVkQ0MiLCJzdWJzdHIiLCJ2YWxvckNpZnJhcyIsImNpZnJhcyIsIkxFVFJBUyIsIml0ZW1zIiwicG9zaWNpb24iLCJpbmRleE9mIiwiam9pbiIsIm1vZHVsbyIsImRpdmlzb3IiLCJDVUVOVEEiLCJsYXJnbyIsInJlc3RvIiwiZGl2aWRlbmRvIiwiY2Vyb3NJenF1aWVyZGEiLCJjY2MiLCJwYWlzIiwiZmlsdGVyIiwic3RyaW5nVG9EYXRlRm9ybWF0IiwiZm9ybWF0RGF0ZXMiLCJzcGxpdCIsInJlbW92ZU51bGxzIiwib2JqIiwiaXNBcnJheSIsIkFycmF5IiwiayIsInNwbGljZSIsIiRyZXNvdXJjZSIsInRyYW5zZm9ybVJlc3BvbnNlIiwiaGVhZGVyc0dldHRlciIsImZyb21Kc29uIiwidHJhbnNmb3JtUmVxdWVzdCIsInRvSnNvbiIsIiRodHRwIiwicGFyYW1zIiwia2V5IiwiQ29zdGFsZXJvQWRkTW9kaWZ5IiwiaW5pdENvc3RhbGVybyIsImNvc3RhbGVybyIsImNvZnJhZGVTZWxlY3RlZCIsImNvc3RhbGVyb0Zvcm0iLCJDb3N0YWxlcm9EZXRhbGxlIiwibW9kaWZ5Q29zdGFsZXJvIiwiQ29zdGFsZXJvcyIsImNvc3RhbGVyb3MiLCJMaXN0YUFzcGlyYW50ZXMiLCJnb1RvQXNwaXJhbnRlIiwic3RvcFByb3BhZ2F0aW9uIiwibGlzdGFBc3BpcmFudGVzIiwidGVtcGxhdGVVcmwiLCJzY29wZSIsIiR3YXRjaCIsIm5ld1ZhbCIsImFzcGlyYW50ZXNTaG9ydCIsIm1hcCIsImF1eCIsImFwZWxsaWRvMSIsImFwZWxsaWRvMiIsImJpbmRUb0NvbnRyb2xsZXIiLCJSZW1vdmVBc3BpcmFudGUiLCIkbWREaWFsb2ciLCJyZW1vdmVBc3BpcmFudGUiLCJyZW1vdmVEaWFsb2ciLCJjb25maXJtIiwidGl0bGUiLCJhcmlhTGFiZWwiLCJ0YXJnZXRFdmVudCIsIm9rIiwiY2FuY2VsIiwiY2xpY2tPdXRzaWRlVG9DbG9zZSIsInJlbW92ZUVuZEFzcGlyYW50ZSIsIiRkZWxldGUiLCJjdXJyZW50IiwibmFtZSIsInRyYW5zaXRpb25UbyIsInJlbG9hZCIsImluaGVyaXQiLCJub3RpZnkiLCJMaXN0YUNvZnJhZGVzIiwiZ2V0TmV4dFBhZ2UiLCJiYWphcyIsImdldE5leHRQYWdlQmFqYXMiLCJnZXROZXh0UGFnZUFsdGFzIiwicGFyYW1ldGVycyIsInBhZ2UiLCJidXNjYXIiLCJjb25jYXQiLCJzZWFyY2giLCJzZWFyY2hCYWphcyIsInNlYXJjaEFsdGFzIiwicmFkaW9DaGFuZ2UiLCJ0eXBlSW5wdXQiLCJnb1RvQ29mcmFkZSIsImhhbmRsZXIiLCIkb24iLCJsaXN0YUNvZnJhZGVzIiwiUmVtb3ZlQ29mcmFkZSIsInJlbW92ZUNvZnJhZGUiLCJsb2NhbHMiLCJSZXN0b3JlQ29mcmFkZSIsInJlc3RvcmVDb2ZyYWRlIiwicmVzdGF1cmFyRGlhbG9nIiwicmVzdG9yZUVuZENvZnJhZGUiLCJiYWphIiwidXBkYXRlTnVtZXJvQ29mcmFkZSIsIkxpc3RhQ29zdGFsZXJvcyIsImdvVG9Db3N0YWxlcm8iLCJsaXN0YUNvc3RhbGVyb3MiLCJjb3N0YWxlcm9zU2hvcnQiLCJzaXRpbyIsIlJlbW92ZUNvc3RhbGVybyIsInJlbW92ZUNvc3RhbGVybyIsInJlbW92ZUVuZENvc3RhbGVybyIsInRhbGxhIiwiUmVtb3ZlQ29mcmFkZVRtcGwiLCJjbG9zZURpYWxvZyIsInJlbW92ZUVuZENvZnJhZGUiLCJtb3Rpdm8iLCJtb3Rpdm9CYWphIiwiZmVjaGFCYWphIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQUNBLFlBRUFBLFNBQUFDLE9BQUEsT0FDQSxZQUNBLGFBQ0EsYUFDQSxvQkFDQSxrQkNSQSxXQUNBLFlBT0EsU0FBQUMsR0FBQUMsR0FDQUEsRUFBQUMsYUFBQUMsS0FBQSxxQkFHQSxRQUFBQyxHQUFBQyxHQUNBLEdBQUFDLEdBQUFSLFFBQUFTLFFBQUFDLFNBQUFDLGNBQUEsa0JBQ0EsUUFFQUMsUUFBQSxTQUFBQyxHQUlBLE1BRkEsU0FBQUEsRUFBQUMsUUFDQU4sRUFBQU8sSUFBQSxVQUFBLFNBQ0FGLEdBSUFHLGFBQUEsU0FBQUMsR0FFQSxNQUFBVixHQUFBVyxPQUFBRCxJQUlBRSxTQUFBLFNBQUFBLEdBR0EsTUFEQVgsR0FBQU8sSUFBQSxVQUFBLFFBQ0FJLEdBSUFDLGNBQUEsU0FBQUgsR0FHQSxNQURBVCxHQUFBTyxJQUFBLFVBQUEsUUFDQVIsRUFBQVcsT0FBQUQsS0FyQ0FqQixRQUNBQyxPQUFBLE9BQ0FvQixRQUFBLG9CQUFBZixHQUNBTyxPQUFBWCxHQ2lCRUEsRUFBZW9CLFNBQVcsaUJBa0MxQmhCLEVBQWtCZ0IsU0FBVyxTQ3pEL0IsV0FDQSxZQU1BLFNBQUFDLEdBQUFDLEdBQ0FBLEVBQUFDLFdBQ0FDLFVBQUEsbUNBTkExQixRQUNBQyxPQUFBLE9BQ0FZLE9BQUFVLEdEb0VFQSxFQUFhRCxTQUFXLGlDRXpFMUIsV0FDQSxZQU1BLFNBQUFLLEdBQUFDLEdBRUFBLEVBQUFDLFFBQUEsUUFBQSxVQUFBLFFBQUEsUUFBQSxPQUFBLFFBQUEsUUFBQSxTQUFBLGFBQUEsVUFBQSxZQUFBLGFBQ0FELEVBQUFFLGFBQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE9BQ0FGLEVBQUFHLE1BQUEsUUFBQSxTQUFBLFlBQUEsU0FBQSxVQUFBLFNBQUEsV0FDQUgsRUFBQUksV0FBQSxNQUFB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ZmlsZSI6ImFsbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xyXG4gICAgJ3VpLnJvdXRlcicsXHJcbiAgICAnbmdSZXNvdXJjZScsXHJcbiAgICAnbmdNYXRlcmlhbCcsXHJcbiAgICAndWlHbWFwZ29vZ2xlLW1hcHMnLFxyXG4gICAgJ25nTWVzc2FnZXMnXHJcbiAgXSk7XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnbXlIdHRwSW50ZXJjZXB0b3InLCBteUh0dHBJbnRlcmNlcHRvcilcclxuICAgIC5jb25maWcobG9hZGluZ1NwaW5uZXIpO1xyXG5cclxuICBmdW5jdGlvbiBsb2FkaW5nU3Bpbm5lcigkaHR0cFByb3ZpZGVyKSB7XHJcbiAgICAkaHR0cFByb3ZpZGVyLmludGVyY2VwdG9ycy5wdXNoKCdteUh0dHBJbnRlcmNlcHRvcicpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbXlIdHRwSW50ZXJjZXB0b3IoJHEpIHtcclxuICAgIHZhciBsb2FkU2NyZWVuID0gYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tLWFwcC1sb2FkaW5nJykpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLy8gb3B0aW9uYWwgbWV0aG9kXHJcbiAgICAgICdyZXF1ZXN0JzogZnVuY3Rpb24oY29uZmlnKSB7XHJcbiAgICAgICAgLy8gZG8gc29tZXRoaW5nIG9uIHN1Y2Nlc3NcclxuICAgICAgICBpZiAoY29uZmlnLm1ldGhvZCA9PT0gJ1BPU1QnKVxyXG4gICAgICAgICAgbG9hZFNjcmVlbi5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgICAgICByZXR1cm4gY29uZmlnO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgLy8gb3B0aW9uYWwgbWV0aG9kXHJcbiAgICAgJ3JlcXVlc3RFcnJvcic6IGZ1bmN0aW9uKHJlamVjdGlvbikge1xyXG4gICAgICAgIC8vIGRvIHNvbWV0aGluZyBvbiBlcnJvclxyXG4gICAgICAgIHJldHVybiAkcS5yZWplY3QocmVqZWN0aW9uKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIC8vIG9wdGlvbmFsIG1ldGhvZFxyXG4gICAgICAncmVzcG9uc2UnOiBmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgIC8vIGRvIHNvbWV0aGluZyBvbiBzdWNjZXNzXHJcbiAgICAgICAgbG9hZFNjcmVlbi5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIC8vIG9wdGlvbmFsIG1ldGhvZFxyXG4gICAgICdyZXNwb25zZUVycm9yJzogZnVuY3Rpb24ocmVqZWN0aW9uKSB7XHJcbiAgICAgICAgLy8gZG8gc29tZXRoaW5nIG9uIGVycm9yXHJcbiAgICAgICAgbG9hZFNjcmVlbi5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIHJldHVybiAkcS5yZWplY3QocmVqZWN0aW9uKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpO1xyXG4iLG51bGwsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGdvb2dsZU1hcEFQSSk7XHJcblxyXG4gIGZ1bmN0aW9uIGdvb2dsZU1hcEFQSSh1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlcil7XHJcbiAgICB1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlci5jb25maWd1cmUoe1xyXG4gICAgICAgIGxpYnJhcmllczogJ3dlYXRoZXIsZ2VvbWV0cnksdmlzdWFsaXphdGlvbidcclxuICAgIH0pOyAgICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGRhdGVQaWNrZXJDb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBkYXRlUGlja2VyQ29uZmlnKCRtZERhdGVMb2NhbGVQcm92aWRlcikge1xyXG5cclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5tb250aHMgPSBbJ2VuZXJvJywgJ2ZlYnJlcm8nLCAnbWFyem8nLCAnYWJyaWwnLCAnbWF5bycsICdqdW5pbycsICdqdWxpbycsICdhZ29zdG8nLCAnc2VwdGllbWJyZScsICdvY3R1YnJlJywgJ25vdmllbWJyZScsICdkaWNpZW1icmUnXTtcclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5zaG9ydE1vbnRocyA9IFsnZW5lJywgJ2ZlYicsICdtYXInLCAnYWJyJywgJ21heScsICdqdW4nLCAnanVsJywgJ2FnbycsICdzZXAnLCAnb2N0JywgJ25vdicsICdkaWMnXTtcclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5kYXlzID0gWydsdW5lcycsICdtYXJ0ZXMnLCAnbWnDqXJjb2xlcycsICdqdWV2ZXMnLCAndmllcm5lcycsICdzw6FiYWRvJywgJ2RvbWluZ28nXTtcclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5zaG9ydERheXMgPSBbJ2x1bicsICdtYXInLCAnbWnDqScsICdqdWUnLCAndmllJywgJ3PDoWInLCAnZG9tJ107XHJcblxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLmZpcnN0RGF5T2ZXZWVrID0gMTtcclxuICAgIFxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLnBhcnNlRGF0ZSA9IGZ1bmN0aW9uKGRhdGVTdHJpbmcpIHtcclxuICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLmZvcm1hdERhdGUgPSBmdW5jdGlvbihkYXRlKSB7XHJcbiAgICAgIHJldHVybiBuZXcgRGF0ZShkYXRlKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgIH07XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7XHJcbiIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGNvbmZpZyk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XHJcblxyXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XHJcblxyXG4gICAgJHN0YXRlUHJvdmlkZXJcclxuICAgICAgLnN0YXRlKFwiaG9tZVwiLCB7XHJcbiAgICAgICAgdXJsOiBcIi9cIixcclxuICAgICAgICB0ZW1wbGF0ZTogJzxwIGNsYXNzPVwibGVhZFwiPldlbGNvbWUgdG8gdGhlIFVJLVJvdXRlciBEZW1vPC9wPicgK1xyXG4gICAgICAgICAgJzxwPlVzZSB0aGUgbWVudSBhYm92ZSB0byBuYXZpZ2F0ZS4gJyArXHJcbiAgICAgICAgICAnUGF5IGF0dGVudGlvbiB0byB0aGUgPGNvZGU+JHN0YXRlPC9jb2RlPiBhbmQgPGNvZGU+JHN0YXRlUGFyYW1zPC9jb2RlPiB2YWx1ZXMgYmVsb3cuPC9wPicgK1xyXG4gICAgICAgICAgJzxwPkNsaWNrIHRoZXNlIGxpbmtz4oCUPGEgaHJlZj1cIiMvYz9pZD0xXCI+QWxpY2U8L2E+IG9yICcgK1xyXG4gICAgICAgICAgJzxhIGhyZWY9XCIjL3VzZXIvNDJcIj5Cb2I8L2E+4oCUdG8gc2VlIGEgdXJsIHJlZGlyZWN0IGluIGFjdGlvbi48L3A+J1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKHRoZW1lQW5ndWxhck1hdGVyaWFsKTtcclxuXHJcbiAgZnVuY3Rpb24gdGhlbWVBbmd1bGFyTWF0ZXJpYWwoJG1kVGhlbWluZ1Byb3ZpZGVyKXtcclxuICAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoJ2FzcGlyYW50ZXMnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9hc3BpcmFudGVzXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdhc3BpcmFudGVzL2xpc3QvYXNwaXJhbnRlcy5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0FzcGlyYW50ZXMnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGFzcGlyYW50ZXNQcmVwU2VydmljZTogYXNwaXJhbnRlc1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuc3RhdGUoJ2FzcGlyYW50ZXNEZXRhbGxlJywge1xyXG4gICAgICAgIHVybDogXCIvYXNwaXJhbnRlcy86YXNwaXJhbnRlSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2FzcGlyYW50ZXMvZGV0YWlsL2FzcGlyYW50ZURldGFsbGUuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBc3BpcmFudGVEZXRhbGxlJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnZXRBc3BpcmFudGVQcmVwU2VydmljZTogZ2V0QXNwaXJhbnRlUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pLlxyXG4gICAgICBzdGF0ZSgnYXNwaXJhbnRlc0NhbWJpb3MnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9hc3BpcmFudGVzL2NhbWJpb3MvOmFzcGlyYW50ZUlkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdhc3BpcmFudGVzL2FkZE1vZGlmeS9hc3BpcmFudGVBZGRNb2RpZnkuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBc3BpcmFudGVBZGRNb2RpZnknLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldEFzcGlyYW50ZVByZXBTZXJ2aWNlOiBnZXRBc3BpcmFudGVQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhc3BpcmFudGVzUHJlcFNlcnZpY2UoYXNwaXJhbnRlc1NlcnZpY2UpIHtcclxuICAgIHJldHVybiBhc3BpcmFudGVzU2VydmljZS5hc3BpcmFudGVzUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG5cclxuICBcclxuICBmdW5jdGlvbiBnZXRBc3BpcmFudGVQcmVwU2VydmljZShhc3BpcmFudGVzU2VydmljZSwgJHN0YXRlUGFyYW1zKSB7XHJcbiAgICByZXR1cm4gKCRzdGF0ZVBhcmFtcy5hc3BpcmFudGVJZCkgPyBhc3BpcmFudGVzU2VydmljZS5hc3BpcmFudGVzUmVzdCgpLmdldCh7aWQ6ICRzdGF0ZVBhcmFtcy5hc3BpcmFudGVJZH0pIDogZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGNvbmZpZyk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlcikge1xyXG4gICAgJHN0YXRlUHJvdmlkZXJcclxuICAgICAgLnN0YXRlKCdjb2ZyYWRlcycsIHtcclxuICAgICAgICB1cmw6IFwiL2NvZnJhZGVzXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdjb2ZyYWRlcy9saXN0L2NvZnJhZGVzLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29mcmFkZXMnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGNvZnJhZGVzUHJlcFNlcnZpY2U6IGNvZnJhZGVzUHJlcFNlcnZpY2UsXHJcbiAgICAgICAgICAgIGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZTogY29mcmFkZXNCYWphc1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuc3RhdGUoJ2NvZnJhZGVzRGV0YWxsZScsIHtcclxuICAgICAgICB1cmw6IFwiL2NvZnJhZGVzLzpjb2ZyYWRlSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2NvZnJhZGVzL2RldGFpbC9jb2ZyYWRlRGV0YWxsZS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0NvZnJhZGVEZXRhbGxlJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnZXRDb2ZyYWRlUHJlcFNlcnZpY2U6IGdldENvZnJhZGVQcmVwU2VydmljZSxcclxuICAgICAgICAgICAgZ2V0TWFwc1ByZXBTZXJ2aWNlOiBnZXRNYXBzUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pLlxyXG4gICAgICBzdGF0ZSgnY29mcmFkZXNDYW1iaW9zJywge1xyXG4gICAgICAgIHVybDogXCIvY29mcmFkZXMvY2FtYmlvcy86Y29mcmFkZUlkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdjb2ZyYWRlcy9hZGRNb2RpZnkvY29mcmFkZUFkZE1vZGlmeS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0NvZnJhZGVBZGRNb2RpZnknLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldENvZnJhZGVQcmVwU2VydmljZTogZ2V0Q29mcmFkZVByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNvZnJhZGVzUHJlcFNlcnZpY2UoY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2UoY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzQmFqYXNSZXN0KCkucXVlcnkoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdldENvZnJhZGVQcmVwU2VydmljZShjb2ZyYWRlc1NlcnZpY2UsICRzdGF0ZVBhcmFtcykge1xyXG4gICAgcmV0dXJuICgkc3RhdGVQYXJhbXMuY29mcmFkZUlkKSA/IGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5nZXQoe2lkOiAkc3RhdGVQYXJhbXMuY29mcmFkZUlkfSkgOiBmYWxzZTtcclxuICB9XHJcbiAgXHJcbiAgZnVuY3Rpb24gZ2V0TWFwc1ByZXBTZXJ2aWNlKHVpR21hcEdvb2dsZU1hcEFwaSwgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLCBtYXBhc1NlcnZpY2UpIHtcclxuICAgIHJldHVybiBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgXHJcbiAgICAgIHZhciBhZGRyZXNzID0gZGF0YS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNhbGxlICAgICArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLm51bWVybyAgICArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLm11bmljaXBpbyArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLnByb3ZpbmNpYSArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNwO1xyXG5cclxuICAgICAgcmV0dXJuIG1hcGFzU2VydmljZS5nZW9Db2RpbmdBUEkoYWRkcmVzcykuXHJcbiAgICAgICAgdGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5yZXN1bHRzLmxlbmd0aCl7XHJcbiAgICAgICAgICAgIHZhciBjb29yZGluYXRlcyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbjtcclxuICAgICAgICAgICAgcmV0dXJuIHVpR21hcEdvb2dsZU1hcEFwaS50aGVuKGZ1bmN0aW9uKG1hcHMpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gIHtjb29yZDogIHsgbGF0aXR1ZGU6IGNvb3JkaW5hdGVzLmxhdCwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZ2l0dWRlOiBjb29yZGluYXRlcy5sbmcgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXI6IHsgbGF0aXR1ZGU6IGNvb3JkaW5hdGVzLmxhdCwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZ2l0dWRlOiBjb29yZGluYXRlcy5sbmcgfSxcclxuICAgICAgICAgICAgICAgICAgICAgIHpvb206IDE3IH07XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbmZpZyhjb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgIC5zdGF0ZSgnY29zdGFsZXJvcycsIHtcclxuICAgICAgICB1cmw6IFwiL2Nvc3RhbGVyb3NcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2Nvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29zdGFsZXJvcycsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgY29zdGFsZXJvc1ByZXBTZXJ2aWNlOiBjb3N0YWxlcm9zUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnY29zdGFsZXJvc0RldGFsbGUnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9jb3N0YWxlcm9zLzpjb3N0YWxlcm9JZFwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnY29zdGFsZXJvcy9kZXRhaWwvY29zdGFsZXJvRGV0YWxsZS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0Nvc3RhbGVyb0RldGFsbGUnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlOiBnZXRDb3N0YWxlcm9QcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSkuXHJcbiAgICAgIHN0YXRlKCdjb3N0YWxlcm9zQ2FtYmlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL2Nvc3RhbGVyb3MvY2FtYmlvcy86Y29zdGFsZXJvSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2Nvc3RhbGVyb3MvYWRkTW9kaWZ5L2Nvc3RhbGVyb0FkZE1vZGlmeS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0Nvc3RhbGVyb0FkZE1vZGlmeScsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2U6IGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNvc3RhbGVyb3NQcmVwU2VydmljZShjb3N0YWxlcm9zU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGNvc3RhbGVyb3NTZXJ2aWNlLmNvc3RhbGVyb3NSZXN0KCkucXVlcnkoKTtcclxuICB9XHJcblxyXG4gIFxyXG4gIGZ1bmN0aW9uIGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlKGNvc3RhbGVyb3NTZXJ2aWNlLCAkc3RhdGVQYXJhbXMpIHtcclxuICAgIHJldHVybiAoJHN0YXRlUGFyYW1zLmNvc3RhbGVyb0lkKSA/IGNvc3RhbGVyb3NTZXJ2aWNlLmNvc3RhbGVyb3NSZXN0KCkuZ2V0KHtpZDogJHN0YXRlUGFyYW1zLmNvc3RhbGVyb0lkfSkgOiBmYWxzZTtcclxuICB9XHJcbiAgXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0FwcEN0cmwnLCBBcHBDdHJsKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIEFwcEN0cmwoJG1kU2lkZW5hdiwgJHN0YXRlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgdm0udG9nZ2xlU2lkZW5hdiA9IHRvZ2dsZVNpZGVuYXY7XHJcbiAgICB2bS5uYXZpZ2F0ZVRvICAgID0gbmF2aWdhdGVUbztcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gdG9nZ2xlU2lkZW5hdihtZW51SWQpIHtcclxuICAgICAgJG1kU2lkZW5hdihtZW51SWQpLnRvZ2dsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG5hdmlnYXRlVG8odG8sIG1lbnVJZCl7XHJcbiAgICAgIHRvZ2dsZVNpZGVuYXYobWVudUlkKTtcclxuICAgICAgJHN0YXRlLmdvKHRvKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdBc3BpcmFudGVBZGRNb2RpZnknLCBBc3BpcmFudGVBZGRNb2RpZnkpO1xyXG5cclxuICBmdW5jdGlvbiBBc3BpcmFudGVBZGRNb2RpZnkoJHNjb3BlLCAkZG9jdW1lbnQsICRtZFRvYXN0LCAkc3RhdGUsIGdldEFzcGlyYW50ZVByZXBTZXJ2aWNlLCBhc3BpcmFudGVzU2VydmljZSwgY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5uZXdDb2ZyYWRlID0gZmFsc2U7XHJcblxyXG4gICAgdm0uYmFja1N0YXRlICAgICAgICAgID0gYmFja1N0YXRlO1xyXG4gICAgdm0ucXVlcnlTZWFyY2ggICAgICAgID0gcXVlcnlTZWFyY2g7XHJcbiAgICB2bS5zZWxlY3RlZEl0ZW1DaGFuZ2UgPSBzZWxlY3RlZEl0ZW1DaGFuZ2U7XHJcbiAgICB2bS5ndWFyZGFyICAgICAgICAgICAgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIGlmIChnZXRBc3BpcmFudGVQcmVwU2VydmljZSl7XHJcbiAgICAgICAgZ2V0QXNwaXJhbnRlUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihpbml0QXNwaXJhbnRlKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNle1xyXG4gICAgICAgIG5ld0FzcGlyYW50ZSgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRBc3BpcmFudGUoZGF0YSkge1xyXG4gICAgICB2bS5hc3BpcmFudGUgPSBkYXRhO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBuZXdBc3BpcmFudGUoKSB7XHJcbiAgICAgIHZtLm5ld0NvZnJhZGUgPSB0cnVlO1xyXG4gICAgICB2bS5hc3BpcmFudGUgPSB7Y29mcmFkZTogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICAgIGZlY2hhOiBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpfTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBiYWNrU3RhdGUoKSB7XHJcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBxdWVyeVNlYXJjaChxdWVyeSkge1xyXG4gICAgICB2YXIgZmlsdHJvID0ge307XHJcbiAgICAgIGlmIChpc05hTihxdWVyeSkpXHJcbiAgICAgICAgZmlsdHJvLm5vbWJyZSA9IHF1ZXJ5O1xyXG4gICAgICBlbHNlIGlmKCFpc05hTihxdWVyeSkpXHJcbiAgICAgICAgZmlsdHJvLm51bWVyb09yZGVuID0gcXVlcnk7XHJcblxyXG4gICAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLnF1ZXJ5KGZpbHRybykuJHByb21pc2UudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UucmVzdWx0cztcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VsZWN0ZWRJdGVtQ2hhbmdlKGl0ZW0pIHtcclxuICAgICAgdm0uYXNwaXJhbnRlLmNvZnJhZGUgPSAgaXRlbSA/IGl0ZW0uaWQgOiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXIoaXNWYWxpZCkge1xyXG4gICAgICBpZihpc1ZhbGlkKXtcclxuICAgICAgICBpZiAoIXZtLmFzcGlyYW50ZS5jb2ZyYWRlKXtcclxuICAgICAgICAgICRzY29wZS5hc3BpcmFudGVGb3JtLmNvZnJhZGUuJGVycm9yLnJlcXVpcmVkID0gdHJ1ZTtcclxuICAgICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgdm0uYXNwaXJhbnRlLmNvZnJhZGUgPSB2bS5hc3BpcmFudGUuY29mcmFkZS5pZCA/IHZtLmFzcGlyYW50ZS5jb2ZyYWRlLmlkIDogdm0uYXNwaXJhbnRlLmNvZnJhZGU7XHJcbiAgICAgICAgICBhc3BpcmFudGVzU2VydmljZS5hc3BpcmFudGVzUmVzdCgpLnNhdmUodm0uYXNwaXJhbnRlLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgfVxyXG4gICAgICBcclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJTdWNjZXNzKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdHdWFyZGFkbyBjb24gw6l4aXRvISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgICAkc3RhdGUuZ28oJ2FzcGlyYW50ZXMnKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyRXJyb3IocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0Vycm9yIGFsIGd1YXJkYXIhIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2hvd0FjdGlvblRvYXN0KCkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXhpc3RlbiBlcnJvcmVzIGVuIGVsIGZvcm11bGFyaW8nKVxyXG4gICAgICAgICAgLmFjdGlvbignT0snKVxyXG4gICAgICAgICAgLmhpZ2hsaWdodEFjdGlvbihmYWxzZSlcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0FzcGlyYW50ZURldGFsbGUnLCBBc3BpcmFudGVEZXRhbGxlKTtcclxuXHJcbiAgZnVuY3Rpb24gQXNwaXJhbnRlRGV0YWxsZSgkc3RhdGUsIGdldEFzcGlyYW50ZVByZXBTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLm1vZGlmeUFzcGlyYW50ZSA9IG1vZGlmeUFzcGlyYW50ZTtcclxuICAgIFxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGdldEFzcGlyYW50ZVByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0uYXNwaXJhbnRlID0gZGF0YTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5QXNwaXJhbnRlKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnYXNwaXJhbnRlc0NhbWJpb3MnLCB7YXNwaXJhbnRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQXNwaXJhbnRlcycsIEFzcGlyYW50ZXMpO1xyXG5cclxuICBmdW5jdGlvbiBBc3BpcmFudGVzKGFzcGlyYW50ZXNQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0uYXNwaXJhbnRlcyA9IG51bGw7XHJcbiAgICBhY3RpdmF0ZSgpO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGFzcGlyYW50ZXNQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmFzcGlyYW50ZXMgPSBkYXRhO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29mcmFkZUFkZE1vZGlmeScsIENvZnJhZGVBZGRNb2RpZnkpO1xyXG5cclxuICBmdW5jdGlvbiBDb2ZyYWRlQWRkTW9kaWZ5KCRmaWx0ZXIsICRkb2N1bWVudCwgJG1kVG9hc3QsICRzdGF0ZSwgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLCBjb2ZyYWRlc1NlcnZpY2UsIHNlY3RvcmVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubnVldmFDYWxsZSA9IHRydWU7XHJcbiAgICB2bS5jb2ZyYWRlID0ge2RhdG9zRmluYW5jaWVyb3M6IHtjdWVudGE6IHt9LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldWRhOiBbXX0sXHJcbiAgICAgICAgICAgICAgICAgIGRhdG9zUGVyc29uYWxlczogIHtkaXJlY2Npb246IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V4bzogXCJIb21icmVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlY2hhSW5zY3JpcGNpb246IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWNoYU5hY2ltaWVudG86IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9XHJcbiAgICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICB2bS5iYWNrU3RhdGUgICAgICAgICAgPSBiYWNrU3RhdGU7XHJcbiAgICB2bS5xdWVyeVNlYXJjaCAgICAgICAgPSBxdWVyeVNlYXJjaDtcclxuICAgIHZtLnNlbGVjdGVkSXRlbUNoYW5nZSA9IHNlbGVjdGVkSXRlbUNoYW5nZTtcclxuICAgIHZtLmNhbGN1bGFyQ0MgICAgICAgICA9IGNhbGN1bGFyQ0M7XHJcbiAgICB2bS5jYWxjdWxhckliYW4gICAgICAgPSBjYWxjdWxhckliYW47XHJcbiAgICB2bS5ndWFyZGFyICAgICAgICAgICAgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIGlmIChnZXRDb2ZyYWRlUHJlcFNlcnZpY2Upe1xyXG4gICAgICAgIGdldENvZnJhZGVQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGluaXRDb2ZyYWRlKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNle1xyXG4gICAgICAgIGNvZnJhZGVzU2VydmljZS5nZXRSZWdpc3Ryb3MoKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZtLmNvZnJhZGUubnVtZXJvT3JkZW4gPSByZXNwb25zZS5kYXRhLm51bWVyb09yZGVuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm0uY29mcmFkZS5udW1lcm9Db2ZyYWRlID0gcmVzcG9uc2UuZGF0YS5udW1lcm9Db2ZyYWRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRDb2ZyYWRlKGRhdGEpIHtcclxuICAgICAgdm0uY29mcmFkZSA9IGRhdGE7XHJcbiAgICAgIHZtLmNhbGxlU2VsZWN0ZWQgPSB7Y2FsbGU6IHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jYWxsZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjcDogdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpbmNpYTogdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLnByb3ZpbmNpYSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBtdW5pY2lwaW86IHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5tdW5pY2lwaW99O1xyXG5cclxuICAgICAgdm0uZmVjaGFOYWNpbWllbnRvID0gdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFOYWNpbWllbnRvO1xyXG4gICAgICB2bS5mZWNoYUluc2NyaXBjaW9uID0gdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFJbnNjcmlwY2lvbjtcclxuICAgICAgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zID0gdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zIHx8IHtjdWVudGE6IHt9LCBkZXVkYTogW119O1xyXG4gICAgICB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhID0gdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YSB8fCB7fTtcclxuICAgICAgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmRldWRhID0gdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmRldWRhIHx8IFtdO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBiYWNrU3RhdGUoKSB7XHJcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBxdWVyeVNlYXJjaChxdWVyeSkge1xyXG4gICAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmdldENhbGxlcyhxdWVyeSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7cmV0dXJuIHJlc3BvbnNlLmRhdGE7fSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VsZWN0ZWRJdGVtQ2hhbmdlKGl0ZW0pIHtcclxuICAgICAgaWYgKGl0ZW0pe1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jYWxsZSA9IGl0ZW0uY2FsbGU7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLm11bmljaXBpbyA9IGl0ZW0ubXVuaWNpcGlvO1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jcCA9IGl0ZW0uY3A7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLnByb3ZpbmNpYSA9IGl0ZW0ucHJvdmluY2lhO1xyXG4gICAgICAgIHNlYXJjaFNlY3RvcihpdGVtLmNhbGxlKTtcclxuICAgICAgfWVsc2V7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNhbGxlID0gbnVsbDtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ubXVuaWNpcGlvID0gbnVsbDtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY3AgPSBudWxsO1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5wcm92aW5jaWEgPSBudWxsO1xyXG4gICAgICAgIHZtLnNlY3RvciA9IG51bGw7XHJcbiAgICAgICAgdm0ubnVldmFDYWxsZSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2VhcmNoU2VjdG9yKGNhbGxlKSB7XHJcbiAgICAgIHNlY3RvcmVzU2VydmljZS5zZWN0b3Jlc1Jlc3QoKS5xdWVyeSh7Y2FsbGU6IGNhbGxlfSwgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0uc2VjdG9yID0gZGF0YVswXS5udW1lcm9TZWN0b3I7XHJcbiAgICAgICAgdm0ubnVldmFDYWxsZSA9IGZhbHNlO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhckNDKCkge1xyXG4gICAgICBpZiAodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuKVxyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MgPSAkZmlsdGVyKCdjYWxjdWxhckNDJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhckliYW4oKSB7XHJcbiAgICAgIGlmICh2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhLmNjKVxyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuaWJhbiA9ICRmaWx0ZXIoJ2NhbGN1bGFySWJhbicpKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXIoaXNWYWxpZCkge1xyXG4gICAgICBpZihpc1ZhbGlkKXtcclxuICAgICAgICB2YXIgZGF0b3NGaW5hbmNpZXJvcyA9IHtjdWVudGE6IHt9LCBkZXVkYTogW119O1xyXG5cclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY2FsbGUgPSB2bS5zZWFyY2hUZXh0O1xyXG5cclxuICAgICAgICBpZiAoSlNPTi5zdHJpbmdpZnkodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zKSA9PT0gSlNPTi5zdHJpbmdpZnkoZGF0b3NGaW5hbmNpZXJvcykpXHJcbiAgICAgICAgICBkZWxldGUgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHZhciBDb2ZyYWRlUmVzb3VyY2UgPSBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCk7XHJcbiAgICAgICAgaWYodm0ubnVldmFDYWxsZSlcclxuICAgICAgICAgIGd1YXJkYXJDYWxsZSgpO1xyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICBDb2ZyYWRlUmVzb3VyY2Uuc2F2ZSh2bS5jb2ZyYWRlLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICBcclxuICAgICAgZnVuY3Rpb24gZ3VhcmRhckNhbGxlKCkge1xyXG4gICAgICAgIHNlY3RvcmVzU2VydmljZS5zZWN0b3Jlc1Jlc3QoKS5nZXQoe3NlY3Rvcjogdm0uc2VjdG9yfSwgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2YXIgc2VjdG9yUmVzb3VyY2UgPSAgZGF0YVswXTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaWYoc2VjdG9yUmVzb3VyY2Upe1xyXG4gICAgICAgICAgICBzZWN0b3JSZXNvdXJjZS5jYWxsZXMucHVzaCh2bS5zZWFyY2hUZXh0KTtcclxuICAgICAgICAgICAgc2VjdG9yUmVzb3VyY2UuJHNhdmUoKTtcclxuICAgICAgICAgICAgQ29mcmFkZVJlc291cmNlLnNhdmUodm0uY29mcmFkZSwgZ3VhcmRhclN1Y2Nlc3MsIGd1YXJkYXJFcnJvcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAgICAgICAuY29udGVudCgnRWwgc2VjdG9yICcgK3ZtLnNlY3RvcisgJyBubyBleGlzdGUhIScpXHJcbiAgICAgICAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJTdWNjZXNzKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdHdWFyZGFkbyBjb24gw6l4aXRvISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFcnJvciBhbCBndWFyZGFyISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHNob3dBY3Rpb25Ub2FzdCgpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0V4aXN0ZW4gZXJyb3JlcyBlbiBlbCBmb3JtdWxhcmlvJylcclxuICAgICAgICAgIC5hY3Rpb24oJ09LJylcclxuICAgICAgICAgIC5oaWdobGlnaHRBY3Rpb24oZmFsc2UpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdDb2ZyYWRlRGV0YWxsZScsIENvZnJhZGVEZXRhbGxlKTtcclxuXHJcbiAgZnVuY3Rpb24gQ29mcmFkZURldGFsbGUoJHN0YXRlLCAkZmlsdGVyLCBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UsIGdldE1hcHNQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5jb2ZyYWRlID0gbnVsbDtcclxuICAgIHZtLm1hcHMgPSBudWxsO1xyXG4gICAgXHJcbiAgICB2bS5tb2RpZnlDb2ZyYWRlID0gbW9kaWZ5Q29mcmFkZTtcclxuICAgIFxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGdldENvZnJhZGVQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmNvZnJhZGUgPSBkYXRhO1xyXG4gICAgICAgIGlmKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcylcclxuICAgICAgICAgIGlmKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEpe1xyXG4gICAgICAgICAgICB2bS5pYmFuID0gJGZpbHRlcigncGFyc2VJYmFuJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuKTtcclxuICAgICAgICAgICAgdm0uY2MgPSAkZmlsdGVyKCdwYXJzZUNDJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5jYyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgdm0ubWFwcyA9IGdldE1hcHNQcmVwU2VydmljZTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5Q29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzQ2FtYmlvcycsIHtjb2ZyYWRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29mcmFkZXMnLCBDb2ZyYWRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIENvZnJhZGVzKGNvZnJhZGVzUHJlcFNlcnZpY2UsIGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0uY29mcmFkZXMgPSBudWxsO1xyXG4gICAgdm0ubmV4dFBhZ2UgPSBudWxsO1xyXG4gICAgdm0uY29mcmFkZXNCYWphcyA9IG51bGw7XHJcbiAgICB2bS5uZXh0UGFnZUJhamFzID0gbnVsbDtcclxuICAgIHZtLnNlbGVjdGVkVGFiID0gMDtcclxuICAgIGFjdGl2YXRlKCk7XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICBjb2ZyYWRlc1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0ubmV4dFBhZ2UgPSBkYXRhLm5leHQ7XHJcbiAgICAgICAgdm0uY29mcmFkZXMgPSBkYXRhLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLm5leHRQYWdlQmFqYXMgPSBkYXRhLm5leHQ7XHJcbiAgICAgICAgdm0uY29mcmFkZXNCYWphcyA9IGRhdGEucmVzdWx0cztcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3Njcm9sbHknLCBzY3JvbGx5KTtcclxuXHJcbiAgZnVuY3Rpb24gc2Nyb2xseSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgIGxpbms6IGZ1bmN0aW9uICgkcm9vdFNjb3BlLCBlbGVtZW50LCBhdHRycykge1xyXG4gICAgICAgIHZhciByYXcgPSBlbGVtZW50WzBdO1xyXG4gICAgICAgIGVsZW1lbnQuYmluZCgnc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgaWYgKHJhdy5zY3JvbGxUb3AgKyByYXcub2Zmc2V0SGVpZ2h0ID49IHJhdy5zY3JvbGxIZWlnaHQtNSkge1xyXG4gICAgICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KFwic2Nyb2xsRG93blwiKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZpbHRlcigncGFyc2VJYmFuJywgcGFyc2VJYmFuKVxyXG4gICAgLmZpbHRlcigncGFyc2VDQycsIHBhcnNlQ0MpXHJcbiAgICAuZmlsdGVyKCdjYWxjdWxhckliYW4nLCBjYWxjdWxhckliYW4pXHJcbiAgICAuZmlsdGVyKCdjYWxjdWxhckNDJywgY2FsY3VsYXJDQyk7XHJcblxyXG4gIGZ1bmN0aW9uIHBhcnNlSWJhbigpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoaWJhbikge1xyXG4gICAgICBpYmFuID0gaWJhbiB8fCAnJztcclxuICAgICAgdmFyIGZvcm1hdHRlZEliYW4gPSAnJztcclxuXHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWJhbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChpID4gMCAmJiBpICUgNCA9PT0gMCkge1xyXG4gICAgICAgICAgZm9ybWF0dGVkSWJhbiArPSAnICc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvcm1hdHRlZEliYW4gKz0gaWJhbltpXTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZm9ybWF0dGVkSWJhbjtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBwYXJzZUNDKCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjYykge1xyXG4gICAgICBjYyA9IGNjIHx8ICcnO1xyXG4gICAgICB2YXIgZm9ybWF0dGVkQ0MgPSAnJztcclxuXHJcbiAgICAgIGZvcm1hdHRlZENDID0gY2Muc3Vic3RyKDAsIDQpICsgJy0nO1xyXG4gICAgICBmb3JtYXR0ZWRDQyArPSBjYy5zdWJzdHIoNCwgNCkgKyAnLSc7XHJcbiAgICAgIGZvcm1hdHRlZENDICs9IGNjLnN1YnN0cig4LCAyKSArICctJztcclxuICAgICAgZm9ybWF0dGVkQ0MgKz0gY2Muc3Vic3RyKDEwLCAxMCk7XHJcblxyXG4gICAgICByZXR1cm4gZm9ybWF0dGVkQ0M7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY2FsY3VsYXJDQygpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoaWJhbikge1xyXG4gICAgICBpYmFuID0gaWJhbiB8fCAnJztcclxuICAgICAgcmV0dXJuIGliYW4uc3Vic3RyKDQsIDIwKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjYWxjdWxhckliYW4oKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGNjYykge1xyXG4gICAgICB2YXIgcGFpcyA9IFwiRVNcIjtcclxuICAgICAgdmFyIGNpZnJhcyA9IGNjYyArIHZhbG9yQ2lmcmFzKHBhaXMpICsgXCIwMFwiO1xyXG4gICAgICB2YXIgcmVzdG8gPSBtb2R1bG8oY2lmcmFzLCA5Nyk7XHJcbiAgICAgIHJldHVybiBwYWlzICsgY2Vyb3NJenF1aWVyZGEoOTgtcmVzdG8sIDIpICsgY2NjO1xyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiB2YWxvckNpZnJhcyhjaWZyYXMpIHtcclxuICAgICAgdmFyIExFVFJBUyA9IFwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCI7XHJcbiAgICAgIHZhciBpdGVtcyA9IFtdO1xyXG4gICAgICBmb3IgKHZhciBpPTA7IGk8Y2lmcmFzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHBvc2ljaW9uID0gTEVUUkFTLmluZGV4T2YoY2lmcmFzW2ldKTtcclxuICAgICAgICBpdGVtcy5wdXNoKHBvc2ljaW9uIDwgMD8gXCItXCI6IHBvc2ljaW9uKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gaXRlbXMuam9pbihcIlwiKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2R1bG8oY2lmcmFzLCBkaXZpc29yKSB7XHJcbiAgICAgIHZhciBDVUVOVEEgPSAxMDtcclxuICAgICAgdmFyIGxhcmdvID0gY2lmcmFzLmxlbmd0aDtcclxuICAgICAgdmFyIHJlc3RvID0gMDtcclxuICAgICAgZm9yICh2YXIgaT0wOyBpPGxhcmdvOyBpKz1DVUVOVEEpIHtcclxuICAgICAgICB2YXIgZGl2aWRlbmRvID0gcmVzdG8gKyBcIlwiICsgY2lmcmFzLnN1YnN0cihpLCBDVUVOVEEpO1xyXG4gICAgICAgIHJlc3RvID0gZGl2aWRlbmRvICUgZGl2aXNvcjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzdG87XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2Vyb3NJenF1aWVyZGEoY2lmcmFzLCBsYXJnbykge1xyXG4gICAgICBjaWZyYXMgKz0gJyc7XHJcbiAgICAgIHdoaWxlKGNpZnJhcy5sZW5ndGggPCBsYXJnbykgeyBjaWZyYXMgPSAnMCcrY2lmcmFzOyB9XHJcbiAgICAgIHJldHVybiBjaWZyYXM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZpbHRlcignc3RyaW5nVG9EYXRlRm9ybWF0Jywgc3RyaW5nVG9EYXRlRm9ybWF0KVxyXG4gICAgLmZpbHRlcignZm9ybWF0RGF0ZXMnLCBmb3JtYXREYXRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIHN0cmluZ1RvRGF0ZUZvcm1hdCgpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZiAoZGF0YS5kYXRvc1BlcnNvbmFsZXMpe1xyXG4gICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhTmFjaW1pZW50byAgPSBuZXcgRGF0ZShkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYU5hY2ltaWVudG8pLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xyXG4gICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhSW5zY3JpcGNpb24gPSBuZXcgRGF0ZShkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYUluc2NyaXBjaW9uKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgICAgfVxyXG4gICAgICBpZihkYXRhLmZlY2hhKVxyXG4gICAgICAgIGRhdGEuZmVjaGEgID0gbmV3IERhdGUoZGF0YS5mZWNoYSkudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XHJcblxyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBmb3JtYXREYXRlcygpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBcclxuICAgICAgdmFyIGRhdGUgPSBudWxsO1xyXG4gICAgICBpZiAoZGF0YS5kYXRvc1BlcnNvbmFsZXMpe1xyXG4gICAgICAgIGRhdGUgPSBkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYU5hY2ltaWVudG8uc3BsaXQoXCIvXCIpO1xyXG4gICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhTmFjaW1pZW50byAgPSBkYXRlWzJdICsgJy0nICsgZGF0ZVsxXSArICctJyArIGRhdGVbMF07XHJcbiAgICAgICAgZGF0ZSA9IGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhSW5zY3JpcGNpb24uc3BsaXQoXCIvXCIpO1xyXG4gICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhSW5zY3JpcGNpb24gPSBkYXRlWzJdICsgJy0nICsgZGF0ZVsxXSArICctJyArIGRhdGVbMF07XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSBpZiAoZGF0YS5mZWNoYSl7XHJcbiAgICAgICAgZGF0ZSA9IGRhdGEuZmVjaGEuc3BsaXQoXCIvXCIpO1xyXG4gICAgICAgIGRhdGEuZmVjaGEgID0gZGF0ZVsyXSArICctJyArIGRhdGVbMV0gKyAnLScgKyBkYXRlWzBdO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2V7XHJcbiAgICAgICAgZGF0YSA9IG5ldyBEYXRlKGRhdGEpLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5maWx0ZXIoJ3JlbW92ZU51bGxzJywgcmVtb3ZlTnVsbHMpO1xyXG5cclxuICBmdW5jdGlvbiByZW1vdmVOdWxscygpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKG9iail7XHJcbiAgICAgIHZhciBpc0FycmF5ID0gb2JqIGluc3RhbmNlb2YgQXJyYXk7XHJcbiAgICAgIGZvciAodmFyIGsgaW4gb2JqKXtcclxuICAgICAgICBpZiAob2JqW2tdPT09bnVsbCkgaXNBcnJheSA/IG9iai5zcGxpY2UoaywxKSA6IGRlbGV0ZSBvYmpba107XHJcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIG9ialtrXT09XCJvYmplY3RcIikgcmVtb3ZlTnVsbHMob2JqW2tdKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gb2JqO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZhY3RvcnkoJ2FzcGlyYW50ZXNTZXJ2aWNlJywgYXNwaXJhbnRlc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBhc3BpcmFudGVzU2VydmljZSgkcmVzb3VyY2UsICRmaWx0ZXIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGFzcGlyYW50ZXNSZXN0OiBhc3BpcmFudGVzUmVzdFxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBhc3BpcmFudGVzUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9hc3BpcmFudGVzLzppZC5qc29uOmpzb24nLCBudWxsLCB7XHJcbiAgICAgICAgJ3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6IHRydWV9LFxyXG4gICAgICAgICdnZXQnOiAgICB7bWV0aG9kOidHRVQnLCB0cmFuc2Zvcm1SZXNwb25zZTogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGZpbHRlcignc3RyaW5nVG9EYXRlRm9ybWF0JykoYW5ndWxhci5mcm9tSnNvbihkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgJ3NhdmUnOiAgIHttZXRob2Q6J1BPU1QnLCB0cmFuc2Zvcm1SZXF1ZXN0OiBmdW5jdGlvbihkYXRhLCBoZWFkZXJzR2V0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLnRvSnNvbigkZmlsdGVyKCdmb3JtYXREYXRlcycpKCRmaWx0ZXIoJ3JlbW92ZU51bGxzJykoZGF0YSkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdjb2ZyYWRlc1NlcnZpY2UnLCBjb2ZyYWRlc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBjb2ZyYWRlc1NlcnZpY2UoJHJlc291cmNlLCAkaHR0cCwgJGZpbHRlcikge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY29mcmFkZXNSZXN0OiBjb2ZyYWRlc1Jlc3QsXHJcbiAgICAgIGNvZnJhZGVzQmFqYXNSZXN0OiBjb2ZyYWRlc0JhamFzUmVzdCxcclxuICAgICAgZ2V0Q2FsbGVzOiBnZXRDYWxsZXMsXHJcbiAgICAgIGdldFJlZ2lzdHJvczogZ2V0UmVnaXN0cm9zXHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIGNvZnJhZGVzUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9jb2ZyYWRlcy86aWQuanNvbjpqc29uJywgbnVsbCwge1xyXG4gICAgICAgICdxdWVyeSc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OiBmYWxzZX0sXHJcbiAgICAgICAgJ2dldCc6ICAgIHttZXRob2Q6J0dFVCcsIHRyYW5zZm9ybVJlc3BvbnNlOiBmdW5jdGlvbihkYXRhLCBoZWFkZXJzR2V0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkZmlsdGVyKCdzdHJpbmdUb0RhdGVGb3JtYXQnKShhbmd1bGFyLmZyb21Kc29uKGRhdGEpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAnc2F2ZSc6ICAge21ldGhvZDonUE9TVCcsIHRyYW5zZm9ybVJlcXVlc3Q6IGZ1bmN0aW9uKGRhdGEsIGhlYWRlcnNHZXR0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFuZ3VsYXIudG9Kc29uKCRmaWx0ZXIoJ2Zvcm1hdERhdGVzJykoJGZpbHRlcigncmVtb3ZlTnVsbHMnKShkYXRhKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjb2ZyYWRlc0JhamFzUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9jb2ZyYWRlc0JhamFzLzppZC5qc29uOmpzb24nLCBudWxsLCB7J3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6ZmFsc2V9fSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0Q2FsbGVzKGNhbGxlKSB7XHJcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvY2FsbGVzLycsIHtwYXJhbXM6IHtjYWxsZTogY2FsbGV9fSkuXHJcbiAgICAgICAgICAgICAgdGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci5mcm9tSnNvbihyZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0UmVnaXN0cm9zKCkge1xyXG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL3JlZ2lzdHJvcy8nKS5cclxuICAgICAgICAgICAgICB0aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLmZyb21Kc29uKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdjb3N0YWxlcm9zU2VydmljZScsIGNvc3RhbGVyb3NTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gY29zdGFsZXJvc1NlcnZpY2UoJHJlc291cmNlLCAkZmlsdGVyKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjb3N0YWxlcm9zUmVzdDogY29zdGFsZXJvc1Jlc3RcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gY29zdGFsZXJvc1Jlc3QoKSB7XHJcbiAgICAgIHJldHVybiAkcmVzb3VyY2UoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvY29zdGFsZXJvcy86aWQuanNvbjpqc29uJywgbnVsbCwge1xyXG4gICAgICAgICdxdWVyeSc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OiB0cnVlfSxcclxuICAgICAgICAnZ2V0JzogICAge21ldGhvZDonR0VUJywgdHJhbnNmb3JtUmVzcG9uc2U6IGZ1bmN0aW9uKGRhdGEsIGhlYWRlcnNHZXR0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRmaWx0ZXIoJ3N0cmluZ1RvRGF0ZUZvcm1hdCcpKGFuZ3VsYXIuZnJvbUpzb24oZGF0YSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICdzYXZlJzogICB7bWV0aG9kOidQT1NUJywgdHJhbnNmb3JtUmVxdWVzdDogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci50b0pzb24oJGZpbHRlcignZm9ybWF0RGF0ZXMnKSgkZmlsdGVyKCdyZW1vdmVOdWxscycpKGRhdGEpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnbWFwYXNTZXJ2aWNlJywgbWFwYXNTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gbWFwYXNTZXJ2aWNlKCRodHRwKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBnZW9Db2RpbmdBUEk6IGdlb0NvZGluZ0FQSVxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBnZW9Db2RpbmdBUEkoYWRkcmVzcykge1xyXG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KCdodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvZ2VvY29kZS9qc29uJywge3BhcmFtczoge2FkZHJlc3M6IGFkZHJlc3MsIGtleTogXCJBSXphU3lEQ19PSURTbDZjdXJqQ01DTHl6bjJ5aE1tZy1lcjVrbklcIn19KS5cclxuICAgICAgdGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICB9KTtcclxuICAgIH0gICAgXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZhY3RvcnkoJ3NlY3RvcmVzU2VydmljZScsIHNlY3RvcmVzU2VydmljZSk7XHJcblxyXG4gIGZ1bmN0aW9uIHNlY3RvcmVzU2VydmljZSgkcmVzb3VyY2UpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHNlY3RvcmVzUmVzdDogc2VjdG9yZXNSZXN0XHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIHNlY3RvcmVzUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9zZWN0b3Jlcy86aWQuanNvbjpqc29uJywgbnVsbCwge1xyXG4gICAgICAgICdnZXQnOiAge21ldGhvZDonR0VUJywgaXNBcnJheTogdHJ1ZX0sXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdDb3N0YWxlcm9BZGRNb2RpZnknLCBDb3N0YWxlcm9BZGRNb2RpZnkpO1xyXG5cclxuICBmdW5jdGlvbiBDb3N0YWxlcm9BZGRNb2RpZnkoJHNjb3BlLCAkZmlsdGVyLCAkZG9jdW1lbnQsICRtZFRvYXN0LCAkc3RhdGUsIGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlLCBjb3N0YWxlcm9zU2VydmljZSwgY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5iYWNrU3RhdGUgICAgICAgICAgPSBiYWNrU3RhdGU7XHJcbiAgICB2bS5xdWVyeVNlYXJjaCAgICAgICAgPSBxdWVyeVNlYXJjaDtcclxuICAgIHZtLnNlbGVjdGVkSXRlbUNoYW5nZSA9IHNlbGVjdGVkSXRlbUNoYW5nZTtcclxuICAgIHZtLmd1YXJkYXIgICAgICAgICAgICA9IGd1YXJkYXI7XHJcblxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgaWYgKGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlKXtcclxuICAgICAgICBnZXRDb3N0YWxlcm9QcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGluaXRDb3N0YWxlcm8pO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRDb3N0YWxlcm8oZGF0YSkge1xyXG4gICAgICB2bS5jb3N0YWxlcm8gPSBkYXRhO1xyXG4gICAgICB2bS5jb2ZyYWRlU2VsZWN0ZWQgPSB2bS5jb3N0YWxlcm8uY29mcmFkZTtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYmFja1N0YXRlKCkge1xyXG4gICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcXVlcnlTZWFyY2gocXVlcnkpIHtcclxuICAgICAgdmFyIGZpbHRybyA9IHt9O1xyXG4gICAgICBpZiAoaXNOYU4ocXVlcnkpKVxyXG4gICAgICAgIGZpbHRyby5ub21icmUgPSBxdWVyeTtcclxuICAgICAgZWxzZSBpZighaXNOYU4ocXVlcnkpKVxyXG4gICAgICAgIGZpbHRyby5udW1lcm9PcmRlbiA9IHF1ZXJ5O1xyXG5cclxuICAgICAgcmV0dXJuIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5xdWVyeShmaWx0cm8pLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNlbGVjdGVkSXRlbUNoYW5nZShpdGVtKSB7XHJcbiAgICAgIHZtLmNvc3RhbGVyby5jb2ZyYWRlID0gIGl0ZW0gPyBpdGVtLmlkIDogbnVsbDtcclxuICAgIH0gICAgXHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhcihpc1ZhbGlkKSB7XHJcbiAgICAgIGlmKGlzVmFsaWQpe1xyXG4gICAgICAgIHZtLmNvc3RhbGVyby5mZWNoYSA9ICh2bS5jb3N0YWxlcm8uZmVjaGEgPT09IFwiXCIpID8gbnVsbCA6IHZtLmNvc3RhbGVyby5mZWNoYTtcclxuICAgICAgICBpZiAoIXZtLmNvc3RhbGVyby5jb2ZyYWRlKXtcclxuICAgICAgICAgICRzY29wZS5jb3N0YWxlcm9Gb3JtLmNvZnJhZGUuJGVycm9yLnJlcXVpcmVkID0gdHJ1ZTtcclxuICAgICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgY29zdGFsZXJvc1NlcnZpY2UuY29zdGFsZXJvc1Jlc3QoKS5zYXZlKHZtLmNvc3RhbGVybywgZ3VhcmRhclN1Y2Nlc3MsIGd1YXJkYXJFcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBzaG93QWN0aW9uVG9hc3QoKTtcclxuICAgIH1cclxuICAgICAgXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyU3VjY2VzcyhyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnR3VhcmRhZG8gY29uIMOpeGl0byEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgICAgJHN0YXRlLmdvKCdjb3N0YWxlcm9zJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFcnJvciBhbCBndWFyZGFyISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHNob3dBY3Rpb25Ub2FzdCgpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0V4aXN0ZW4gZXJyb3JlcyBlbiBlbCBmb3JtdWxhcmlvJylcclxuICAgICAgICAgIC5hY3Rpb24oJ09LJylcclxuICAgICAgICAgIC5oaWdobGlnaHRBY3Rpb24oZmFsc2UpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdDb3N0YWxlcm9EZXRhbGxlJywgQ29zdGFsZXJvRGV0YWxsZSk7XHJcblxyXG4gIGZ1bmN0aW9uIENvc3RhbGVyb0RldGFsbGUoJHN0YXRlLCBnZXRDb3N0YWxlcm9QcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5tb2RpZnlDb3N0YWxlcm8gPSBtb2RpZnlDb3N0YWxlcm87XHJcbiAgICBcclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIHJldHVybiBnZXRDb3N0YWxlcm9QcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmNvc3RhbGVybyA9IGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG1vZGlmeUNvc3RhbGVybyhpZCwgZXZlbnQpe1xyXG4gICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3NDYW1iaW9zJywge2Nvc3RhbGVyb0lkOiBpZH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0Nvc3RhbGVyb3MnLCBDb3N0YWxlcm9zKTtcclxuXHJcbiAgZnVuY3Rpb24gQ29zdGFsZXJvcyhjb3N0YWxlcm9zUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLmNvc3RhbGVyb3MgPSBudWxsO1xyXG4gICAgYWN0aXZhdGUoKTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIHJldHVybiBjb3N0YWxlcm9zUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5jb3N0YWxlcm9zID0gZGF0YTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdMaXN0YUFzcGlyYW50ZXMnLCBMaXN0YUFzcGlyYW50ZXMpO1xyXG5cclxuICBmdW5jdGlvbiBMaXN0YUFzcGlyYW50ZXMoJHN0YXRlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5tb2RpZnlBc3BpcmFudGUgPSBtb2RpZnlBc3BpcmFudGU7XHJcbiAgICB2bS5nb1RvQXNwaXJhbnRlICAgPSBnb1RvQXNwaXJhbnRlO1xyXG5cclxuICAgIGZ1bmN0aW9uIGdvVG9Bc3BpcmFudGUoaWQsIGV2ZW50KXtcclxuICAgICAgJHN0YXRlLmdvKCdhc3BpcmFudGVzRGV0YWxsZScsIHthc3BpcmFudGVJZDogaWR9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2RpZnlBc3BpcmFudGUoaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICRzdGF0ZS5nbygnYXNwaXJhbnRlc0NhbWJpb3MnLCB7YXNwaXJhbnRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ2xpc3RhQXNwaXJhbnRlcycsIGxpc3RhQXNwaXJhbnRlcyk7XHJcblxyXG5cclxuICBmdW5jdGlvbiBsaXN0YUFzcGlyYW50ZXMoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvYXNwaXJhbnRlcy9saXN0L2FzcGlyYW50ZXMuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGFzcGlyYW50ZXM6ICc9YXNwaXJhbnRlcycgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQpIHtcclxuICAgICAgICBzY29wZS4kd2F0Y2goJ3ZtLmFzcGlyYW50ZXMnLCBmdW5jdGlvbihuZXdWYWwpIHtcclxuICAgICAgICAgICAgaWYobmV3VmFsKSB7IFxyXG4gICAgICAgICAgICAgIHNjb3BlLnZtLmFzcGlyYW50ZXNTaG9ydCA9IHNjb3BlLnZtLmFzcGlyYW50ZXMubWFwKGZ1bmN0aW9uKGFzcGlyYW50ZSl7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXV4ID0ge2lkOiBhc3BpcmFudGUuaWQsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBmZWNoYTogYXNwaXJhbnRlLmZlY2hhfTtcclxuICAgICAgICAgICAgICAgIGlmIChhc3BpcmFudGUuY29mcmFkZSl7XHJcbiAgICAgICAgICAgICAgICAgIGF1eC5udW1lcm9PcmRlbiA9IGFzcGlyYW50ZS5jb2ZyYWRlLm51bWVyb09yZGVuO1xyXG4gICAgICAgICAgICAgICAgICBhdXgubm9tYnJlID0gYXNwaXJhbnRlLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLm5vbWJyZSAgICArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc3BpcmFudGUuY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuYXBlbGxpZG8xICsgJyAnICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc3BpcmFudGUuY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuYXBlbGxpZG8yO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGF1eDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCB0cnVlKTtcclxuICAgICAgfSxcclxuICAgICAgY29udHJvbGxlcjogJ0xpc3RhQXNwaXJhbnRlcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlQXNwaXJhbnRlJywgUmVtb3ZlQXNwaXJhbnRlKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVtb3ZlQXNwaXJhbnRlKCRzdGF0ZSwgJG1kRGlhbG9nLCBhc3BpcmFudGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5yZW1vdmVBc3BpcmFudGUgPSByZW1vdmVBc3BpcmFudGU7XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHJlbW92ZUFzcGlyYW50ZShpZCwgZXZlbnQpe1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgdmFyIHJlbW92ZURpYWxvZyA9ICRtZERpYWxvZy5jb25maXJtKClcclxuICAgICAgICAgIC50aXRsZSgnRWxpbWluYXIgYXNwaXJhbnRlJylcclxuICAgICAgICAgIC5jb250ZW50KCfCv0VzdMOhIHNlZ3VybyBxdWUgZGVzZWEgZWxpbWluYXIgZXN0ZSBhc3BpcmFudGU/PGJyPlBlcmRlcsOhIHN1IGFudGlndWVkYWQuJylcclxuICAgICAgICAgIC5hcmlhTGFiZWwoJ0VsaW1pbmFyIGFzcGlyYW50ZScpXHJcbiAgICAgICAgICAudGFyZ2V0RXZlbnQoZXZlbnQpXHJcbiAgICAgICAgICAub2soJ0FjZXB0YXInKVxyXG4gICAgICAgICAgLmNhbmNlbCgnQ2FuY2VsYXInKVxyXG4gICAgICAgICAgLmNsaWNrT3V0c2lkZVRvQ2xvc2UodHJ1ZSk7XHJcbiAgICAgICRtZERpYWxvZy5zaG93KHJlbW92ZURpYWxvZykudGhlbihmdW5jdGlvbigpIHtcclxuICAgICAgICByZW1vdmVFbmRBc3BpcmFudGUoaWQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZW1vdmVFbmRBc3BpcmFudGUoaWQpe1xyXG4gICAgICB2YXIgYXNwaXJhbnRlID0gYXNwaXJhbnRlc1NlcnZpY2UuYXNwaXJhbnRlc1Jlc3QoKS5nZXQoe2lkOiBpZH0sIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgYXNwaXJhbnRlLiRkZWxldGUoe2lkOiBpZH0pLnRoZW4oZnVuY3Rpb24oKXtcclxuICAgICAgICAgIGlmKCRzdGF0ZS5jdXJyZW50Lm5hbWUgPT09ICdhc3BpcmFudGVzJyl7XHJcbiAgICAgICAgICAgICRzdGF0ZS50cmFuc2l0aW9uVG8oJHN0YXRlLmN1cnJlbnQsIG51bGwsIHtcclxuICAgICAgICAgICAgICByZWxvYWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgaW5oZXJpdDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgbm90aWZ5OiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgJHN0YXRlLmdvKCdhc3BpcmFudGVzJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdyZW1vdmVBc3BpcmFudGUnLCByZW1vdmVBc3BpcmFudGUpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlQXNwaXJhbnRlKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2FzcGlyYW50ZXMvcmVtb3ZlL3JlbW92ZUFzcGlyYW50ZS5kaXJlY3RpdmUuaHRtbCcsXHJcbiAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgYXNwaXJhbnRlSWQ6ICc9YXNwaXJhbnRlJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdSZW1vdmVBc3BpcmFudGUnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0xpc3RhQ29mcmFkZXMnLCBMaXN0YUNvZnJhZGVzKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFDb2ZyYWRlcygkcm9vdFNjb3BlLCAkc2NvcGUsICRzdGF0ZSwgY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5maWx0cm8gICAgPSAnbm9tYnJlJztcclxuICAgIHZtLnR5cGVJbnB1dCA9ICd0ZXh0JztcclxuICAgIHZtLmJ1c2NhciAgICA9IG51bGw7XHJcblxyXG4gICAgdm0uc2VhcmNoICAgICAgICAgPSBzZWFyY2g7XHJcbiAgICB2bS5yYWRpb0NoYW5nZSAgICA9IHJhZGlvQ2hhbmdlO1xyXG4gICAgdm0uZ29Ub0NvZnJhZGUgICAgPSBnb1RvQ29mcmFkZTtcclxuICAgIHZtLm1vZGlmeUNvZnJhZGUgID0gbW9kaWZ5Q29mcmFkZTtcclxuXHJcbiAgICB2YXIgaGFuZGxlciA9ICRyb290U2NvcGUuJG9uKCdzY3JvbGxEb3duJywgZ2V0TmV4dFBhZ2UpO1xyXG5cclxuICAgICRzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKSB7XHJcbiAgICAgIGhhbmRsZXIoKTtcclxuICAgICAgaGFuZGxlciA9IG51bGw7XHJcbiAgICB9KTtcclxuXHJcbiAgICBmdW5jdGlvbiBnZXROZXh0UGFnZSgpIHtcclxuICAgICAgaWYgKCF2bS5iYWphcylcclxuICAgICAgICBnZXROZXh0UGFnZUFsdGFzKCk7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBnZXROZXh0UGFnZUJhamFzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0TmV4dFBhZ2VBbHRhcygpIHtcclxuICAgICAgaWYgKHZtLm5leHRQYWdlKXtcclxuICAgICAgICB2YXIgcGFyYW1ldGVycyA9IHtwYWdlOiB2bS5uZXh0UGFnZX07XHJcblxyXG4gICAgICAgIGlmICh2bS5idXNjYXIpXHJcbiAgICAgICAgICBwYXJhbWV0ZXJzW3ZtLmZpbHRyb10gPSB2bS5idXNjYXI7XHJcblxyXG4gICAgICAgIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5xdWVyeShwYXJhbWV0ZXJzLCBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIHZtLm5leHRQYWdlID0gZGF0YS5uZXh0O1xyXG4gICAgICAgICAgdm0uY29mcmFkZXMgPSB2bS5jb2ZyYWRlcy5jb25jYXQoZGF0YS5yZXN1bHRzKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldE5leHRQYWdlQmFqYXMoKSB7XHJcbiAgICAgIGlmICh2bS5uZXh0UGFnZUJhamFzKXtcclxuICAgICAgICB2YXIgcGFyYW1ldGVycyA9IHtwYWdlOiB2bS5uZXh0UGFnZUJhamFzfTtcclxuXHJcbiAgICAgICAgaWYgKHZtLmJ1c2NhcilcclxuICAgICAgICAgIHBhcmFtZXRlcnNbdm0uZmlsdHJvXSA9IHZtLmJ1c2NhcjtcclxuXHJcbiAgICAgICAgY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzQmFqYXNSZXN0KCkucXVlcnkocGFyYW1ldGVycywgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2bS5uZXh0UGFnZUJhamFzID0gZGF0YS5uZXh0O1xyXG4gICAgICAgICAgdm0uY29mcmFkZXNCYWphcyA9IHZtLmNvZnJhZGVzQmFqYXMuY29uY2F0KGRhdGEucmVzdWx0cyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWFyY2goKSB7XHJcbiAgICAgIGlmICghdm0uYmFqYXMpXHJcbiAgICAgICAgc2VhcmNoQWx0YXMoKTtcclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNlYXJjaEJhamFzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VhcmNoQWx0YXMoKSB7XHJcbiAgICAgIHZhciBmaWx0cm8gPSB7fTtcclxuICAgICAgZmlsdHJvW3ZtLmZpbHRyb10gPSB2bS5idXNjYXI7XHJcbiAgICAgIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5xdWVyeShmaWx0cm8sIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLm5leHRQYWdlID0gZGF0YS5uZXh0O1xyXG4gICAgICAgIHZtLmNvZnJhZGVzID0gZGF0YS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWFyY2hCYWphcygpIHtcclxuICAgICAgdmFyIGZpbHRybyA9IHt9O1xyXG4gICAgICBmaWx0cm9bdm0uZmlsdHJvXSA9IHZtLmJ1c2NhcjtcclxuICAgICAgY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzQmFqYXNSZXN0KCkucXVlcnkoZmlsdHJvLCBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5uZXh0UGFnZUJhamFzID0gZGF0YS5uZXh0O1xyXG4gICAgICAgIHZtLmNvZnJhZGVzQmFqYXMgPSBkYXRhLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJhZGlvQ2hhbmdlKCkge1xyXG4gICAgICB2bS5idXNjYXIgPSBudWxsO1xyXG4gICAgICB2bS50eXBlSW5wdXQgPSAodm0uZmlsdHJvID09PSAnbm9tYnJlJykgPyAndGV4dCc6ICdudW1iZXInO1xyXG4gICAgICB2bS5zZWFyY2goKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnb1RvQ29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzRGV0YWxsZScsIHtjb2ZyYWRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5Q29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgJHN0YXRlLmdvKCdjb2ZyYWRlc0NhbWJpb3MnLCB7Y29mcmFkZUlkOiBpZH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YUNvZnJhZGVzJywgbGlzdGFDb2ZyYWRlcyk7XHJcblxyXG5cclxuICBmdW5jdGlvbiBsaXN0YUNvZnJhZGVzKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL2xpc3QvY29mcmFkZXMuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGNvZnJhZGVzOiAnPWNvZnJhZGVzJyxcclxuICAgICAgICBuZXh0UGFnZTogJz1wYWdlJyxcclxuICAgICAgICBjb2ZyYWRlc0JhamFzOiAnPWNvZnJhZGVzQmFqYXMnLFxyXG4gICAgICAgIG5leHRQYWdlQmFqYXM6ICc9cGFnZUJhamFzJ1xyXG4gICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnTGlzdGFDb2ZyYWRlcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlQ29mcmFkZScsIFJlbW92ZUNvZnJhZGUpO1xyXG5cclxuICBmdW5jdGlvbiBSZW1vdmVDb2ZyYWRlKCRzdGF0ZSwgJG1kRGlhbG9nKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLnJlbW92ZUNvZnJhZGUgPSByZW1vdmVDb2ZyYWRlO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVDb2ZyYWRlKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyh7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9kaWFsb2dUbXBsL3JlbW92ZUNvZnJhZGUudG1wbC5odG1sJyxcclxuICAgICAgICBsb2NhbHM6IHtpZDogaWR9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdSZW1vdmVDb2ZyYWRlVG1wbCcsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcbiAgICAgICAgdGFyZ2V0RXZlbnQ6IGV2ZW50LFxyXG4gICAgICAgIGNsaWNrT3V0c2lkZVRvQ2xvc2U6dHJ1ZVxyXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIC8vcmVtb3ZlRW5kQ29mcmFkZShpZCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3JlbW92ZUNvZnJhZGUnLCByZW1vdmVDb2ZyYWRlKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIHJlbW92ZUNvZnJhZGUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVtb3ZlL3JlbW92ZUNvZnJhZGUuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGNvZnJhZGVJZDogJz1jb2ZyYWRlJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdSZW1vdmVDb2ZyYWRlJyxcclxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdSZXN0b3JlQ29mcmFkZScsIFJlc3RvcmVDb2ZyYWRlKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVzdG9yZUNvZnJhZGUoJHN0YXRlLCAkbWREaWFsb2csIGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5yZXN0b3JlQ29mcmFkZSA9IHJlc3RvcmVDb2ZyYWRlO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZXN0b3JlQ29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgdmFyIHJlc3RhdXJhckRpYWxvZyA9ICRtZERpYWxvZy5jb25maXJtKClcclxuICAgICAgICAgIC50aXRsZSgnUmVzdGF1cmFyIGNvZnJhZGUnKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ8K/RXN0w6Egc2VndXJvIHF1ZSBkZXNlYSByZXN0YXVyYXIgZXN0ZSBjb2ZyYWRlPzxicj5TdSBuw7ptZXJvIGRlIENvZnJhZGUgc2UgY2FsY3VsYXLDoSBkZSBudWV2by4nKVxyXG4gICAgICAgICAgLmFyaWFMYWJlbCgnUmVzdGF1cmFyIGNvZnJhZGUnKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZXN0YXVyYXJEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVzdG9yZUVuZENvZnJhZGUoaWQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZXN0b3JlRW5kQ29mcmFkZShpZCl7XHJcbiAgICAgIHZhciBjb2ZyYWRlID0gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLmdldCh7aWQ6IGlkfSwgZnVuY3Rpb24oKXtcclxuICAgICAgICBjb2ZyYWRlLmJhamEgPSBudWxsO1xyXG4gICAgICAgIGNvZnJhZGUuJHNhdmUoe3VwZGF0ZU51bWVyb0NvZnJhZGU6IHRydWV9KS50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBpZigkc3RhdGUuY3VycmVudC5uYW1lID09PSAnY29mcmFkZXMnKXtcclxuICAgICAgICAgICAgJHN0YXRlLnRyYW5zaXRpb25Ubygkc3RhdGUuY3VycmVudCwgbnVsbCwge1xyXG4gICAgICAgICAgICAgIHJlbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgICBub3RpZnk6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdyZXN0b3JlQ29mcmFkZScsIHJlc3RvcmVDb2ZyYWRlKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIHJlc3RvcmVDb2ZyYWRlKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL3Jlc3RvcmUvcmVzdG9yZUNvZnJhZGUuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGNvZnJhZGVJZDogJz1jb2ZyYWRlJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdSZXN0b3JlQ29mcmFkZScsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignTGlzdGFDb3N0YWxlcm9zJywgTGlzdGFDb3N0YWxlcm9zKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFDb3N0YWxlcm9zKCRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubW9kaWZ5Q29zdGFsZXJvID0gbW9kaWZ5Q29zdGFsZXJvO1xyXG4gICAgdm0uZ29Ub0Nvc3RhbGVybyAgID0gZ29Ub0Nvc3RhbGVybztcclxuXHJcbiAgICBmdW5jdGlvbiBnb1RvQ29zdGFsZXJvKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnY29zdGFsZXJvc0RldGFsbGUnLCB7Y29zdGFsZXJvSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5Q29zdGFsZXJvKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3NDYW1iaW9zJywge2Nvc3RhbGVyb0lkOiBpZH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YUNvc3RhbGVyb3MnLCBsaXN0YUNvc3RhbGVyb3MpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGFDb3N0YWxlcm9zKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2Nvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb3N0YWxlcm9zOiAnPWNvc3RhbGVyb3MnICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgc2NvcGUuJHdhdGNoKCd2bS5jb3N0YWxlcm9zJywgZnVuY3Rpb24obmV3VmFsKSB7XHJcbiAgICAgICAgICAgIGlmKG5ld1ZhbCkgeyBcclxuICAgICAgICAgICAgICBzY29wZS52bS5jb3N0YWxlcm9zU2hvcnQgPSBzY29wZS52bS5jb3N0YWxlcm9zLm1hcChmdW5jdGlvbihjb3N0YWxlcm8pe1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1eCA9IHtpZDogY29zdGFsZXJvLmlkLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l0aW86IGNvc3RhbGVyby5zaXRpb307XHJcbiAgICAgICAgICAgICAgICBpZiAoY29zdGFsZXJvLmNvZnJhZGUpe1xyXG4gICAgICAgICAgICAgICAgICBhdXgubnVtZXJvT3JkZW4gPSBjb3N0YWxlcm8uY29mcmFkZS5udW1lcm9PcmRlbjtcclxuICAgICAgICAgICAgICAgICAgYXV4Lm5vbWJyZSA9IGNvc3RhbGVyby5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5ub21icmUgICAgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdGFsZXJvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMSArICcgJyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdGFsZXJvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBhdXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgdHJ1ZSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdMaXN0YUNvc3RhbGVyb3MnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1JlbW92ZUNvc3RhbGVybycsIFJlbW92ZUNvc3RhbGVybyk7XHJcblxyXG4gIGZ1bmN0aW9uIFJlbW92ZUNvc3RhbGVybygkc3RhdGUsICRtZERpYWxvZywgY29zdGFsZXJvc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ucmVtb3ZlQ29zdGFsZXJvID0gcmVtb3ZlQ29zdGFsZXJvO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVDb3N0YWxlcm8oaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHZhciByZW1vdmVEaWFsb2cgPSAkbWREaWFsb2cuY29uZmlybSgpXHJcbiAgICAgICAgICAudGl0bGUoJ0VsaW1pbmFyIGNvc3RhbGVybycpXHJcbiAgICAgICAgICAuY29udGVudCgnwr9Fc3TDoSBzZWd1cm8gcXVlIGRlc2VhIGVsaW1pbmFyIGVzdGUgY29zdGFsZXJvPzxicj5EZWphcsOhIHN1IHNpdGlvIGxpYnJlLicpXHJcbiAgICAgICAgICAuYXJpYUxhYmVsKCdFbGltaW5hciBjb3N0YWxlcm8nKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZW1vdmVEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVtb3ZlRW5kQ29zdGFsZXJvKGlkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRW5kQ29zdGFsZXJvKGlkKXtcclxuICAgICAgdmFyIGNvc3RhbGVybyA9IGNvc3RhbGVyb3NTZXJ2aWNlLmNvc3RhbGVyb3NSZXN0KCkuZ2V0KHtpZDogaWR9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGNvc3RhbGVyby5jb2ZyYWRlID0gbnVsbDtcclxuICAgICAgICBjb3N0YWxlcm8udGFsbGEgPSBudWxsO1xyXG4gICAgICAgIGNvc3RhbGVyby5mZWNoYSA9IG51bGw7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29zdGFsZXJvLiRzYXZlKCkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgaWYoJHN0YXRlLmN1cnJlbnQubmFtZSA9PT0gJ2Nvc3RhbGVyb3MnKXtcclxuICAgICAgICAgICAgJHN0YXRlLnRyYW5zaXRpb25Ubygkc3RhdGUuY3VycmVudCwgbnVsbCwge1xyXG4gICAgICAgICAgICAgIHJlbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgICBub3RpZnk6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3MnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3JlbW92ZUNvc3RhbGVybycsIHJlbW92ZUNvc3RhbGVybyk7XHJcblxyXG5cclxuICBmdW5jdGlvbiByZW1vdmVDb3N0YWxlcm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9yZW1vdmUvcmVtb3ZlQ29zdGFsZXJvLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb3N0YWxlcm9JZDogJz1jb3N0YWxlcm8nICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgY29udHJvbGxlcjogJ1JlbW92ZUNvc3RhbGVybycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlQ29mcmFkZVRtcGwnLCBSZW1vdmVDb2ZyYWRlVG1wbCk7XHJcblxyXG4gIGZ1bmN0aW9uIFJlbW92ZUNvZnJhZGVUbXBsKCRzdGF0ZSwgJG1kRGlhbG9nLCBjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0uY2xvc2VEaWFsb2cgPSBjbG9zZURpYWxvZztcclxuICAgIHZtLnJlbW92ZUVuZENvZnJhZGUgPSByZW1vdmVFbmRDb2ZyYWRlO1xyXG5cclxuICAgIGZ1bmN0aW9uIGNsb3NlRGlhbG9nKCkge1xyXG4gICAgICAkbWREaWFsb2cuY2FuY2VsKCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZW1vdmVFbmRDb2ZyYWRlKGlkKXtcclxuICAgICAgdmFyIGNvZnJhZGUgPSBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkuZ2V0KHtpZDogaWR9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGNvZnJhZGUuYmFqYSA9IHttb3Rpdm8gOiB2bS5tb3Rpdm9CYWphLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmZWNoYUJhamE6IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9O1xyXG4gICAgICAgIGNvZnJhZGUubnVtZXJvQ29mcmFkZSA9IG51bGw7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29mcmFkZS4kc2F2ZSh7dXBkYXRlTnVtZXJvQ29mcmFkZTogdHJ1ZX0pLnRoZW4oZnVuY3Rpb24oKXtcclxuICAgICAgICAgIHZtLmNsb3NlRGlhbG9nKCk7XHJcbiAgICAgICAgICBpZigkc3RhdGUuY3VycmVudC5uYW1lID09PSAnY29mcmFkZXMnKXtcclxuICAgICAgICAgICAgJHN0YXRlLnRyYW5zaXRpb25Ubygkc3RhdGUuY3VycmVudCwgbnVsbCwge1xyXG4gICAgICAgICAgICAgIHJlbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgICBub3RpZnk6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
