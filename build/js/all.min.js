!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.interceptors.push("myHttpInterceptor")}function o(e){var o=angular.element(document.querySelector(".m-app-loading"));return{request:function(e){return"POST"===e.method&&o.css("display","block"),e},requestError:function(o){return e.reject(o)},response:function(e){return o.css("display","none"),e},responseError:function(t){return o.css("display","none"),e.reject(t)}}}angular.module("app").factory("myHttpInterceptor",o).config(e),e.$inject=["$httpProvider"],o.$inject=["$q"]}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,o){o.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:o,cofradesBajasPrepService:t}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:r,getMapsPrepService:a}}).state("cofradesCambios",{url:"/cofrades/cambios/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/addModify/cofradeAddModify.html")}],controller:"CofradeAddModify",controllerAs:"vm",resolve:{getCofradePrepService:r}})}function o(e){return e.cofradesRest().query()}function t(e){return e.cofradesBajasRest().query()}function r(e,o){return o.cofradeId?e.cofradesRest().get({id:o.cofradeId}):!1}function a(e,o,t){return o.$promise.then(function(o){var r=o.datosPersonales.direccion.calle+" "+o.datosPersonales.direccion.numero+" "+o.datosPersonales.direccion.municipio+" "+o.datosPersonales.direccion.provincia+" "+o.datosPersonales.direccion.cp;return t.geoCodingAPI(r).then(function(o){if(o.data.results.length){var t=o.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:t.lat,longitude:t.lng},marker:{latitude:t.lat,longitude:t.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],o.$inject=["cofradesService"],t.$inject=["cofradesService"],r.$inject=["cofradesService","$stateParams"],a.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("costaleros",{url:"/costaleros",templateProvider:["$templateCache",function(e){return e.get("costaleros/list/costaleros.html")}],controller:"Costaleros",controllerAs:"vm",resolve:{costalerosPrepService:o}}).state("costalerosDetalle",{url:"/costaleros/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/detail/costaleroDetalle.html")}],controller:"CostaleroDetalle",controllerAs:"vm",resolve:{getCostaleroPrepService:t}}).state("costalerosCambios",{url:"/costaleros/cambios/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/addModify/costaleroAddModify.html")}],controller:"CostaleroAddModify",controllerAs:"vm",resolve:{getCostaleroPrepService:t}})}function o(e){return e.costalerosRest().query()}function t(e,o){return o.costaleroId?e.costalerosRest().get({id:o.costaleroId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],o.$inject=["costalerosService"],t.$inject=["costalerosService","$stateParams"]}(),function(){"use strict";function e(e,o){function t(o){e(o).toggle()}function r(e,r){t(r),o.go(e)}var a=this;a.toggleSidenav=t,a.navigateTo=r}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,o,t,r,a,n,c){function s(){a?a.$promise.then(i):n.getRegistros().then(function(e){$.cofrade.numeroOrden=e.data.numeroOrden,$.cofrade.numeroCofrade=e.data.numeroCofrade})}function i(e){return $.cofrade=e,$.calleSelected={calle:$.cofrade.datosPersonales.direccion.calle,cp:$.cofrade.datosPersonales.direccion.cp,provincia:$.cofrade.datosPersonales.direccion.provincia,municipio:$.cofrade.datosPersonales.direccion.municipio},$.fechaNacimiento=$.cofrade.datosPersonales.fechaNacimiento,$.fechaInscripcion=$.cofrade.datosPersonales.fechaInscripcion,$.cofrade.datosFinancieros=$.cofrade.datosFinancieros||{cuenta:{},deuda:[]},$.cofrade.datosFinancieros.cuenta=$.cofrade.datosFinancieros.cuenta||{},$.cofrade.datosFinancieros.deuda=$.cofrade.datosFinancieros.deuda||[],!0}function l(){window.history.back()}function u(e){return n.getCalles(e).then(function(e){return e.data})}function d(e){e?($.cofrade.datosPersonales.direccion.calle=e.calle,$.cofrade.datosPersonales.direccion.municipio=e.municipio,$.cofrade.datosPersonales.direccion.cp=e.cp,$.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):($.cofrade.datosPersonales.direccion.calle=null,$.cofrade.datosPersonales.direccion.municipio=null,$.cofrade.datosPersonales.direccion.cp=null,$.cofrade.datosPersonales.direccion.provincia=null,$.sector=null,$.nuevaCalle=!0)}function f(e){c.sectoresRest().query({calle:e},function(e){$.sector=e[0].numeroSector,$.nuevaCalle=!1})}function p(){$.cofrade.datosFinancieros.cuenta.iban&&($.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")($.cofrade.datosFinancieros.cuenta.iban))}function m(){$.cofrade.datosFinancieros.cuenta.cc&&($.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")($.cofrade.datosFinancieros.cuenta.cc))}function g(e){function r(){c.sectoresRest().get({sector:$.sector},function(e){var r=e[0];r?(r.calles.push($.searchText),r.$save(),s.save($.cofrade,v,h)):t.show(t.simple().content("El sector "+$.sector+" no existe!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var a={cuenta:{},deuda:[]};$.cofrade.datosPersonales.direccion.calle=$.searchText,JSON.stringify($.cofrade.datosFinancieros)===JSON.stringify(a)&&delete $.cofrade.datosFinancieros;var s=n.cofradesRest();$.nuevaCalle?r():s.save($.cofrade,v,h)}else C()}function v(e){t.show(t.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("cofrades")}function h(e){t.show(t.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function C(){t.show(t.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var $=this;$.nuevaCalle=!0,$.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:(new Date).toLocaleDateString(),fechaNacimiento:(new Date).toLocaleDateString()}},$.backState=l,$.querySearch=u,$.selectedItemChange=d,$.calcularCC=p,$.calcularIban=m,$.guardar=g,s()}angular.module("app").controller("CofradeAddModify",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,o,t,r){function a(){return t.$promise.then(function(e){c.cofrade=e,c.cofrade.datosFinancieros&&c.cofrade.datosFinancieros.cuenta&&(c.iban=o("parseIban")(c.cofrade.datosFinancieros.cuenta.iban),c.cc=o("parseCC")(c.cofrade.datosFinancieros.cuenta.cc)),c.maps=r})}function n(o,t){e.go("cofradesCambios",{cofradeId:o})}var c=this;c.cofrade=null,c.maps=null,c.modifyCofrade=n,a()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,o){function t(){return e.$promise.then(function(e){r.nextPage=e.next,r.cofrades=e.results}),o.$promise.then(function(e){r.nextPageBajas=e.next,r.cofradesBajas=e.results})}var r=this;r.cofrades=null,r.nextPage=null,r.cofradesBajas=null,r.nextPageBajas=null,r.selectedTab=0,t()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,o,t){var r=o[0];o.bind("scroll",function(){r.scrollTop+r.offsetHeight>=r.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var o="",t=0;t<e.length;t++)t>0&&t%4===0&&(o+=" "),o+=e[t];return o}}function o(){return function(e){e=e||"";var o="";return o=e.substr(0,4)+"-",o+=e.substr(4,4)+"-",o+=e.substr(8,2)+"-",o+=e.substr(10,10)}}function t(){return function(e){return e=e||"",e.substr(4,20)}}function r(){function e(e){for(var o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",t=[],r=0;r<e.length;r++){var a=o.indexOf(e[r]);t.push(0>a?"-":a)}return t.join("")}function o(e,o){for(var t=10,r=e.length,a=0,n=0;r>n;n+=t){var c=a+""+e.substr(n,t);a=c%o}return a}function t(e,o){for(e+="";e.length<o;)e="0"+e;return e}return function(r){var a="ES",n=r+e(a)+"00",c=o(n,97);return a+t(98-c,2)+r}}angular.module("app").filter("parseIban",e).filter("parseCC",o).filter("calcularIban",r).filter("calcularCC",t)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales&&(e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento).toLocaleDateString(),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion).toLocaleDateString()),e.fecha&&(e.fecha=new Date(e.fecha).toLocaleDateString()),e}}function o(){return function(e){var o=null;return e.datosPersonales&&(o=e.datosPersonales.fechaNacimiento.split("/"),e.datosPersonales.fechaNacimiento=o[2]+"-"+o[1]+"-"+o[0],o=e.datosPersonales.fechaInscripcion.split("/"),e.datosPersonales.fechaInscripcion=o[2]+"-"+o[1]+"-"+o[0]),e.fecha&&(o=e.fecha.split("/"),e.fecha=o[2]+"-"+o[1]+"-"+o[0]),e}}angular.module("app").filter("stringToDateFormat",e).filter("formatDates",o)}(),function(){"use strict";function e(){return function(o){var t=o instanceof Array;for(var r in o)null===o[r]?t?o.splice(r,1):delete o[r]:"object"==typeof o[r]&&e(o[r]);return o}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,o,t){function r(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,o){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}function a(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(e){return o.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function c(){return o.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:r,cofradesBajasRest:a,getCalles:n,getRegistros:c}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e,o){function t(){return e("http://127.0.0.1:5050/api/costaleros/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,t){return o("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,t){return angular.toJson(o("formatDates")(o("removeNulls")(e)))}}})}return{costalerosRest:t}}angular.module("app").factory("costalerosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function o(o){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:o,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:o}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function o(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:o}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,o,t,r,a,n,c,s){function i(){n&&n.$promise.then(l)}function l(e){return h.costalero=e,h.cofradeSelected=h.costalero.cofrade,!0}function u(){window.history.back()}function d(e){var o={};return isNaN(e)?o.nombre=e:isNaN(e)||(o.numeroOrden=e),s.cofradesRest().query(o).$promise.then(function(e){return e.results})}function f(e){h.costalero.cofrade=e?e.id:null}function p(o){o?(h.costalero.fecha=""===h.costalero.fecha?null:h.costalero.fecha,h.costalero.cofrade?c.costalerosRest().save(h.costalero,m,g):(e.costaleroForm.cofrade.$error.required=!0,v())):v()}function m(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("costaleros")}function g(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function v(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,i()}angular.module("app").controller("CostaleroAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","getCostaleroPrepService","costalerosService","cofradesService"]}(),function(){"use strict";function e(e,o,t,r){function a(){return t.$promise.then(function(e){c.costalero=e,c.costalero.datosFinancieros&&c.costalero.datosFinancieros.cuenta&&(c.iban=o("parseIban")(c.costalero.datosFinancieros.cuenta.iban),c.cc=o("parseCC")(c.costalero.datosFinancieros.cuenta.cc)),c.maps=r})}function n(o,t){e.go("costalerosCambios",{costaleroId:o})}var c=this;c.costalero=null,c.maps=null,c.modifyCostalero=n,a()}angular.module("app").controller("CostaleroDetalle",e),e.$inject=["$state","$filter","getCostaleroPrepService","getMapsPrepService"]}(),function(){"use strict";function e(e){function o(){return e.$promise.then(function(e){t.costaleros=e})}var t=this;t.costaleros=null,o()}angular.module("app").controller("Costaleros",e),e.$inject=["costalerosPrepService"]}(),function(){"use strict";function e(e,o,t,r){function a(){p.bajas?c():n()}function n(){if(p.nextPage){var e={page:p.nextPage};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=p.cofrades.concat(e.results)})}}function c(){if(p.nextPageBajas){var e={page:p.nextPageBajas};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=p.cofradesBajas.concat(e.results)})}}function s(){p.bajas?l():i()}function i(){var e={};e[p.filtro]=p.buscar,r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=e.results})}function l(){var e={};e[p.filtro]=p.buscar,r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=e.results})}function u(){p.buscar=null,p.typeInput="nombre"===p.filtro?"text":"number",p.search()}function d(e,o){t.go("cofradesDetalle",{cofradeId:e})}function f(e,o){o.stopPropagation(),t.go("cofradesCambios",{cofradeId:e})}var p=this;p.filtro="nombre",p.typeInput="text",p.buscar=null,p.search=s,p.radioChange=u,p.goToCofrade=d,p.modifyCofrade=f;var m=e.$on("scrollDown",a);o.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}(),function(){"use strict";function e(e,o){function t(e,t){t.stopPropagation(),o.show({templateUrl:"./templates/directives/cofrades/remove/dialogTmpl/removeCofrade.tmpl.html",locals:{id:e},controller:"RemoveCofradeTmpl",controllerAs:"vm",bindToController:!0,targetEvent:t,clickOutsideToClose:!0}).then(function(){})}var r=this;r.removeCofrade=t}angular.module("app").controller("RemoveCofrade",e),e.$inject=["$state","$mdDialog"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/remove/removeCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RemoveCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCofrade",e)}(),function(){"use strict";function e(e){function o(o,t){t.stopPropagation(),e.go("costalerosCambios",{costaleroId:o})}var t=this;t.modifyCostalero=o}angular.module("app").controller("ListaCostaleros",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/list/costaleros.directive.html",scope:{costaleros:"=costaleros"},link:function(e,o){e.$watch("vm.costaleros",function(o){o&&(e.vm.costalerosShort=e.vm.costaleros.map(function(e){var o={sitio:e.sitio};return e.cofrade&&(o.id=e.id,o.numeroOrden=e.cofrade.numeroOrden,o.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),o}))},!0)},controller:"ListaCostaleros",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCostaleros",e)}(),function(){"use strict";function e(e,o,t){function r(e,t){t.stopPropagation();var r=o.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(t).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);o.show(r).then(function(){a(e)})}function a(o){var r=t.cofradesRest().get({id:o},function(){r.baja=null,r.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.restoreCofrade=r}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e,o,t){function r(){o.cancel()}function a(o){var r=t.cofradesRest().get({id:o},function(){r.baja={motivo:n.motivoBaja,fechaBaja:(new Date).toLocaleDateString()},r.numeroCofrade=null,r.$save({updateNumeroCofrade:!0}).then(function(){n.closeDialog(),"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.closeDialog=r,n.removeEndCofrade=a}angular.module("app").controller("RemoveCofradeTmpl",e),e.$inject=["$state","$mdDialog","cofradesService"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5pbml0Lm1vZHVsZS5qcyIsImFwcC5sb2FkaW5nLmpzIiwiYWxsLm1pbi5qcyIsImFwcC5tYXAuanMiLCJhcHAucGlja2VyRGF0ZS5qcyIsImFwcC5yb3V0ZXMuanMiLCJhcHAudGhlbWUuanMiLCJjb2ZyYWRlcy9jb2ZyYWRlcy5yb3V0ZXMuanMiLCJjb3N0YWxlcm9zL2Nvc3RhbGVyb3Mucm91dGVzLmpzIiwiaW50ZXJmYXovYXBwLmNvbnRyb2xsZXIuanMiLCJjb2ZyYWRlcy9hZGRNb2RpZnkvY29mcmFkZUFkZE1vZGlmeS5jb250cm9sbGVyLmpzIiwiY29mcmFkZXMvZGV0YWlsL2NvZnJhZGVEZXRhbGxlLmNvbnRyb2xsZXIuanMiLCJjb2ZyYWRlcy9saXN0L2NvZnJhZGVzLmNvbnRyb2xsZXIuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvc2Nyb2xseS5kaXJlY3RpdmUuanMiLCJjb21tb25zL2ZpbHRlcnMvcGFyc2VDdWVudGEuZmlsdGVyLmpzIiwiY29tbW9ucy9maWx0ZXJzL3BhcnNlRGF0ZS5maWx0ZXIuanMiLCJjb21tb25zL2ZpbHRlcnMvcmVtb3ZlTnVsbHMuZmlsdGVyLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9jb2ZyYWRlcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9jb3N0YWxlcm9zLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL21hcGFzLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL3NlY3RvcmVzLnNlcnZpY2UuanMiLCJjb3N0YWxlcm9zL2FkZE1vZGlmeS9jb3N0YWxlcm9BZGRNb2RpZnkuY29udHJvbGxlci5qcyIsImNvc3RhbGVyb3MvZGV0YWlsL2Nvc3RhbGVyb0RldGFsbGUuY29udHJvbGxlci5qcyIsImNvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmNvbnRyb2xsZXIuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvbGlzdC9jb2ZyYWRlcy5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9saXN0L2NvZnJhZGVzLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9yZW1vdmUvcmVtb3ZlQ29mcmFkZS5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9yZW1vdmUvcmVtb3ZlQ29mcmFkZS5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9saXN0L2Nvc3RhbGVyb3MuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9saXN0L2Nvc3RhbGVyb3MuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3Jlc3RvcmUvcmVzdG9yZUNvZnJhZGUuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVzdG9yZS9yZXN0b3JlQ29mcmFkZS5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVtb3ZlL2RpYWxvZ1RtcGwvcmVtb3ZlQ29mcmFkZS5jb250cm9sbGVyLnRtcGwuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImxvYWRpbmdTcGlubmVyIiwiJGh0dHBQcm92aWRlciIsImludGVyY2VwdG9ycyIsInB1c2giLCJteUh0dHBJbnRlcmNlcHRvciIsIiRxIiwibG9hZFNjcmVlbiIsImVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZXF1ZXN0IiwiY29uZmlnIiwibWV0aG9kIiwiY3NzIiwicmVxdWVzdEVycm9yIiwicmVqZWN0aW9uIiwicmVqZWN0IiwicmVzcG9uc2UiLCJyZXNwb25zZUVycm9yIiwiZmFjdG9yeSIsIiRpbmplY3QiLCJnb29nbGVNYXBBUEkiLCJ1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlciIsImNvbmZpZ3VyZSIsImxpYnJhcmllcyIsImRhdGVQaWNrZXJDb25maWciLCIkbWREYXRlTG9jYWxlUHJvdmlkZXIiLCJtb250aHMiLCJzaG9ydE1vbnRocyIsImRheXMiLCJzaG9ydERheXMiLCJmaXJzdERheU9mV2VlayIsInBhcnNlRGF0ZSIsImRhdGVTdHJpbmciLCJEYXRlIiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGUiLCJ0aGVtZUFuZ3VsYXJNYXRlcmlhbCIsIiRtZFRoZW1pbmdQcm92aWRlciIsInRlbXBsYXRlUHJvdmlkZXIiLCIkdGVtcGxhdGVDYWNoZSIsImdldCIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJyZXNvbHZlIiwiY29mcmFkZXNQcmVwU2VydmljZSIsImNvZnJhZGVzQmFqYXNQcmVwU2VydmljZSIsImdldENvZnJhZGVQcmVwU2VydmljZSIsImdldE1hcHNQcmVwU2VydmljZSIsImNvZnJhZGVzU2VydmljZSIsImNvZnJhZGVzUmVzdCIsInF1ZXJ5IiwiY29mcmFkZXNCYWphc1Jlc3QiLCIkc3RhdGVQYXJhbXMiLCJpZCIsImNvZnJhZGVJZCIsInVpR21hcEdvb2dsZU1hcEFwaSIsIm1hcGFzU2VydmljZSIsIiRwcm9taXNlIiwidGhlbiIsImRhdGEiLCJhZGRyZXNzIiwiZGF0b3NQZXJzb25hbGVzIiwiZGlyZWNjaW9uIiwiY2FsbGUiLCJudW1lcm8iLCJtdW5pY2lwaW8iLCJwcm92aW5jaWEiLCJjcCIsImdlb0NvZGluZ0FQSSIsInJlc3VsdHMiLCJsZW5ndGgiLCJjb29yZGluYXRlcyIsImdlb21ldHJ5IiwibG9jYXRpb24iLCJtYXBzIiwiY29vcmQiLCJsYXRpdHVkZSIsImxhdCIsImxvbmdpdHVkZSIsImxuZyIsIm1hcmtlciIsInpvb20iLCJjb3N0YWxlcm9zUHJlcFNlcnZpY2UiLCJnZXRDb3N0YWxlcm9QcmVwU2VydmljZSIsImNvc3RhbGVyb3NTZXJ2aWNlIiwiY29zdGFsZXJvc1Jlc3QiLCJjb3N0YWxlcm9JZCIsIkFwcEN0cmwiLCIkbWRTaWRlbmF2IiwiJHN0YXRlIiwidG9nZ2xlU2lkZW5hdiIsIm1lbnVJZCIsInRvZ2dsZSIsIm5hdmlnYXRlVG8iLCJ0byIsImdvIiwidm0iLCJ0aGlzIiwiQ29mcmFkZUFkZE1vZGlmeSIsIiRmaWx0ZXIiLCIkZG9jdW1lbnQiLCIkbWRUb2FzdCIsInNlY3RvcmVzU2VydmljZSIsImFjdGl2YXRlIiwiaW5pdENvZnJhZGUiLCJnZXRSZWdpc3Ryb3MiLCJjb2ZyYWRlIiwibnVtZXJvT3JkZW4iLCJudW1lcm9Db2ZyYWRlIiwiY2FsbGVTZWxlY3RlZCIsImZlY2hhTmFjaW1pZW50byIsImZlY2hhSW5zY3JpcGNpb24iLCJkYXRvc0ZpbmFuY2llcm9zIiwiY3VlbnRhIiwiZGV1ZGEiLCJiYWNrU3RhdGUiLCJ3aW5kb3ciLCJoaXN0b3J5IiwiYmFjayIsInF1ZXJ5U2VhcmNoIiwiZ2V0Q2FsbGVzIiwic2VsZWN0ZWRJdGVtQ2hhbmdlIiwiaXRlbSIsInNlYXJjaFNlY3RvciIsInNlY3RvciIsIm51ZXZhQ2FsbGUiLCJzZWN0b3Jlc1Jlc3QiLCJudW1lcm9TZWN0b3IiLCJjYWxjdWxhckNDIiwiaWJhbiIsImNjIiwiY2FsY3VsYXJJYmFuIiwiZ3VhcmRhciIsImlzVmFsaWQiLCJndWFyZGFyQ2FsbGUiLCJzZWN0b3JSZXNvdXJjZSIsImNhbGxlcyIsInNlYXJjaFRleHQiLCIkc2F2ZSIsIkNvZnJhZGVSZXNvdXJjZSIsInNhdmUiLCJndWFyZGFyU3VjY2VzcyIsImd1YXJkYXJFcnJvciIsInNob3ciLCJzaW1wbGUiLCJjb250ZW50IiwicG9zaXRpb24iLCJwYXJlbnQiLCJoaWRlRGVsYXkiLCJKU09OIiwic3RyaW5naWZ5Iiwic2hvd0FjdGlvblRvYXN0IiwiYWN0aW9uIiwiaGlnaGxpZ2h0QWN0aW9uIiwic2V4byIsIkNvZnJhZGVEZXRhbGxlIiwibW9kaWZ5Q29mcmFkZSIsImV2ZW50IiwiQ29mcmFkZXMiLCJuZXh0UGFnZSIsIm5leHQiLCJjb2ZyYWRlcyIsIm5leHRQYWdlQmFqYXMiLCJjb2ZyYWRlc0JhamFzIiwic2VsZWN0ZWRUYWIiLCJzY3JvbGx5IiwicmVzdHJpY3QiLCJsaW5rIiwiJHJvb3RTY29wZSIsImF0dHJzIiwicmF3IiwiYmluZCIsInNjcm9sbFRvcCIsIm9mZnNldEhlaWdodCIsInNjcm9sbEhlaWdodCIsIiRlbWl0IiwiZGlyZWN0aXZlIiwicGFyc2VJYmFuIiwiZm9ybWF0dGVkSWJhbiIsImkiLCJwYXJzZUNDIiwiZm9ybWF0dGVkQ0MiLCJzdWJzdHIiLCJ2YWxvckNpZnJhcyIsImNpZnJhcyIsIkxFVFJBUyIsIml0ZW1zIiwicG9zaWNpb24iLCJpbmRleE9mIiwiam9pbiIsIm1vZHVsbyIsImRpdmlzb3IiLCJDVUVOVEEiLCJsYXJnbyIsInJlc3RvIiwiZGl2aWRlbmRvIiwiY2Vyb3NJenF1aWVyZGEiLCJjY2MiLCJwYWlzIiwiZmlsdGVyIiwic3RyaW5nVG9EYXRlRm9ybWF0IiwiZmVjaGEiLCJmb3JtYXREYXRlcyIsInNwbGl0IiwicmVtb3ZlTnVsbHMiLCJvYmoiLCJpc0FycmF5IiwiQXJyYXkiLCJrIiwic3BsaWNlIiwiJHJlc291cmNlIiwiJGh0dHAiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsImhlYWRlcnNHZXR0ZXIiLCJmcm9tSnNvbiIsInRyYW5zZm9ybVJlcXVlc3QiLCJ0b0pzb24iLCJwYXJhbXMiLCJrZXkiLCJDb3N0YWxlcm9BZGRNb2RpZnkiLCIkc2NvcGUiLCJpbml0Q29zdGFsZXJvIiwiY29zdGFsZXJvIiwiY29mcmFkZVNlbGVjdGVkIiwiZmlsdHJvIiwiaXNOYU4iLCJub21icmUiLCJjb3N0YWxlcm9Gb3JtIiwiJGVycm9yIiwicmVxdWlyZWQiLCJDb3N0YWxlcm9EZXRhbGxlIiwibW9kaWZ5Q29zdGFsZXJvIiwiQ29zdGFsZXJvcyIsImNvc3RhbGVyb3MiLCJMaXN0YUNvZnJhZGVzIiwiZ2V0TmV4dFBhZ2UiLCJiYWphcyIsImdldE5leHRQYWdlQmFqYXMiLCJnZXROZXh0UGFnZUFsdGFzIiwicGFyYW1ldGVycyIsInBhZ2UiLCJidXNjYXIiLCJjb25jYXQiLCJzZWFyY2giLCJzZWFyY2hCYWphcyIsInNlYXJjaEFsdGFzIiwicmFkaW9DaGFuZ2UiLCJ0eXBlSW5wdXQiLCJnb1RvQ29mcmFkZSIsInN0b3BQcm9wYWdhdGlvbiIsImhhbmRsZXIiLCIkb24iLCJsaXN0YUNvZnJhZGVzIiwidGVtcGxhdGVVcmwiLCJzY29wZSIsImJpbmRUb0NvbnRyb2xsZXIiLCJSZW1vdmVDb2ZyYWRlIiwiJG1kRGlhbG9nIiwicmVtb3ZlQ29mcmFkZSIsImxvY2FscyIsInRhcmdldEV2ZW50IiwiY2xpY2tPdXRzaWRlVG9DbG9zZSIsIkxpc3RhQ29zdGFsZXJvcyIsImxpc3RhQ29zdGFsZXJvcyIsIiR3YXRjaCIsIm5ld1ZhbCIsImNvc3RhbGVyb3NTaG9ydCIsIm1hcCIsImF1eCIsInNpdGlvIiwiYXBlbGxpZG8xIiwiYXBlbGxpZG8yIiwiUmVzdG9yZUNvZnJhZGUiLCJyZXN0b3JlQ29mcmFkZSIsInJlc3RhdXJhckRpYWxvZyIsImNvbmZpcm0iLCJ0aXRsZSIsImFyaWFMYWJlbCIsIm9rIiwiY2FuY2VsIiwicmVzdG9yZUVuZENvZnJhZGUiLCJiYWphIiwidXBkYXRlTnVtZXJvQ29mcmFkZSIsImN1cnJlbnQiLCJuYW1lIiwidHJhbnNpdGlvblRvIiwicmVsb2FkIiwiaW5oZXJpdCIsIm5vdGlmeSIsIlJlbW92ZUNvZnJhZGVUbXBsIiwiY2xvc2VEaWFsb2ciLCJyZW1vdmVFbmRDb2ZyYWRlIiwibW90aXZvIiwibW90aXZvQmFqYSIsImZlY2hhQmFqYSJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxZQUVBQSxTQUFBQyxPQUFBLE9BQ0EsWUFDQSxhQUNBLGFBQ0Esb0JBQ0Esa0JDUkEsV0FDQSxZQU9BLFNBQUFDLEdBQUFDLEdBQ0FBLEVBQUFDLGFBQUFDLEtBQUEscUJBR0EsUUFBQUMsR0FBQUMsR0FDQSxHQUFBQyxHQUFBUixRQUFBUyxRQUFBQyxTQUFBQyxjQUFBLGtC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QUFBNVEsT0FBQUcsc0JBQ0E2RSxFQUFBRSxjQUFBLEtBRUFGLEVBQUFnQyxPQUFBZ0oscUJBQUEsSUFBQWhPLEtBQUEsV0FDQXNDLEVBQUFrTSxjQUNBLGFBQUF6TSxFQUFBa00sUUFBQUMsS0FDQW5NLEVBQUFvTSxhQUFBcE0sRUFBQWtNLFFBQUEsTUFDQUcsUUFBQSxFQUNBQyxTQUFBLEVBQ0FDLFFBQUEsSUFJQXZNLEVBQUFNLEdBQUEsZ0JBeEJBLEdBQUFDLEdBQUFDLElBRUFELEdBQUFrTSxZQUFBQSxFQUNBbE0sRUFBQW1NLGlCQUFBQSxFQVJBN1MsUUFDQUMsT0FBQSxPQUNBa0QsV0FBQSxvQkFBQXdQLEc5Qm8wQ0VBLEVBQWtCclIsU0FBVyxTQUFVLFlBQWEiLCJmaWxlIjoiYWxsLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXHJcbiAgICAndWkucm91dGVyJyxcclxuICAgICduZ1Jlc291cmNlJyxcclxuICAgICduZ01hdGVyaWFsJyxcclxuICAgICd1aUdtYXBnb29nbGUtbWFwcycsXHJcbiAgICAnbmdNZXNzYWdlcydcclxuICBdKTtcclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdteUh0dHBJbnRlcmNlcHRvcicsIG15SHR0cEludGVyY2VwdG9yKVxyXG4gICAgLmNvbmZpZyhsb2FkaW5nU3Bpbm5lcik7XHJcblxyXG4gIGZ1bmN0aW9uIGxvYWRpbmdTcGlubmVyKCRodHRwUHJvdmlkZXIpIHtcclxuICAgICRodHRwUHJvdmlkZXIuaW50ZXJjZXB0b3JzLnB1c2goJ215SHR0cEludGVyY2VwdG9yJyk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBteUh0dHBJbnRlcmNlcHRvcigkcSkge1xyXG4gICAgdmFyIGxvYWRTY3JlZW4gPSBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm0tYXBwLWxvYWRpbmcnKSk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAvLyBvcHRpb25hbCBtZXRob2RcclxuICAgICAgJ3JlcXVlc3QnOiBmdW5jdGlvbihjb25maWcpIHtcclxuICAgICAgICAvLyBkbyBzb21ldGhpbmcgb24gc3VjY2Vzc1xyXG4gICAgICAgIGlmIChjb25maWcubWV0aG9kID09PSAnUE9TVCcpXHJcbiAgICAgICAgICBsb2FkU2NyZWVuLmNzcygnZGlzcGxheScsICdibG9jaycpO1xyXG4gICAgICAgIHJldHVybiBjb25maWc7XHJcbiAgICAgIH0sXHJcblxyXG4gICAgICAvLyBvcHRpb25hbCBtZXRob2RcclxuICAgICAncmVxdWVzdEVycm9yJzogZnVuY3Rpb24ocmVqZWN0aW9uKSB7XHJcbiAgICAgICAgLy8gZG8gc29tZXRoaW5nIG9uIGVycm9yXHJcbiAgICAgICAgcmV0dXJuICRxLnJlamVjdChyZWplY3Rpb24pO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgLy8gb3B0aW9uYWwgbWV0aG9kXHJcbiAgICAgICdyZXNwb25zZSc6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgLy8gZG8gc29tZXRoaW5nIG9uIHN1Y2Nlc3NcclxuICAgICAgICBsb2FkU2NyZWVuLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgLy8gb3B0aW9uYWwgbWV0aG9kXHJcbiAgICAgJ3Jlc3BvbnNlRXJyb3InOiBmdW5jdGlvbihyZWplY3Rpb24pIHtcclxuICAgICAgICAvLyBkbyBzb21ldGhpbmcgb24gZXJyb3JcclxuICAgICAgICBsb2FkU2NyZWVuLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgcmV0dXJuICRxLnJlamVjdChyZWplY3Rpb24pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7XHJcbiIsbnVsbCwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoZ29vZ2xlTWFwQVBJKTtcclxuXHJcbiAgZnVuY3Rpb24gZ29vZ2xlTWFwQVBJKHVpR21hcEdvb2dsZU1hcEFwaVByb3ZpZGVyKXtcclxuICAgIHVpR21hcEdvb2dsZU1hcEFwaVByb3ZpZGVyLmNvbmZpZ3VyZSh7XHJcbiAgICAgICAgbGlicmFyaWVzOiAnd2VhdGhlcixnZW9tZXRyeSx2aXN1YWxpemF0aW9uJ1xyXG4gICAgfSk7ICAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoZGF0ZVBpY2tlckNvbmZpZyk7XHJcblxyXG4gIGZ1bmN0aW9uIGRhdGVQaWNrZXJDb25maWcoJG1kRGF0ZUxvY2FsZVByb3ZpZGVyKSB7XHJcblxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLm1vbnRocyA9IFsnZW5lcm8nLCAnZmVicmVybycsICdtYXJ6bycsICdhYnJpbCcsICdtYXlvJywgJ2p1bmlvJywgJ2p1bGlvJywgJ2Fnb3N0bycsICdzZXB0aWVtYnJlJywgJ29jdHVicmUnLCAnbm92aWVtYnJlJywgJ2RpY2llbWJyZSddO1xyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLnNob3J0TW9udGhzID0gWydlbmUnLCAnZmViJywgJ21hcicsICdhYnInLCAnbWF5JywgJ2p1bicsICdqdWwnLCAnYWdvJywgJ3NlcCcsICdvY3QnLCAnbm92JywgJ2RpYyddO1xyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLmRheXMgPSBbJ2x1bmVzJywgJ21hcnRlcycsICdtacOpcmNvbGVzJywgJ2p1ZXZlcycsICd2aWVybmVzJywgJ3PDoWJhZG8nLCAnZG9taW5nbyddO1xyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLnNob3J0RGF5cyA9IFsnbHVuJywgJ21hcicsICdtacOpJywgJ2p1ZScsICd2aWUnLCAnc8OhYicsICdkb20nXTtcclxuXHJcbiAgICAkbWREYXRlTG9jYWxlUHJvdmlkZXIuZmlyc3REYXlPZldlZWsgPSAxO1xyXG4gICAgXHJcbiAgICAkbWREYXRlTG9jYWxlUHJvdmlkZXIucGFyc2VEYXRlID0gZnVuY3Rpb24oZGF0ZVN0cmluZykge1xyXG4gICAgICByZXR1cm4gbmV3IERhdGUoZGF0ZVN0cmluZyk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAkbWREYXRlTG9jYWxlUHJvdmlkZXIuZm9ybWF0RGF0ZSA9IGZ1bmN0aW9uKGRhdGUpIHtcclxuICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xyXG4gICAgfTtcclxuXHJcbiAgfVxyXG5cclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcclxuXHJcbiAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKFwiL1wiKTtcclxuXHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoXCJob21lXCIsIHtcclxuICAgICAgICB1cmw6IFwiL1wiLFxyXG4gICAgICAgIHRlbXBsYXRlOiAnPHAgY2xhc3M9XCJsZWFkXCI+V2VsY29tZSB0byB0aGUgVUktUm91dGVyIERlbW88L3A+JyArXHJcbiAgICAgICAgICAnPHA+VXNlIHRoZSBtZW51IGFib3ZlIHRvIG5hdmlnYXRlLiAnICtcclxuICAgICAgICAgICdQYXkgYXR0ZW50aW9uIHRvIHRoZSA8Y29kZT4kc3RhdGU8L2NvZGU+IGFuZCA8Y29kZT4kc3RhdGVQYXJhbXM8L2NvZGU+IHZhbHVlcyBiZWxvdy48L3A+JyArXHJcbiAgICAgICAgICAnPHA+Q2xpY2sgdGhlc2UgbGlua3PigJQ8YSBocmVmPVwiIy9jP2lkPTFcIj5BbGljZTwvYT4gb3IgJyArXHJcbiAgICAgICAgICAnPGEgaHJlZj1cIiMvdXNlci80MlwiPkJvYjwvYT7igJR0byBzZWUgYSB1cmwgcmVkaXJlY3QgaW4gYWN0aW9uLjwvcD4nXHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcodGhlbWVBbmd1bGFyTWF0ZXJpYWwpO1xyXG5cclxuICBmdW5jdGlvbiB0aGVtZUFuZ3VsYXJNYXRlcmlhbCgkbWRUaGVtaW5nUHJvdmlkZXIpe1xyXG4gICAgXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbmZpZyhjb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgIC5zdGF0ZSgnY29mcmFkZXMnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9jb2ZyYWRlc1wiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnY29mcmFkZXMvbGlzdC9jb2ZyYWRlcy5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0NvZnJhZGVzJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBjb2ZyYWRlc1ByZXBTZXJ2aWNlOiBjb2ZyYWRlc1ByZXBTZXJ2aWNlLFxyXG4gICAgICAgICAgICBjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2U6IGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLnN0YXRlKCdjb2ZyYWRlc0RldGFsbGUnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9jb2ZyYWRlcy86Y29mcmFkZUlkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdjb2ZyYWRlcy9kZXRhaWwvY29mcmFkZURldGFsbGUuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb2ZyYWRlRGV0YWxsZScsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlOiBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UsXHJcbiAgICAgICAgICAgIGdldE1hcHNQcmVwU2VydmljZTogZ2V0TWFwc1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KS5cclxuICAgICAgc3RhdGUoJ2NvZnJhZGVzQ2FtYmlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL2NvZnJhZGVzL2NhbWJpb3MvOmNvZnJhZGVJZFwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnY29mcmFkZXMvYWRkTW9kaWZ5L2NvZnJhZGVBZGRNb2RpZnkuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb2ZyYWRlQWRkTW9kaWZ5JyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnZXRDb2ZyYWRlUHJlcFNlcnZpY2U6IGdldENvZnJhZGVQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjb2ZyYWRlc1ByZXBTZXJ2aWNlKGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5xdWVyeSgpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY29mcmFkZXNCYWphc1ByZXBTZXJ2aWNlKGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc0JhamFzUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UoY29mcmFkZXNTZXJ2aWNlLCAkc3RhdGVQYXJhbXMpIHtcclxuICAgIHJldHVybiAoJHN0YXRlUGFyYW1zLmNvZnJhZGVJZCkgPyBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkuZ2V0KHtpZDogJHN0YXRlUGFyYW1zLmNvZnJhZGVJZH0pIDogZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG4gIGZ1bmN0aW9uIGdldE1hcHNQcmVwU2VydmljZSh1aUdtYXBHb29nbGVNYXBBcGksIGdldENvZnJhZGVQcmVwU2VydmljZSwgbWFwYXNTZXJ2aWNlKSB7XHJcbiAgICByZXR1cm4gZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIFxyXG4gICAgICB2YXIgYWRkcmVzcyA9IGRhdGEuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jYWxsZSAgICAgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5udW1lcm8gICAgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5tdW5pY2lwaW8gKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5wcm92aW5jaWEgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jcDtcclxuXHJcbiAgICAgIHJldHVybiBtYXBhc1NlcnZpY2UuZ2VvQ29kaW5nQVBJKGFkZHJlc3MpLlxyXG4gICAgICAgIHRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEucmVzdWx0cy5sZW5ndGgpe1xyXG4gICAgICAgICAgICB2YXIgY29vcmRpbmF0ZXMgPSByZXNwb25zZS5kYXRhLnJlc3VsdHNbMF0uZ2VvbWV0cnkubG9jYXRpb247XHJcbiAgICAgICAgICAgIHJldHVybiB1aUdtYXBHb29nbGVNYXBBcGkudGhlbihmdW5jdGlvbihtYXBzKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuICB7Y29vcmQ6ICB7IGxhdGl0dWRlOiBjb29yZGluYXRlcy5sYXQsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvbmdpdHVkZTogY29vcmRpbmF0ZXMubG5nIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyOiB7IGxhdGl0dWRlOiBjb29yZGluYXRlcy5sYXQsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvbmdpdHVkZTogY29vcmRpbmF0ZXMubG5nIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICB6b29tOiAxNyB9O1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoJ2Nvc3RhbGVyb3MnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9jb3N0YWxlcm9zXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdjb3N0YWxlcm9zL2xpc3QvY29zdGFsZXJvcy5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0Nvc3RhbGVyb3MnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGNvc3RhbGVyb3NQcmVwU2VydmljZTogY29zdGFsZXJvc1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuc3RhdGUoJ2Nvc3RhbGVyb3NEZXRhbGxlJywge1xyXG4gICAgICAgIHVybDogXCIvY29zdGFsZXJvcy86Y29zdGFsZXJvSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2Nvc3RhbGVyb3MvZGV0YWlsL2Nvc3RhbGVyb0RldGFsbGUuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb3N0YWxlcm9EZXRhbGxlJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnZXRDb3N0YWxlcm9QcmVwU2VydmljZTogZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pLlxyXG4gICAgICBzdGF0ZSgnY29zdGFsZXJvc0NhbWJpb3MnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9jb3N0YWxlcm9zL2NhbWJpb3MvOmNvc3RhbGVyb0lkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdjb3N0YWxlcm9zL2FkZE1vZGlmeS9jb3N0YWxlcm9BZGRNb2RpZnkuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb3N0YWxlcm9BZGRNb2RpZnknLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlOiBnZXRDb3N0YWxlcm9QcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjb3N0YWxlcm9zUHJlcFNlcnZpY2UoY29zdGFsZXJvc1NlcnZpY2UpIHtcclxuICAgIHJldHVybiBjb3N0YWxlcm9zU2VydmljZS5jb3N0YWxlcm9zUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG5cclxuICBcclxuICBmdW5jdGlvbiBnZXRDb3N0YWxlcm9QcmVwU2VydmljZShjb3N0YWxlcm9zU2VydmljZSwgJHN0YXRlUGFyYW1zKSB7XHJcbiAgICByZXR1cm4gKCRzdGF0ZVBhcmFtcy5jb3N0YWxlcm9JZCkgPyBjb3N0YWxlcm9zU2VydmljZS5jb3N0YWxlcm9zUmVzdCgpLmdldCh7aWQ6ICRzdGF0ZVBhcmFtcy5jb3N0YWxlcm9JZH0pIDogZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdBcHBDdHJsJywgQXBwQ3RybCk7XHJcblxyXG5cclxuICBmdW5jdGlvbiBBcHBDdHJsKCRtZFNpZGVuYXYsICRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIHZtLnRvZ2dsZVNpZGVuYXYgPSB0b2dnbGVTaWRlbmF2O1xyXG4gICAgdm0ubmF2aWdhdGVUbyAgICA9IG5hdmlnYXRlVG87XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHRvZ2dsZVNpZGVuYXYobWVudUlkKSB7XHJcbiAgICAgICRtZFNpZGVuYXYobWVudUlkKS50b2dnbGUoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBuYXZpZ2F0ZVRvKHRvLCBtZW51SWQpe1xyXG4gICAgICB0b2dnbGVTaWRlbmF2KG1lbnVJZCk7XHJcbiAgICAgICRzdGF0ZS5nbyh0byk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29mcmFkZUFkZE1vZGlmeScsIENvZnJhZGVBZGRNb2RpZnkpO1xyXG5cclxuICBmdW5jdGlvbiBDb2ZyYWRlQWRkTW9kaWZ5KCRmaWx0ZXIsICRkb2N1bWVudCwgJG1kVG9hc3QsICRzdGF0ZSwgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLCBjb2ZyYWRlc1NlcnZpY2UsIHNlY3RvcmVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubnVldmFDYWxsZSA9IHRydWU7XHJcbiAgICB2bS5jb2ZyYWRlID0ge2RhdG9zRmluYW5jaWVyb3M6IHtjdWVudGE6IHt9LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldWRhOiBbXX0sXHJcbiAgICAgICAgICAgICAgICAgIGRhdG9zUGVyc29uYWxlczogIHtkaXJlY2Npb246IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V4bzogXCJIb21icmVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlY2hhSW5zY3JpcGNpb246IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWNoYU5hY2ltaWVudG86IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9XHJcbiAgICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICB2bS5iYWNrU3RhdGUgICAgICAgICAgPSBiYWNrU3RhdGU7XHJcbiAgICB2bS5xdWVyeVNlYXJjaCAgICAgICAgPSBxdWVyeVNlYXJjaDtcclxuICAgIHZtLnNlbGVjdGVkSXRlbUNoYW5nZSA9IHNlbGVjdGVkSXRlbUNoYW5nZTtcclxuICAgIHZtLmNhbGN1bGFyQ0MgICAgICAgICA9IGNhbGN1bGFyQ0M7XHJcbiAgICB2bS5jYWxjdWxhckliYW4gICAgICAgPSBjYWxjdWxhckliYW47XHJcbiAgICB2bS5ndWFyZGFyICAgICAgICAgICAgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIGlmIChnZXRDb2ZyYWRlUHJlcFNlcnZpY2Upe1xyXG4gICAgICAgIGdldENvZnJhZGVQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGluaXRDb2ZyYWRlKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNle1xyXG4gICAgICAgIGNvZnJhZGVzU2VydmljZS5nZXRSZWdpc3Ryb3MoKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZtLmNvZnJhZGUubnVtZXJvT3JkZW4gPSByZXNwb25zZS5kYXRhLm51bWVyb09yZGVuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm0uY29mcmFkZS5udW1lcm9Db2ZyYWRlID0gcmVzcG9uc2UuZGF0YS5udW1lcm9Db2ZyYWRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRDb2ZyYWRlKGRhdGEpIHtcclxuICAgICAgdm0uY29mcmFkZSA9IGRhdGE7XHJcbiAgICAgIHZtLmNhbGxlU2VsZWN0ZWQgPSB7Y2FsbGU6IHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jYWxsZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjcDogdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpbmNpYTogdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLnByb3ZpbmNpYSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBtdW5pY2lwaW86IHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5tdW5pY2lwaW99O1xyXG5cclxuICAgICAgdm0uZmVjaGFOYWNpbWllbnRvID0gdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFOYWNpbWllbnRvO1xyXG4gICAgICB2bS5mZWNoYUluc2NyaXBjaW9uID0gdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFJbnNjcmlwY2lvbjtcclxuICAgICAgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zID0gdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zIHx8IHtjdWVudGE6IHt9LCBkZXVkYTogW119O1xyXG4gICAgICB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhID0gdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YSB8fCB7fTtcclxuICAgICAgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmRldWRhID0gdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmRldWRhIHx8IFtdO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBiYWNrU3RhdGUoKSB7XHJcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBxdWVyeVNlYXJjaChxdWVyeSkge1xyXG4gICAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmdldENhbGxlcyhxdWVyeSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7cmV0dXJuIHJlc3BvbnNlLmRhdGE7fSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VsZWN0ZWRJdGVtQ2hhbmdlKGl0ZW0pIHtcclxuICAgICAgaWYgKGl0ZW0pe1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jYWxsZSA9IGl0ZW0uY2FsbGU7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLm11bmljaXBpbyA9IGl0ZW0ubXVuaWNpcGlvO1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jcCA9IGl0ZW0uY3A7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLnByb3ZpbmNpYSA9IGl0ZW0ucHJvdmluY2lhO1xyXG4gICAgICAgIHNlYXJjaFNlY3RvcihpdGVtLmNhbGxlKTtcclxuICAgICAgfWVsc2V7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNhbGxlID0gbnVsbDtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ubXVuaWNpcGlvID0gbnVsbDtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY3AgPSBudWxsO1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5wcm92aW5jaWEgPSBudWxsO1xyXG4gICAgICAgIHZtLnNlY3RvciA9IG51bGw7XHJcbiAgICAgICAgdm0ubnVldmFDYWxsZSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2VhcmNoU2VjdG9yKGNhbGxlKSB7XHJcbiAgICAgIHNlY3RvcmVzU2VydmljZS5zZWN0b3Jlc1Jlc3QoKS5xdWVyeSh7Y2FsbGU6IGNhbGxlfSwgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0uc2VjdG9yID0gZGF0YVswXS5udW1lcm9TZWN0b3I7XHJcbiAgICAgICAgdm0ubnVldmFDYWxsZSA9IGZhbHNlO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhckNDKCkge1xyXG4gICAgICBpZiAodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuKVxyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MgPSAkZmlsdGVyKCdjYWxjdWxhckNDJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhckliYW4oKSB7XHJcbiAgICAgIGlmICh2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhLmNjKVxyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuaWJhbiA9ICRmaWx0ZXIoJ2NhbGN1bGFySWJhbicpKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXIoaXNWYWxpZCkge1xyXG4gICAgICBpZihpc1ZhbGlkKXtcclxuICAgICAgICB2YXIgZGF0b3NGaW5hbmNpZXJvcyA9IHtjdWVudGE6IHt9LCBkZXVkYTogW119O1xyXG5cclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY2FsbGUgPSB2bS5zZWFyY2hUZXh0O1xyXG5cclxuICAgICAgICBpZiAoSlNPTi5zdHJpbmdpZnkodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zKSA9PT0gSlNPTi5zdHJpbmdpZnkoZGF0b3NGaW5hbmNpZXJvcykpXHJcbiAgICAgICAgICBkZWxldGUgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHZhciBDb2ZyYWRlUmVzb3VyY2UgPSBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCk7XHJcbiAgICAgICAgaWYodm0ubnVldmFDYWxsZSlcclxuICAgICAgICAgIGd1YXJkYXJDYWxsZSgpO1xyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICBDb2ZyYWRlUmVzb3VyY2Uuc2F2ZSh2bS5jb2ZyYWRlLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICBcclxuICAgICAgZnVuY3Rpb24gZ3VhcmRhckNhbGxlKCkge1xyXG4gICAgICAgIHNlY3RvcmVzU2VydmljZS5zZWN0b3Jlc1Jlc3QoKS5nZXQoe3NlY3Rvcjogdm0uc2VjdG9yfSwgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2YXIgc2VjdG9yUmVzb3VyY2UgPSAgZGF0YVswXTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaWYoc2VjdG9yUmVzb3VyY2Upe1xyXG4gICAgICAgICAgICBzZWN0b3JSZXNvdXJjZS5jYWxsZXMucHVzaCh2bS5zZWFyY2hUZXh0KTtcclxuICAgICAgICAgICAgc2VjdG9yUmVzb3VyY2UuJHNhdmUoKTtcclxuICAgICAgICAgICAgQ29mcmFkZVJlc291cmNlLnNhdmUodm0uY29mcmFkZSwgZ3VhcmRhclN1Y2Nlc3MsIGd1YXJkYXJFcnJvcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAgICAgICAuY29udGVudCgnRWwgc2VjdG9yICcgK3ZtLnNlY3RvcisgJyBubyBleGlzdGUhIScpXHJcbiAgICAgICAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJTdWNjZXNzKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdHdWFyZGFkbyBjb24gw6l4aXRvISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFcnJvciBhbCBndWFyZGFyISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHNob3dBY3Rpb25Ub2FzdCgpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0V4aXN0ZW4gZXJyb3JlcyBlbiBlbCBmb3JtdWxhcmlvJylcclxuICAgICAgICAgIC5hY3Rpb24oJ09LJylcclxuICAgICAgICAgIC5oaWdobGlnaHRBY3Rpb24oZmFsc2UpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdDb2ZyYWRlRGV0YWxsZScsIENvZnJhZGVEZXRhbGxlKTtcclxuXHJcbiAgZnVuY3Rpb24gQ29mcmFkZURldGFsbGUoJHN0YXRlLCAkZmlsdGVyLCBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UsIGdldE1hcHNQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5jb2ZyYWRlID0gbnVsbDtcclxuICAgIHZtLm1hcHMgPSBudWxsO1xyXG4gICAgXHJcbiAgICB2bS5tb2RpZnlDb2ZyYWRlID0gbW9kaWZ5Q29mcmFkZTtcclxuICAgIFxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGdldENvZnJhZGVQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmNvZnJhZGUgPSBkYXRhO1xyXG4gICAgICAgIGlmKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcylcclxuICAgICAgICAgIGlmKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEpe1xyXG4gICAgICAgICAgICB2bS5pYmFuID0gJGZpbHRlcigncGFyc2VJYmFuJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuKTtcclxuICAgICAgICAgICAgdm0uY2MgPSAkZmlsdGVyKCdwYXJzZUNDJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5jYyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgdm0ubWFwcyA9IGdldE1hcHNQcmVwU2VydmljZTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5Q29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzQ2FtYmlvcycsIHtjb2ZyYWRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29mcmFkZXMnLCBDb2ZyYWRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIENvZnJhZGVzKGNvZnJhZGVzUHJlcFNlcnZpY2UsIGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0uY29mcmFkZXMgPSBudWxsO1xyXG4gICAgdm0ubmV4dFBhZ2UgPSBudWxsO1xyXG4gICAgdm0uY29mcmFkZXNCYWphcyA9IG51bGw7XHJcbiAgICB2bS5uZXh0UGFnZUJhamFzID0gbnVsbDtcclxuICAgIHZtLnNlbGVjdGVkVGFiID0gMDtcclxuICAgIGFjdGl2YXRlKCk7XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICBjb2ZyYWRlc1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0ubmV4dFBhZ2UgPSBkYXRhLm5leHQ7XHJcbiAgICAgICAgdm0uY29mcmFkZXMgPSBkYXRhLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLm5leHRQYWdlQmFqYXMgPSBkYXRhLm5leHQ7XHJcbiAgICAgICAgdm0uY29mcmFkZXNCYWphcyA9IGRhdGEucmVzdWx0cztcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3Njcm9sbHknLCBzY3JvbGx5KTtcclxuXHJcbiAgZnVuY3Rpb24gc2Nyb2xseSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgIGxpbms6IGZ1bmN0aW9uICgkcm9vdFNjb3BlLCBlbGVtZW50LCBhdHRycykge1xyXG4gICAgICAgIHZhciByYXcgPSBlbGVtZW50WzBdO1xyXG4gICAgICAgIGVsZW1lbnQuYmluZCgnc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgaWYgKHJhdy5zY3JvbGxUb3AgKyByYXcub2Zmc2V0SGVpZ2h0ID49IHJhdy5zY3JvbGxIZWlnaHQtNSkge1xyXG4gICAgICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KFwic2Nyb2xsRG93blwiKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZpbHRlcigncGFyc2VJYmFuJywgcGFyc2VJYmFuKVxyXG4gICAgLmZpbHRlcigncGFyc2VDQycsIHBhcnNlQ0MpXHJcbiAgICAuZmlsdGVyKCdjYWxjdWxhckliYW4nLCBjYWxjdWxhckliYW4pXHJcbiAgICAuZmlsdGVyKCdjYWxjdWxhckNDJywgY2FsY3VsYXJDQyk7XHJcblxyXG4gIGZ1bmN0aW9uIHBhcnNlSWJhbigpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoaWJhbikge1xyXG4gICAgICBpYmFuID0gaWJhbiB8fCAnJztcclxuICAgICAgdmFyIGZvcm1hdHRlZEliYW4gPSAnJztcclxuXHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWJhbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChpID4gMCAmJiBpICUgNCA9PT0gMCkge1xyXG4gICAgICAgICAgZm9ybWF0dGVkSWJhbiArPSAnICc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvcm1hdHRlZEliYW4gKz0gaWJhbltpXTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZm9ybWF0dGVkSWJhbjtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBwYXJzZUNDKCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjYykge1xyXG4gICAgICBjYyA9IGNjIHx8ICcnO1xyXG4gICAgICB2YXIgZm9ybWF0dGVkQ0MgPSAnJztcclxuXHJcbiAgICAgIGZvcm1hdHRlZENDID0gY2Muc3Vic3RyKDAsIDQpICsgJy0nO1xyXG4gICAgICBmb3JtYXR0ZWRDQyArPSBjYy5zdWJzdHIoNCwgNCkgKyAnLSc7XHJcbiAgICAgIGZvcm1hdHRlZENDICs9IGNjLnN1YnN0cig4LCAyKSArICctJztcclxuICAgICAgZm9ybWF0dGVkQ0MgKz0gY2Muc3Vic3RyKDEwLCAxMCk7XHJcblxyXG4gICAgICByZXR1cm4gZm9ybWF0dGVkQ0M7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY2FsY3VsYXJDQygpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoaWJhbikge1xyXG4gICAgICBpYmFuID0gaWJhbiB8fCAnJztcclxuICAgICAgcmV0dXJuIGliYW4uc3Vic3RyKDQsIDIwKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjYWxjdWxhckliYW4oKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGNjYykge1xyXG4gICAgICB2YXIgcGFpcyA9IFwiRVNcIjtcclxuICAgICAgdmFyIGNpZnJhcyA9IGNjYyArIHZhbG9yQ2lmcmFzKHBhaXMpICsgXCIwMFwiO1xyXG4gICAgICB2YXIgcmVzdG8gPSBtb2R1bG8oY2lmcmFzLCA5Nyk7XHJcbiAgICAgIHJldHVybiBwYWlzICsgY2Vyb3NJenF1aWVyZGEoOTgtcmVzdG8sIDIpICsgY2NjO1xyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiB2YWxvckNpZnJhcyhjaWZyYXMpIHtcclxuICAgICAgdmFyIExFVFJBUyA9IFwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCI7XHJcbiAgICAgIHZhciBpdGVtcyA9IFtdO1xyXG4gICAgICBmb3IgKHZhciBpPTA7IGk8Y2lmcmFzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHBvc2ljaW9uID0gTEVUUkFTLmluZGV4T2YoY2lmcmFzW2ldKTtcclxuICAgICAgICBpdGVtcy5wdXNoKHBvc2ljaW9uIDwgMD8gXCItXCI6IHBvc2ljaW9uKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gaXRlbXMuam9pbihcIlwiKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2R1bG8oY2lmcmFzLCBkaXZpc29yKSB7XHJcbiAgICAgIHZhciBDVUVOVEEgPSAxMDtcclxuICAgICAgdmFyIGxhcmdvID0gY2lmcmFzLmxlbmd0aDtcclxuICAgICAgdmFyIHJlc3RvID0gMDtcclxuICAgICAgZm9yICh2YXIgaT0wOyBpPGxhcmdvOyBpKz1DVUVOVEEpIHtcclxuICAgICAgICB2YXIgZGl2aWRlbmRvID0gcmVzdG8gKyBcIlwiICsgY2lmcmFzLnN1YnN0cihpLCBDVUVOVEEpO1xyXG4gICAgICAgIHJlc3RvID0gZGl2aWRlbmRvICUgZGl2aXNvcjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzdG87XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2Vyb3NJenF1aWVyZGEoY2lmcmFzLCBsYXJnbykge1xyXG4gICAgICBjaWZyYXMgKz0gJyc7XHJcbiAgICAgIHdoaWxlKGNpZnJhcy5sZW5ndGggPCBsYXJnbykgeyBjaWZyYXMgPSAnMCcrY2lmcmFzOyB9XHJcbiAgICAgIHJldHVybiBjaWZyYXM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZpbHRlcignc3RyaW5nVG9EYXRlRm9ybWF0Jywgc3RyaW5nVG9EYXRlRm9ybWF0KVxyXG4gICAgLmZpbHRlcignZm9ybWF0RGF0ZXMnLCBmb3JtYXREYXRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIHN0cmluZ1RvRGF0ZUZvcm1hdCgpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZiAoZGF0YS5kYXRvc1BlcnNvbmFsZXMpe1xyXG4gICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhTmFjaW1pZW50byAgPSBuZXcgRGF0ZShkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYU5hY2ltaWVudG8pLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xyXG4gICAgICAgIGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhSW5zY3JpcGNpb24gPSBuZXcgRGF0ZShkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYUluc2NyaXBjaW9uKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgICAgfVxyXG4gICAgICBpZihkYXRhLmZlY2hhKVxyXG4gICAgICAgIGRhdGEuZmVjaGEgID0gbmV3IERhdGUoZGF0YS5mZWNoYSkudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XHJcblxyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBmb3JtYXREYXRlcygpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICB2YXIgZGF0ZSA9IG51bGw7XHJcbiAgICAgIGlmIChkYXRhLmRhdG9zUGVyc29uYWxlcyl7XHJcbiAgICAgICAgZGF0ZSA9IGRhdGEuZGF0b3NQZXJzb25hbGVzLmZlY2hhTmFjaW1pZW50by5zcGxpdChcIi9cIik7XHJcbiAgICAgICAgZGF0YS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFOYWNpbWllbnRvICA9IGRhdGVbMl0gKyAnLScgKyBkYXRlWzFdICsgJy0nICsgZGF0ZVswXTtcclxuICAgICAgICBkYXRlID0gZGF0YS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFJbnNjcmlwY2lvbi5zcGxpdChcIi9cIik7XHJcbiAgICAgICAgZGF0YS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFJbnNjcmlwY2lvbiA9IGRhdGVbMl0gKyAnLScgKyBkYXRlWzFdICsgJy0nICsgZGF0ZVswXTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoZGF0YS5mZWNoYSl7XHJcbiAgICAgICAgZGF0ZSA9IGRhdGEuZmVjaGEuc3BsaXQoXCIvXCIpO1xyXG4gICAgICAgIGRhdGEuZmVjaGEgID0gZGF0ZVsyXSArICctJyArIGRhdGVbMV0gKyAnLScgKyBkYXRlWzBdO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5maWx0ZXIoJ3JlbW92ZU51bGxzJywgcmVtb3ZlTnVsbHMpO1xyXG5cclxuICBmdW5jdGlvbiByZW1vdmVOdWxscygpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKG9iail7XHJcbiAgICAgIHZhciBpc0FycmF5ID0gb2JqIGluc3RhbmNlb2YgQXJyYXk7XHJcbiAgICAgIGZvciAodmFyIGsgaW4gb2JqKXtcclxuICAgICAgICBpZiAob2JqW2tdPT09bnVsbCkgaXNBcnJheSA/IG9iai5zcGxpY2UoaywxKSA6IGRlbGV0ZSBvYmpba107XHJcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIG9ialtrXT09XCJvYmplY3RcIikgcmVtb3ZlTnVsbHMob2JqW2tdKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gb2JqO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZhY3RvcnkoJ2NvZnJhZGVzU2VydmljZScsIGNvZnJhZGVzU2VydmljZSk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvZnJhZGVzU2VydmljZSgkcmVzb3VyY2UsICRodHRwLCAkZmlsdGVyKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjb2ZyYWRlc1Jlc3Q6IGNvZnJhZGVzUmVzdCxcclxuICAgICAgY29mcmFkZXNCYWphc1Jlc3Q6IGNvZnJhZGVzQmFqYXNSZXN0LFxyXG4gICAgICBnZXRDYWxsZXM6IGdldENhbGxlcyxcclxuICAgICAgZ2V0UmVnaXN0cm9zOiBnZXRSZWdpc3Ryb3NcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gY29mcmFkZXNSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL2NvZnJhZGVzLzppZC5qc29uOmpzb24nLCBudWxsLCB7XHJcbiAgICAgICAgJ3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6IGZhbHNlfSxcclxuICAgICAgICAnZ2V0JzogICAge21ldGhvZDonR0VUJywgdHJhbnNmb3JtUmVzcG9uc2U6IGZ1bmN0aW9uKGRhdGEsIGhlYWRlcnNHZXR0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRmaWx0ZXIoJ3N0cmluZ1RvRGF0ZUZvcm1hdCcpKGFuZ3VsYXIuZnJvbUpzb24oZGF0YSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICdzYXZlJzogICB7bWV0aG9kOidQT1NUJywgdHJhbnNmb3JtUmVxdWVzdDogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci50b0pzb24oJGZpbHRlcignZm9ybWF0RGF0ZXMnKSgkZmlsdGVyKCdyZW1vdmVOdWxscycpKGRhdGEpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNvZnJhZGVzQmFqYXNSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL2NvZnJhZGVzQmFqYXMvOmlkLmpzb246anNvbicsIG51bGwsIHsncXVlcnknOiAge21ldGhvZDonR0VUJywgaXNBcnJheTpmYWxzZX19KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRDYWxsZXMoY2FsbGUpIHtcclxuICAgICAgcmV0dXJuICRodHRwLmdldCgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9jYWxsZXMvJywge3BhcmFtczoge2NhbGxlOiBjYWxsZX19KS5cclxuICAgICAgICAgICAgICB0aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLmZyb21Kc29uKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRSZWdpc3Ryb3MoKSB7XHJcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvcmVnaXN0cm9zLycpLlxyXG4gICAgICAgICAgICAgIHRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFuZ3VsYXIuZnJvbUpzb24ocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZhY3RvcnkoJ2Nvc3RhbGVyb3NTZXJ2aWNlJywgY29zdGFsZXJvc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBjb3N0YWxlcm9zU2VydmljZSgkcmVzb3VyY2UsICRmaWx0ZXIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNvc3RhbGVyb3NSZXN0OiBjb3N0YWxlcm9zUmVzdFxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBjb3N0YWxlcm9zUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9jb3N0YWxlcm9zLzppZC5qc29uOmpzb24nLCBudWxsLCB7XHJcbiAgICAgICAgJ3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6IHRydWV9LFxyXG4gICAgICAgICdnZXQnOiAgICB7bWV0aG9kOidHRVQnLCB0cmFuc2Zvcm1SZXNwb25zZTogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGZpbHRlcignc3RyaW5nVG9EYXRlRm9ybWF0JykoYW5ndWxhci5mcm9tSnNvbihkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgJ3NhdmUnOiAgIHttZXRob2Q6J1BPU1QnLCB0cmFuc2Zvcm1SZXF1ZXN0OiBmdW5jdGlvbihkYXRhLCBoZWFkZXJzR2V0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLnRvSnNvbigkZmlsdGVyKCdmb3JtYXREYXRlcycpKCRmaWx0ZXIoJ3JlbW92ZU51bGxzJykoZGF0YSkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdtYXBhc1NlcnZpY2UnLCBtYXBhc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBtYXBhc1NlcnZpY2UoJGh0dHApIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGdlb0NvZGluZ0FQSTogZ2VvQ29kaW5nQVBJXHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIGdlb0NvZGluZ0FQSShhZGRyZXNzKSB7XHJcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2h0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9nZW9jb2RlL2pzb24nLCB7cGFyYW1zOiB7YWRkcmVzczogYWRkcmVzcywga2V5OiBcIkFJemFTeURDX09JRFNsNmN1cmpDTUNMeXpuMnloTW1nLWVyNWtuSVwifX0pLlxyXG4gICAgICB0aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfSAgICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnc2VjdG9yZXNTZXJ2aWNlJywgc2VjdG9yZXNTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gc2VjdG9yZXNTZXJ2aWNlKCRyZXNvdXJjZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc2VjdG9yZXNSZXN0OiBzZWN0b3Jlc1Jlc3RcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gc2VjdG9yZXNSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL3NlY3RvcmVzLzppZC5qc29uOmpzb24nLCBudWxsLCB7XHJcbiAgICAgICAgJ2dldCc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OiB0cnVlfSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0Nvc3RhbGVyb0FkZE1vZGlmeScsIENvc3RhbGVyb0FkZE1vZGlmeSk7XHJcblxyXG4gIGZ1bmN0aW9uIENvc3RhbGVyb0FkZE1vZGlmeSgkc2NvcGUsICRmaWx0ZXIsICRkb2N1bWVudCwgJG1kVG9hc3QsICRzdGF0ZSwgZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2UsIGNvc3RhbGVyb3NTZXJ2aWNlLCBjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLmJhY2tTdGF0ZSAgICAgICAgICA9IGJhY2tTdGF0ZTtcclxuICAgIHZtLnF1ZXJ5U2VhcmNoICAgICAgICA9IHF1ZXJ5U2VhcmNoO1xyXG4gICAgdm0uc2VsZWN0ZWRJdGVtQ2hhbmdlID0gc2VsZWN0ZWRJdGVtQ2hhbmdlO1xyXG4gICAgdm0uZ3VhcmRhciAgICAgICAgICAgID0gZ3VhcmRhcjtcclxuXHJcbiAgICBhY3RpdmF0ZSgpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICBpZiAoZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2Upe1xyXG4gICAgICAgIGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oaW5pdENvc3RhbGVybyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdENvc3RhbGVybyhkYXRhKSB7XHJcbiAgICAgIHZtLmNvc3RhbGVybyA9IGRhdGE7XHJcbiAgICAgIHZtLmNvZnJhZGVTZWxlY3RlZCA9IHZtLmNvc3RhbGVyby5jb2ZyYWRlO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBiYWNrU3RhdGUoKSB7XHJcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBxdWVyeVNlYXJjaChxdWVyeSkge1xyXG4gICAgICB2YXIgZmlsdHJvID0ge307XHJcbiAgICAgIGlmIChpc05hTihxdWVyeSkpXHJcbiAgICAgICAgZmlsdHJvLm5vbWJyZSA9IHF1ZXJ5O1xyXG4gICAgICBlbHNlIGlmKCFpc05hTihxdWVyeSkpXHJcbiAgICAgICAgZmlsdHJvLm51bWVyb09yZGVuID0gcXVlcnk7XHJcblxyXG4gICAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLnF1ZXJ5KGZpbHRybykuJHByb21pc2UudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UucmVzdWx0cztcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VsZWN0ZWRJdGVtQ2hhbmdlKGl0ZW0pIHtcclxuICAgICAgdm0uY29zdGFsZXJvLmNvZnJhZGUgPSAgaXRlbSA/IGl0ZW0uaWQgOiBudWxsO1xyXG4gICAgfSAgICBcclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyKGlzVmFsaWQpIHtcclxuICAgICAgaWYoaXNWYWxpZCl7XHJcbiAgICAgICAgdm0uY29zdGFsZXJvLmZlY2hhID0gKHZtLmNvc3RhbGVyby5mZWNoYSA9PT0gXCJcIikgPyBudWxsIDogdm0uY29zdGFsZXJvLmZlY2hhO1xyXG4gICAgICAgIGlmICghdm0uY29zdGFsZXJvLmNvZnJhZGUpe1xyXG4gICAgICAgICAgJHNjb3BlLmNvc3RhbGVyb0Zvcm0uY29mcmFkZS4kZXJyb3IucmVxdWlyZWQgPSB0cnVlO1xyXG4gICAgICAgICAgc2hvd0FjdGlvblRvYXN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICBjb3N0YWxlcm9zU2VydmljZS5jb3N0YWxlcm9zUmVzdCgpLnNhdmUodm0uY29zdGFsZXJvLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgfVxyXG4gICAgICBcclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJTdWNjZXNzKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdHdWFyZGFkbyBjb24gw6l4aXRvISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3MnKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyRXJyb3IocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0Vycm9yIGFsIGd1YXJkYXIhIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2hvd0FjdGlvblRvYXN0KCkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXhpc3RlbiBlcnJvcmVzIGVuIGVsIGZvcm11bGFyaW8nKVxyXG4gICAgICAgICAgLmFjdGlvbignT0snKVxyXG4gICAgICAgICAgLmhpZ2hsaWdodEFjdGlvbihmYWxzZSlcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0Nvc3RhbGVyb0RldGFsbGUnLCBDb3N0YWxlcm9EZXRhbGxlKTtcclxuXHJcbiAgZnVuY3Rpb24gQ29zdGFsZXJvRGV0YWxsZSgkc3RhdGUsICRmaWx0ZXIsIGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlLCBnZXRNYXBzUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0uY29zdGFsZXJvID0gbnVsbDtcclxuICAgIHZtLm1hcHMgPSBudWxsO1xyXG4gICAgXHJcbiAgICB2bS5tb2RpZnlDb3N0YWxlcm8gPSBtb2RpZnlDb3N0YWxlcm87XHJcbiAgICBcclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIHJldHVybiBnZXRDb3N0YWxlcm9QcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmNvc3RhbGVybyA9IGRhdGE7XHJcbiAgICAgICAgaWYodm0uY29zdGFsZXJvLmRhdG9zRmluYW5jaWVyb3MpXHJcbiAgICAgICAgICBpZih2bS5jb3N0YWxlcm8uZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEpe1xyXG4gICAgICAgICAgICB2bS5pYmFuID0gJGZpbHRlcigncGFyc2VJYmFuJykodm0uY29zdGFsZXJvLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhLmliYW4pO1xyXG4gICAgICAgICAgICB2bS5jYyA9ICRmaWx0ZXIoJ3BhcnNlQ0MnKSh2bS5jb3N0YWxlcm8uZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIHZtLm1hcHMgPSBnZXRNYXBzUHJlcFNlcnZpY2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG1vZGlmeUNvc3RhbGVybyhpZCwgZXZlbnQpe1xyXG4gICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3NDYW1iaW9zJywge2Nvc3RhbGVyb0lkOiBpZH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0Nvc3RhbGVyb3MnLCBDb3N0YWxlcm9zKTtcclxuXHJcbiAgZnVuY3Rpb24gQ29zdGFsZXJvcyhjb3N0YWxlcm9zUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLmNvc3RhbGVyb3MgPSBudWxsO1xyXG4gICAgYWN0aXZhdGUoKTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIHJldHVybiBjb3N0YWxlcm9zUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5jb3N0YWxlcm9zID0gZGF0YTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdMaXN0YUNvZnJhZGVzJywgTGlzdGFDb2ZyYWRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIExpc3RhQ29mcmFkZXMoJHJvb3RTY29wZSwgJHNjb3BlLCAkc3RhdGUsIGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0uZmlsdHJvICAgID0gJ25vbWJyZSc7XHJcbiAgICB2bS50eXBlSW5wdXQgPSAndGV4dCc7XHJcbiAgICB2bS5idXNjYXIgICAgPSBudWxsO1xyXG5cclxuICAgIHZtLnNlYXJjaCAgICAgICAgID0gc2VhcmNoO1xyXG4gICAgdm0ucmFkaW9DaGFuZ2UgICAgPSByYWRpb0NoYW5nZTtcclxuICAgIHZtLmdvVG9Db2ZyYWRlICAgID0gZ29Ub0NvZnJhZGU7XHJcbiAgICB2bS5tb2RpZnlDb2ZyYWRlICA9IG1vZGlmeUNvZnJhZGU7XHJcblxyXG4gICAgdmFyIGhhbmRsZXIgPSAkcm9vdFNjb3BlLiRvbignc2Nyb2xsRG93bicsIGdldE5leHRQYWdlKTtcclxuXHJcbiAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCkge1xyXG4gICAgICBoYW5kbGVyKCk7XHJcbiAgICAgIGhhbmRsZXIgPSBudWxsO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0TmV4dFBhZ2UoKSB7XHJcbiAgICAgIGlmICghdm0uYmFqYXMpXHJcbiAgICAgICAgZ2V0TmV4dFBhZ2VBbHRhcygpO1xyXG4gICAgICBlbHNlXHJcbiAgICAgICAgZ2V0TmV4dFBhZ2VCYWphcygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldE5leHRQYWdlQWx0YXMoKSB7XHJcbiAgICAgIGlmICh2bS5uZXh0UGFnZSl7XHJcbiAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSB7cGFnZTogdm0ubmV4dFBhZ2V9O1xyXG5cclxuICAgICAgICBpZiAodm0uYnVzY2FyKVxyXG4gICAgICAgICAgcGFyYW1ldGVyc1t2bS5maWx0cm9dID0gdm0uYnVzY2FyO1xyXG5cclxuICAgICAgICBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkocGFyYW1ldGVycywgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2bS5uZXh0UGFnZSA9IGRhdGEubmV4dDtcclxuICAgICAgICAgIHZtLmNvZnJhZGVzID0gdm0uY29mcmFkZXMuY29uY2F0KGRhdGEucmVzdWx0cyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXROZXh0UGFnZUJhamFzKCkge1xyXG4gICAgICBpZiAodm0ubmV4dFBhZ2VCYWphcyl7XHJcbiAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSB7cGFnZTogdm0ubmV4dFBhZ2VCYWphc307XHJcblxyXG4gICAgICAgIGlmICh2bS5idXNjYXIpXHJcbiAgICAgICAgICBwYXJhbWV0ZXJzW3ZtLmZpbHRyb10gPSB2bS5idXNjYXI7XHJcblxyXG4gICAgICAgIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc0JhamFzUmVzdCgpLnF1ZXJ5KHBhcmFtZXRlcnMsIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgdm0ubmV4dFBhZ2VCYWphcyA9IGRhdGEubmV4dDtcclxuICAgICAgICAgIHZtLmNvZnJhZGVzQmFqYXMgPSB2bS5jb2ZyYWRlc0JhamFzLmNvbmNhdChkYXRhLnJlc3VsdHMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VhcmNoKCkge1xyXG4gICAgICBpZiAoIXZtLmJhamFzKVxyXG4gICAgICAgIHNlYXJjaEFsdGFzKCk7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBzZWFyY2hCYWphcygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNlYXJjaEFsdGFzKCkge1xyXG4gICAgICB2YXIgZmlsdHJvID0ge307XHJcbiAgICAgIGZpbHRyb1t2bS5maWx0cm9dID0gdm0uYnVzY2FyO1xyXG4gICAgICBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkoZmlsdHJvLCBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5uZXh0UGFnZSA9IGRhdGEubmV4dDtcclxuICAgICAgICB2bS5jb2ZyYWRlcyA9IGRhdGEucmVzdWx0cztcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VhcmNoQmFqYXMoKSB7XHJcbiAgICAgIHZhciBmaWx0cm8gPSB7fTtcclxuICAgICAgZmlsdHJvW3ZtLmZpbHRyb10gPSB2bS5idXNjYXI7XHJcbiAgICAgIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc0JhamFzUmVzdCgpLnF1ZXJ5KGZpbHRybywgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0ubmV4dFBhZ2VCYWphcyA9IGRhdGEubmV4dDtcclxuICAgICAgICB2bS5jb2ZyYWRlc0JhamFzID0gZGF0YS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByYWRpb0NoYW5nZSgpIHtcclxuICAgICAgdm0uYnVzY2FyID0gbnVsbDtcclxuICAgICAgdm0udHlwZUlucHV0ID0gKHZtLmZpbHRybyA9PT0gJ25vbWJyZScpID8gJ3RleHQnOiAnbnVtYmVyJztcclxuICAgICAgdm0uc2VhcmNoKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ29Ub0NvZnJhZGUoaWQsIGV2ZW50KXtcclxuICAgICAgJHN0YXRlLmdvKCdjb2ZyYWRlc0RldGFsbGUnLCB7Y29mcmFkZUlkOiBpZH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG1vZGlmeUNvZnJhZGUoaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICRzdGF0ZS5nbygnY29mcmFkZXNDYW1iaW9zJywge2NvZnJhZGVJZDogaWR9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnbGlzdGFDb2ZyYWRlcycsIGxpc3RhQ29mcmFkZXMpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGFDb2ZyYWRlcygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9saXN0L2NvZnJhZGVzLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb2ZyYWRlczogJz1jb2ZyYWRlcycsXHJcbiAgICAgICAgbmV4dFBhZ2U6ICc9cGFnZScsXHJcbiAgICAgICAgY29mcmFkZXNCYWphczogJz1jb2ZyYWRlc0JhamFzJyxcclxuICAgICAgICBuZXh0UGFnZUJhamFzOiAnPXBhZ2VCYWphcydcclxuICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgY29udHJvbGxlcjogJ0xpc3RhQ29mcmFkZXMnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1JlbW92ZUNvZnJhZGUnLCBSZW1vdmVDb2ZyYWRlKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVtb3ZlQ29mcmFkZSgkc3RhdGUsICRtZERpYWxvZykge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5yZW1vdmVDb2ZyYWRlID0gcmVtb3ZlQ29mcmFkZTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlQ29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgJG1kRGlhbG9nLnNob3coe1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9yZW1vdmUvZGlhbG9nVG1wbC9yZW1vdmVDb2ZyYWRlLnRtcGwuaHRtbCcsXHJcbiAgICAgICAgbG9jYWxzOiB7aWQ6IGlkfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnUmVtb3ZlQ29mcmFkZVRtcGwnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxyXG4gICAgICAgIHRhcmdldEV2ZW50OiBldmVudCxcclxuICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOnRydWVcclxuICAgICAgfSkudGhlbihmdW5jdGlvbigpIHtcclxuICAgICAgICAvL3JlbW92ZUVuZENvZnJhZGUoaWQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdyZW1vdmVDb2ZyYWRlJywgcmVtb3ZlQ29mcmFkZSk7XHJcblxyXG5cclxuICBmdW5jdGlvbiByZW1vdmVDb2ZyYWRlKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9yZW1vdmVDb2ZyYWRlLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb2ZyYWRlSWQ6ICc9Y29mcmFkZScgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnUmVtb3ZlQ29mcmFkZScsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignTGlzdGFDb3N0YWxlcm9zJywgTGlzdGFDb3N0YWxlcm9zKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFDb3N0YWxlcm9zKCRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubW9kaWZ5Q29zdGFsZXJvID0gbW9kaWZ5Q29zdGFsZXJvO1xyXG5cclxuICAgIGZ1bmN0aW9uIG1vZGlmeUNvc3RhbGVybyhpZCwgZXZlbnQpe1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgJHN0YXRlLmdvKCdjb3N0YWxlcm9zQ2FtYmlvcycsIHtjb3N0YWxlcm9JZDogaWR9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnbGlzdGFDb3N0YWxlcm9zJywgbGlzdGFDb3N0YWxlcm9zKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RhQ29zdGFsZXJvcygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9jb3N0YWxlcm9zL2xpc3QvY29zdGFsZXJvcy5kaXJlY3RpdmUuaHRtbCcsXHJcbiAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgY29zdGFsZXJvczogJz1jb3N0YWxlcm9zJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCkge1xyXG4gICAgICAgIHNjb3BlLiR3YXRjaCgndm0uY29zdGFsZXJvcycsIGZ1bmN0aW9uKG5ld1ZhbCkge1xyXG4gICAgICAgICAgICBpZihuZXdWYWwpIHsgXHJcbiAgICAgICAgICAgICAgc2NvcGUudm0uY29zdGFsZXJvc1Nob3J0ID0gc2NvcGUudm0uY29zdGFsZXJvcy5tYXAoZnVuY3Rpb24oY29zdGFsZXJvKXtcclxuICAgICAgICAgICAgICAgIHZhciBhdXggPSB7c2l0aW86IGNvc3RhbGVyby5zaXRpb307XHJcbiAgICAgICAgICAgICAgICBpZiAoY29zdGFsZXJvLmNvZnJhZGUpe1xyXG4gICAgICAgICAgICAgICAgICBhdXguaWQgPSBjb3N0YWxlcm8uaWQ7XHJcbiAgICAgICAgICAgICAgICAgIGF1eC5udW1lcm9PcmRlbiA9IGNvc3RhbGVyby5jb2ZyYWRlLm51bWVyb09yZGVuO1xyXG4gICAgICAgICAgICAgICAgICBhdXgubm9tYnJlID0gY29zdGFsZXJvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLm5vbWJyZSAgICArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3N0YWxlcm8uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuYXBlbGxpZG8xICsgJyAnICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3N0YWxlcm8uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuYXBlbGxpZG8yO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGF1eDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCB0cnVlKTtcclxuICAgICAgfSxcclxuICAgICAgY29udHJvbGxlcjogJ0xpc3RhQ29zdGFsZXJvcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVzdG9yZUNvZnJhZGUnLCBSZXN0b3JlQ29mcmFkZSk7XHJcblxyXG4gIGZ1bmN0aW9uIFJlc3RvcmVDb2ZyYWRlKCRzdGF0ZSwgJG1kRGlhbG9nLCBjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ucmVzdG9yZUNvZnJhZGUgPSByZXN0b3JlQ29mcmFkZTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gcmVzdG9yZUNvZnJhZGUoaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHZhciByZXN0YXVyYXJEaWFsb2cgPSAkbWREaWFsb2cuY29uZmlybSgpXHJcbiAgICAgICAgICAudGl0bGUoJ1Jlc3RhdXJhciBjb2ZyYWRlJylcclxuICAgICAgICAgIC5jb250ZW50KCfCv0VzdMOhIHNlZ3VybyBxdWUgZGVzZWEgcmVzdGF1cmFyIGVzdGUgY29mcmFkZT88YnI+U3UgbsO6bWVybyBkZSBDb2ZyYWRlIHNlIGNhbGN1bGFyw6EgZGUgbnVldm8uJylcclxuICAgICAgICAgIC5hcmlhTGFiZWwoJ1Jlc3RhdXJhciBjb2ZyYWRlJylcclxuICAgICAgICAgIC50YXJnZXRFdmVudChldmVudClcclxuICAgICAgICAgIC5vaygnQWNlcHRhcicpXHJcbiAgICAgICAgICAuY2FuY2VsKCdDYW5jZWxhcicpXHJcbiAgICAgICAgICAuY2xpY2tPdXRzaWRlVG9DbG9zZSh0cnVlKTtcclxuICAgICAgJG1kRGlhbG9nLnNob3cocmVzdGF1cmFyRGlhbG9nKS50aGVuKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJlc3RvcmVFbmRDb2ZyYWRlKGlkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVzdG9yZUVuZENvZnJhZGUoaWQpe1xyXG4gICAgICB2YXIgY29mcmFkZSA9IGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5nZXQoe2lkOiBpZH0sIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgY29mcmFkZS5iYWphID0gbnVsbDtcclxuICAgICAgICBjb2ZyYWRlLiRzYXZlKHt1cGRhdGVOdW1lcm9Db2ZyYWRlOiB0cnVlfSkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgaWYoJHN0YXRlLmN1cnJlbnQubmFtZSA9PT0gJ2NvZnJhZGVzJyl7XHJcbiAgICAgICAgICAgICRzdGF0ZS50cmFuc2l0aW9uVG8oJHN0YXRlLmN1cnJlbnQsIG51bGwsIHtcclxuICAgICAgICAgICAgICByZWxvYWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgaW5oZXJpdDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgbm90aWZ5OiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgJHN0YXRlLmdvKCdjb2ZyYWRlcycpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgncmVzdG9yZUNvZnJhZGUnLCByZXN0b3JlQ29mcmFkZSk7XHJcblxyXG5cclxuICBmdW5jdGlvbiByZXN0b3JlQ29mcmFkZSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9yZXN0b3JlL3Jlc3RvcmVDb2ZyYWRlLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb2ZyYWRlSWQ6ICc9Y29mcmFkZScgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnUmVzdG9yZUNvZnJhZGUnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1JlbW92ZUNvZnJhZGVUbXBsJywgUmVtb3ZlQ29mcmFkZVRtcGwpO1xyXG5cclxuICBmdW5jdGlvbiBSZW1vdmVDb2ZyYWRlVG1wbCgkc3RhdGUsICRtZERpYWxvZywgY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLmNsb3NlRGlhbG9nID0gY2xvc2VEaWFsb2c7XHJcbiAgICB2bS5yZW1vdmVFbmRDb2ZyYWRlID0gcmVtb3ZlRW5kQ29mcmFkZTtcclxuXHJcbiAgICBmdW5jdGlvbiBjbG9zZURpYWxvZygpIHtcclxuICAgICAgJG1kRGlhbG9nLmNhbmNlbCgpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRW5kQ29mcmFkZShpZCl7XHJcbiAgICAgIHZhciBjb2ZyYWRlID0gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLmdldCh7aWQ6IGlkfSwgZnVuY3Rpb24oKXtcclxuICAgICAgICBjb2ZyYWRlLmJhamEgPSB7bW90aXZvIDogdm0ubW90aXZvQmFqYSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmVjaGFCYWphOiBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpfTtcclxuICAgICAgICBjb2ZyYWRlLm51bWVyb0NvZnJhZGUgPSBudWxsO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvZnJhZGUuJHNhdmUoe3VwZGF0ZU51bWVyb0NvZnJhZGU6IHRydWV9KS50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICB2bS5jbG9zZURpYWxvZygpO1xyXG4gICAgICAgICAgaWYoJHN0YXRlLmN1cnJlbnQubmFtZSA9PT0gJ2NvZnJhZGVzJyl7XHJcbiAgICAgICAgICAgICRzdGF0ZS50cmFuc2l0aW9uVG8oJHN0YXRlLmN1cnJlbnQsIG51bGwsIHtcclxuICAgICAgICAgICAgICByZWxvYWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgaW5oZXJpdDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgbm90aWZ5OiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgJHN0YXRlLmdvKCdjb2ZyYWRlcycpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
