!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.interceptors.push("myHttpInterceptor")}function t(e){var t=angular.element(document.querySelector(".m-app-loading"));return{request:function(e){return"POST"===e.method&&t.css("display","block"),e},requestError:function(t){return e.reject(t)},response:function(e){return t.css("display","none"),e},responseError:function(o){return t.css("display","none"),e.reject(o)}}}angular.module("app").factory("myHttpInterceptor",t).config(e),e.$inject=["$httpProvider"],t.$inject=["$q"]}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,t){t.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("aspirantes",{url:"/aspirantes",templateProvider:["$templateCache",function(e){return e.get("aspirantes/list/aspirantes.html")}],controller:"Aspirantes",controllerAs:"vm",resolve:{aspirantesPrepService:t}}).state("aspirantesDetalle",{url:"/aspirantes/:aspiranteId",templateProvider:["$templateCache",function(e){return e.get("aspirantes/detail/aspiranteDetalle.html")}],controller:"AspiranteDetalle",controllerAs:"vm",resolve:{getAspirantePrepService:o}}).state("aspirantesCambios",{url:"/aspirantes/cambios/:aspiranteId",templateProvider:["$templateCache",function(e){return e.get("aspirantes/addModify/aspiranteAddModify.html")}],controller:"AspiranteAddModify",controllerAs:"vm",resolve:{getAspirantePrepService:o}})}function t(e){return e.aspirantesRest().query()}function o(e,t){return t.aspiranteId?e.aspirantesRest().get({id:t.aspiranteId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["aspirantesService"],o.$inject=["aspirantesService","$stateParams"]}(),function(){"use strict";function e(e){e.state("autoridades",{url:"/autoridades",templateProvider:["$templateCache",function(e){return e.get("autoridades/list/autoridades.html")}],controller:"Autoridades",controllerAs:"vm",resolve:{autoridadesPrepService:t}}).state("autoridadesDetalle",{url:"/autoridades/:autoridadId",templateProvider:["$templateCache",function(e){return e.get("autoridades/detail/autoridadDetalle.html")}],controller:"AutoridadDetalle",controllerAs:"vm",resolve:{getAutoridadPrepService:o,getMapsPrepService:r}}).state("autoridadesCambios",{url:"/autoridades/cambios/:autoridadId",templateProvider:["$templateCache",function(e){return e.get("autoridades/addModify/autoridadAddModify.html")}],controller:"AutoridadAddModify",controllerAs:"vm",resolve:{getAutoridadPrepService:o}})}function t(e){return e.autoridadesRest().query()}function o(e,t){return t.autoridadId?e.autoridadesRest().get({id:t.autoridadId}):!1}function r(e,t,o){return t.$promise.then(function(t){var r=t.direccion.calle+" "+t.direccion.numero+" "+t.direccion.municipio+" "+t.direccion.provincia+" "+t.direccion.cp;return o.geoCodingAPI(r).then(function(t){if(t.data.results.length){var o=t.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["autoridadesService"],o.$inject=["autoridadesService","$stateParams"],r.$inject=["uiGmapGoogleMapApi","getAutoridadPrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:t,cofradesBajasPrepService:o}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:r,getMapsPrepService:n}}).state("cofradesCambios",{url:"/cofrades/cambios/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/addModify/cofradeAddModify.html")}],controller:"CofradeAddModify",controllerAs:"vm",resolve:{getCofradePrepService:r}})}function t(e){return e.cofradesRest().query()}function o(e){return e.cofradesBajasRest().query()}function r(e,t){return t.cofradeId?e.cofradesRest().get({id:t.cofradeId}):!1}function n(e,t,o){return t.$promise.then(function(t){var r=t.datosPersonales.direccion.calle+" "+t.datosPersonales.direccion.numero+" "+t.datosPersonales.direccion.municipio+" "+t.datosPersonales.direccion.provincia+" "+t.datosPersonales.direccion.cp;return o.geoCodingAPI(r).then(function(t){if(t.data.results.length){var o=t.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["cofradesService"],o.$inject=["cofradesService"],r.$inject=["cofradesService","$stateParams"],n.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("costaleros",{url:"/costaleros",templateProvider:["$templateCache",function(e){return e.get("costaleros/list/costaleros.html")}],controller:"Costaleros",controllerAs:"vm",resolve:{costalerosPrepService:t}}).state("costalerosDetalle",{url:"/costaleros/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/detail/costaleroDetalle.html")}],controller:"CostaleroDetalle",controllerAs:"vm",resolve:{getCostaleroPrepService:o}}).state("costalerosCambios",{url:"/costaleros/cambios/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/addModify/costaleroAddModify.html")}],controller:"CostaleroAddModify",controllerAs:"vm",resolve:{getCostaleroPrepService:o}})}function t(e){return e.costalerosRest().query()}function o(e,t){return t.costaleroId?e.costalerosRest().get({id:t.costaleroId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["costalerosService"],o.$inject=["costalerosService","$stateParams"]}(),function(){"use strict";function e(e){e.state("directivos",{url:"/directivos",templateProvider:["$templateCache",function(e){return e.get("directivos/list/directivos.html")}],controller:"Directivos",controllerAs:"vm",resolve:{directivosPrepService:t}}).state("directivosDetalle",{url:"/directivos/:directivoId",templateProvider:["$templateCache",function(e){return e.get("directivos/detail/directivoDetalle.html")}],controller:"DirectivoDetalle",controllerAs:"vm",resolve:{getDirectivoPrepService:o}}).state("directivosCambios",{url:"/directivos/cambios/:directivoId",templateProvider:["$templateCache",function(e){return e.get("directivos/addModify/directivoAddModify.html")}],controller:"DirectivoAddModify",controllerAs:"vm",resolve:{getDirectivoPrepService:o}})}function t(e){return e.directivosRest().query()}function o(e,t){return t.directivoId?e.directivosRest().get({id:t.directivoId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["directivosService"],o.$inject=["directivosService","$stateParams"]}(),function(){"use strict";function e(e){e.state("gastosBancarios",{url:"/gastosBancarios",templateProvider:["$templateCache",function(e){return e.get("gastosBancarios/modify/gastoBancarioModify.html")}],controller:"GastosBancarios",controllerAs:"vm",resolve:{gastosBancariosPrepService:t}})}function t(e){return e.gastosBancariosRest().query()}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["gastosBancariosService"]}(),function(){"use strict";function e(e,t){function o(t){e(t).toggle()}function r(e,r){o(r),t.go(e)}var n=this;n.toggleSidenav=o,n.navigateTo=r}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e){e.state("numerosLoteria",{url:"/numerosLoteria",templateProvider:["$templateCache",function(e){return e.get("numerosLoteria/modify/numerosLoteriaModify.html")}],controller:"NumerosLoteria",controllerAs:"vm",resolve:{numerosLoteriaPrepService:t}})}function t(e){return e.numerosLoteriaRest().query()}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["numerosLoteriaService"]}(),function(){"use strict";function e(e){e.state("papeletasSitios",{url:"/papeletasSitios",templateProvider:["$templateCache",function(e){return e.get("papeletasSitios/list/papeletasSitios.html")}],controller:"PapeletasSitios",controllerAs:"vm",resolve:{papeletasSitiosPrepService:t}}).state("papeletasSitiosCambios",{url:"/papeletasSitios/cambios",templateProvider:["$templateCache",function(e){return e.get("papeletasSitios/addModify/papeletaSitioAddModify.html")}],controller:"PapeletaSitioAddModify",controllerAs:"vm"})}function t(e){return e.papeletasSitiosRest().query({anios:!0})}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["papeletasSitiosService"]}(),function(){"use strict";function e(e){e.state("sectores",{url:"/sectores",templateProvider:["$templateCache",function(e){return e.get("sectores/list/sectores.html")}],controller:"Sectores",controllerAs:"vm",resolve:{sectoresPrepService:t}}).state("sectoresCambios",{url:"/sectores/cambios/:sectorId/:calle",templateProvider:["$templateCache",function(e){return e.get("sectores/addModify/sectorAddModify.html")}],controller:"SectorAddModify",controllerAs:"vm",resolve:{getSectorPrepService:o}})}function t(e){return e.sectoresRest().query()}function o(e,t){return t.sectorId?e.sectoresRest().get({id:t.sectorId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],t.$inject=["sectoresService"],o.$inject=["sectoresService","$stateParams"]}(),function(){"use strict";function e(e,t,o,r,n,a,i){function s(){n?n.$promise.then(c):l()}function c(e){return h.aspirante=e,!0}function l(){h.newCofrade=!0,h.aspirante={cofrade:null,fecha:(new Date).toLocaleDateString()}}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.aspirante.cofrade=e?e.id:null}function p(t){t?h.aspirante.cofrade?(h.aspirante.cofrade=h.aspirante.cofrade.id?h.aspirante.cofrade.id:h.aspirante.cofrade,a.aspirantesRest().save(h.aspirante,m,v)):(e.aspiranteForm.cofrade.$error.required=!0,g()):g()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("aspirantes")}function v(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,s()}angular.module("app").controller("AspiranteAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getAspirantePrepService","aspirantesService","cofradesService"]}(),function(){"use strict";function e(e,t){function o(){return t.$promise.then(function(e){n.aspirante=e})}function r(t,o){e.go("aspirantesCambios",{aspiranteId:t})}var n=this;n.modifyAspirante=r,o()}angular.module("app").controller("AspiranteDetalle",e),e.$inject=["$state","getAspirantePrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.aspirantes=e})}var o=this;o.aspirantes=null,t()}angular.module("app").controller("Aspirantes",e),e.$inject=["aspirantesPrepService"]}(),function(){"use strict";function e(e,t,o,r,n,a,i){function s(){n?n.$promise.then(c):l()}function c(e){return h.autoridad=e,h.calleSelected={calle:h.autoridad.direccion.calle,cp:h.autoridad.direccion.cp,provincia:h.autoridad.direccion.provincia,municipio:h.autoridad.direccion.municipio},!0}function l(){h.newCofrade=!0,h.autoridad={direccion:{}}}function u(){window.history.back()}function d(e){return i.getCalles(e).then(function(e){return e.data})}function f(e){e?(h.autoridad.direccion.calle=e.calle,h.autoridad.direccion.municipio=e.municipio,h.autoridad.direccion.cp=e.cp,h.autoridad.direccion.provincia=e.provincia):(h.autoridad.direccion.calle=null,h.autoridad.direccion.municipio=null,h.autoridad.direccion.cp=null,h.autoridad.direccion.provincia=null)}function p(e){e?(h.autoridad.direccion.calle=h.autoridad.direccion.calle?h.autoridad.direccion.calle:h.searchText,a.autoridadesRest().save(h.autoridad,m,v)):g()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("autoridades")}function v(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,s()}angular.module("app").controller("AutoridadAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getAutoridadPrepService","autoridadesService","cofradesService"]}(),function(){"use strict";function e(e,t,o){function r(){return t.$promise.then(function(e){a.autoridad=e,a.maps=o})}function n(t,o){e.go("autoridadesCambios",{autoridadId:t})}var a=this;a.modifyAutoridad=n,r()}angular.module("app").controller("AutoridadDetalle",e),e.$inject=["$state","getAutoridadPrepService","getMapsPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.autoridades=e})}var o=this;o.autoridades=null,t()}angular.module("app").controller("Autoridades",e),e.$inject=["autoridadesPrepService"]}(),function(){"use strict";function e(e,t,o,r,n,a,i){function s(){n?n.$promise.then(c):a.getRegistros().then(function(e){S.cofrade.numeroOrden=e.data.numeroOrden,S.cofrade.numeroCofrade=e.data.numeroCofrade})}function c(e){return S.cofrade=e,S.calleSelected={calle:S.cofrade.datosPersonales.direccion.calle,cp:S.cofrade.datosPersonales.direccion.cp,provincia:S.cofrade.datosPersonales.direccion.provincia,municipio:S.cofrade.datosPersonales.direccion.municipio},S.fechaNacimiento=S.cofrade.datosPersonales.fechaNacimiento,S.fechaInscripcion=S.cofrade.datosPersonales.fechaInscripcion,S.cofrade.datosFinancieros=S.cofrade.datosFinancieros||{cuenta:{},deuda:[]},S.cofrade.datosFinancieros.cuenta=S.cofrade.datosFinancieros.cuenta||{},S.cofrade.datosFinancieros.deuda=S.cofrade.datosFinancieros.deuda||[],!0}function l(){window.history.back()}function u(e){return a.getCalles(e).then(function(e){return e.data})}function d(e){e?(S.cofrade.datosPersonales.direccion.calle=e.calle,S.cofrade.datosPersonales.direccion.municipio=e.municipio,S.cofrade.datosPersonales.direccion.cp=e.cp,S.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):(S.cofrade.datosPersonales.direccion.calle=null,S.cofrade.datosPersonales.direccion.municipio=null,S.cofrade.datosPersonales.direccion.cp=null,S.cofrade.datosPersonales.direccion.provincia=null,S.sector=null,S.nuevaCalle=!0)}function f(e){i.sectoresRest().query({calle:e},function(e){S.sector=e[0].numeroSector,S.nuevaCalle=!1})}function p(){S.cofrade.datosFinancieros.cuenta.iban&&(S.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")(S.cofrade.datosFinancieros.cuenta.iban))}function m(){S.cofrade.datosFinancieros.cuenta.cc&&(S.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")(S.cofrade.datosFinancieros.cuenta.cc))}function v(e){function r(){c.save(S.cofrade,g,h)}function n(){i.sectoresRest().get({sector:S.sector},function(e){var n=e[0];n?(n.cofrade=n.cofrade.id,n.calles.push(S.searchText),n.$save(null,r,h)):o.show(o.simple().content("El sector "+S.sector+" no existe!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var s={cuenta:{},deuda:[]};S.cofrade.datosPersonales.direccion.calle=S.searchText,JSON.stringify(S.cofrade.datosFinancieros)===JSON.stringify(s)&&delete S.cofrade.datosFinancieros;var c=a.cofradesRest();S.nuevaCalle?n():r()}else $()}function g(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("cofrades")}function h(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function $(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var S=this;S.nuevaCalle=!0,S.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:(new Date).toLocaleDateString(),fechaNacimiento:(new Date).toLocaleDateString()}},S.backState=l,S.querySearch=u,S.selectedItemChange=d,S.calcularCC=p,S.calcularIban=m,S.guardar=v,s()}angular.module("app").controller("CofradeAddModify",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,t,o,r){function n(){return o.$promise.then(function(e){i.cofrade=e,i.cofrade.datosFinancieros&&i.cofrade.datosFinancieros.cuenta&&(i.iban=t("parseIban")(i.cofrade.datosFinancieros.cuenta.iban),i.cc=t("parseCC")(i.cofrade.datosFinancieros.cuenta.cc)),i.maps=r})}function a(t,o){e.go("cofradesCambios",{cofradeId:t})}var i=this;i.cofrade=null,i.maps=null,i.modifyCofrade=a,n()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,t){function o(){return e.$promise.then(function(e){r.nextPage=e.next,r.cofrades=e.results}),t.$promise.then(function(e){r.nextPageBajas=e.next,r.cofradesBajas=e.results})}var r=this;r.cofrades=null,r.nextPage=null,r.cofradesBajas=null,r.nextPageBajas=null,r.selectedTab=0,o()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,t,o){var r=t[0];t.bind("scroll",function(){r.scrollTop+r.offsetHeight>=r.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var t="",o=0;o<e.length;o++)o>0&&o%4===0&&(t+=" "),t+=e[o];return t}}function t(){return function(e){e=e||"";var t="";return t=e.substr(0,4)+"-",t+=e.substr(4,4)+"-",t+=e.substr(8,2)+"-",t+=e.substr(10,10)}}function o(){return function(e){return e=e||"",e.substr(4,20)}}function r(){function e(e){for(var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",o=[],r=0;r<e.length;r++){var n=t.indexOf(e[r]);o.push(0>n?"-":n)}return o.join("")}function t(e,t){for(var o=10,r=e.length,n=0,a=0;r>a;a+=o){var i=n+""+e.substr(a,o);n=i%t}return n}function o(e,t){for(e+="";e.length<t;)e="0"+e;return e}return function(r){var n="ES",a=r+e(n)+"00",i=t(a,97);return n+o(98-i,2)+r}}angular.module("app").filter("parseIban",e).filter("parseCC",t).filter("calcularIban",r).filter("calcularCC",o)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales&&(e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento).toLocaleDateString(),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion).toLocaleDateString()),e.fecha&&(e.fecha=new Date(e.fecha).toLocaleDateString()),e}}function t(){return function(e){var t=null;return e.datosPersonales?(t=e.datosPersonales.fechaNacimiento.split("/"),e.datosPersonales.fechaNacimiento=t[2]+"-"+t[1]+"-"+t[0],t=e.datosPersonales.fechaInscripcion.split("/"),e.datosPersonales.fechaInscripcion=t[2]+"-"+t[1]+"-"+t[0]):e.fecha?(t=e.fecha.split("/"),e.fecha=t[2]+"-"+t[1]+"-"+t[0]):e=new Date(e).toLocaleDateString(),e}}angular.module("app").filter("stringToDateFormat",e).filter("formatDates",t)}(),function(){"use strict";function e(){return function(t){var o=t instanceof Array;for(var r in t)null===t[r]?o?t.splice(r,1):delete t[r]:"object"==typeof t[r]&&e(t[r]);return t}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/aspirantes/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,o){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}return{aspirantesRest:o}}angular.module("app").factory("aspirantesService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/autoridades/:id.json:json",null,{query:{method:"GET",isArray:!0},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("removeNulls")(e))}}})}return{autoridadesRest:o}}angular.module("app").factory("autoridadesService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t,o){function r(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,t){return o("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,t){return angular.toJson(o("formatDates")(o("removeNulls")(e)))}}})}function n(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function a(e){return t.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function i(){return t.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:r,cofradesBajasRest:n,getCalles:a,getRegistros:i}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/costaleros/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,o){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}return{costalerosRest:o}}angular.module("app").factory("costalerosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/directivos/:id.json:json",null,{query:{method:"GET",isArray:!0},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("removeNulls")(e))}}})}return{directivosRest:o}}angular.module("app").factory("directivosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function t(){return e("http://127.0.0.1:5050/api/gastosBancarios/:id.json:json")}return{gastosBancariosRest:t}}angular.module("app").factory("gastosBancariosService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e){function t(t){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:t,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:t}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function t(){return e("http://127.0.0.1:5050/api/numerosLoteria/:id.json:json")}return{numerosLoteriaRest:t}}angular.module("app").factory("numerosLoteriaService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t){function o(){return e("http://127.0.0.1:5050/api/papeletasSitios/:id.json:json",null,{query:{method:"GET",isArray:!0},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("removeNulls")(e))}}})}return{papeletasSitiosRest:o}}angular.module("app").factory("papeletasSitiosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function t(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:t}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t,o,r,n,a,i,s){function c(){a&&a.$promise.then(l)}function l(e){return h.costalero=e,h.cofradeSelected=h.costalero.cofrade,!0}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),s.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.costalero.cofrade=e?e.id:null}function p(t){t?(h.costalero.fecha=""===h.costalero.fecha?null:h.costalero.fecha,h.costalero.cofrade?i.costalerosRest().save(h.costalero,m,v):(e.costaleroForm.cofrade.$error.required=!0,g())):g()}function m(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),n.go("costaleros")}function v(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,c()}angular.module("app").controller("CostaleroAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","getCostaleroPrepService","costalerosService","cofradesService"]}(),function(){"use strict";function e(e,t){function o(){return t.$promise.then(function(e){n.costalero=e})}function r(t,o){e.go("costalerosCambios",{costaleroId:t})}var n=this;n.modifyCostalero=r,o()}angular.module("app").controller("CostaleroDetalle",e),e.$inject=["$state","getCostaleroPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.costaleros=e})}var o=this;o.costaleros=null,t()}angular.module("app").controller("Costaleros",e),e.$inject=["costalerosPrepService"]}(),function(){"use strict";function e(e,t,o,r,n,a,i){function s(){n?n.$promise.then(c):l()}function c(e){return h.directivo=e,!0}function l(){h.newCofrade=!0,h.directivo={cofrade:null,fecha:(new Date).toLocaleDateString()}}function u(){window.history.back()}function d(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function f(e){h.directivo.cofrade=e?e.id:null}function p(t){t?h.directivo.cofrade?(h.directivo.cofrade=h.directivo.cofrade.id?h.directivo.cofrade.id:h.directivo.cofrade,a.directivosRest().save(h.directivo,m,v)):(e.directivoForm.cofrade.$error.required=!0,g()):g()}function m(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("directivos")}function v(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function g(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.newCofrade=!1,h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,s()}angular.module("app").controller("DirectivoAddModify",e),e.$inject=["$scope","$document","$mdToast","$state","getDirectivoPrepService","directivosService","cofradesService"]}(),function(){"use strict";function e(e,t){function o(){return t.$promise.then(function(e){n.directivo=e})}function r(t,o){e.go("directivosCambios",{directivoId:t})}var n=this;n.modifyDirectivo=r,o()}angular.module("app").controller("DirectivoDetalle",e),e.$inject=["$state","getDirectivoPrepService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.directivos=e})}var o=this;o.directivos=null,t()}angular.module("app").controller("Directivos",e),e.$inject=["directivosPrepService"]}(),function(){"use strict";function e(e,t,o,r,n,a){function i(){n.$promise.then(s)}function s(e){return f.gastoBancario=e[0],!0}function c(e){e?a.gastosBancariosRest().save(f.gastoBancario,l,u):d()}function l(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("gastosBancarios")}function u(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function d(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var f=this;f.newCofrade=!1,f.guardar=c,i()}angular.module("app").controller("GastosBancarios",e),e.$inject=["$scope","$document","$mdToast","$state","gastosBancariosPrepService","gastosBancariosService"]}(),function(){"use strict";function e(e,t,o,r,n,a){function i(){n.$promise.then(s)}function s(e){return f.numerosLoteria=e[0],!0}function c(e){e?a.numerosLoteriaRest().save(f.numerosLoteria,l,u):d()}function l(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("numerosLoteria")}function u(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function d(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var f=this;f.newCofrade=!1,f.guardar=c,i()}angular.module("app").controller("NumerosLoteria",e),e.$inject=["$scope","$document","$mdToast","$state","numerosLoteriaPrepService","numerosLoteriaService"]}(),function(){"use strict";function e(e,t,o,r,n,a,i){function s(){v.newCofrade=!0,v.fecha=(new Date).toLocaleDateString(),v.papeletaSitio={cofrade:null}}function c(){window.history.back()}function l(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),i.cofradesRest().query(t).$promise.then(function(e){return e.results})}function u(e){v.papeletaSitio.cofrade=e?e.id:null}function d(o){o?v.papeletaSitio.cofrade?(v.papeletaSitio.fecha=v.fecha,t("formatDates")(v.papeletaSitio),a.papeletasSitiosRest().save({anio:new Date(v.papeletaSitio.fecha).getFullYear(),papeletas:[v.papeletaSitio]},f,p)):(e.papeletaSitioForm.cofrade.$error.required=!0,m()):m()}function f(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),n.go("papeletasSitios")}function p(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function m(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var v=this;v.newCofrade=!1,v.backState=c,v.querySearch=l,v.selectedItemChange=u,v.guardar=d,s()}angular.module("app").controller("PapeletaSitioAddModify",e),
e.$inject=["$scope","$filter","$document","$mdToast","$state","papeletasSitiosService","cofradesService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.papeletasSitios=e})}var o=this;o.papeletasSitios=null,t()}angular.module("app").controller("PapeletasSitios",e),e.$inject=["papeletasSitiosPrepService"]}(),function(){"use strict";function e(e,t,o,r,n,a,i,s,c){function l(){i?i.$promise.then(u):d()}function u(e){return C.sector=e[0],C.cofradeSelected=C.sector.cofrade,C.originSector=C.sector.numeroSector,"new"===a.calle?(C.newCalle=!0,C.indexCalle=C.sector.calles.length):C.indexCalle=C.sector.calles.indexOf(a.calle)>-1?C.sector.calles.indexOf(a.calle):null,!0}function d(){C.newEncargado=!0,C.sector={cofrade:null}}function f(){window.history.back()}function p(e){var t={};return isNaN(e)?t.nombre=e:isNaN(e)||(t.numeroOrden=e),c.cofradesRest().query(t).$promise.then(function(e){return e.results})}function m(e){C.sector.cofrade=e?e.id:null}function v(t){t?C.sector.cofrade?C.sector.numeroSector===C.originSector||C.newEncargado?g():h():(e.sectorForm.cofrade.$error.required=!0,P()):P()}function g(){s.sectoresRest().save(C.sector,$,S)}function h(){s.sectoresRest().get({sector:C.sector.numeroSector}).$promise.then(function(e){return e[0]?(e[0].cofrade=e[0].cofrade.id,e[0].calles.push(C.sector.calles[C.indexCalle]),void e[0].$save(null,function(){C.sector.calles.splice(C.indexCalle,1),C.sector.numeroSector=C.originSector,g()},S)):void r.show(r.simple().content("No existe ese sector").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))})}function $(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),n.go("sectores")}function S(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function P(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var C=this;C.newEncargado=!1,C.newCalle=!1,C.indexCalle=null,C.backState=f,C.querySearch=p,C.selectedItemChange=m,C.guardar=v,l()}angular.module("app").controller("SectorAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","$stateParams","getSectorPrepService","sectoresService","cofradesService"]}(),function(){"use strict";function e(e){function t(){return e.$promise.then(function(e){o.sectores=e})}var o=this;o.sectores=null,t()}angular.module("app").controller("Sectores",e),e.$inject=["sectoresPrepService"]}(),function(){"use strict";function e(e){function t(t,o){e.go("aspirantesDetalle",{aspiranteId:t})}function o(t,o){o.stopPropagation(),e.go("aspirantesCambios",{aspiranteId:t})}var r=this;r.modifyAspirante=o,r.goToAspirante=t}angular.module("app").controller("ListaAspirantes",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/aspirantes/list/aspirantes.directive.html",scope:{aspirantes:"=aspirantes"},link:function(e,t){e.$watch("vm.aspirantes",function(t){t&&(e.vm.aspirantesShort=e.vm.aspirantes.map(function(e){var t={id:e.id,fecha:e.fecha};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaAspirantes",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaAspirantes",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar aspirante").content("¿Está seguro que desea eliminar este aspirante?<br>Perderá su antiguedad.").ariaLabel("Eliminar aspirante").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){var r=o.aspirantesRest().get({id:t},function(){r.$delete({id:t}).then(function(){"aspirantes"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("aspirantes")})})}var a=this;a.removeAspirante=r}angular.module("app").controller("RemoveAspirante",e),e.$inject=["$state","$mdDialog","aspirantesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/aspirantes/remove/removeAspirante.directive.html",scope:{aspiranteId:"=aspirante"},controller:"RemoveAspirante",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeAspirante",e)}(),function(){"use strict";function e(e){function t(t,o){e.go("autoridadesDetalle",{autoridadId:t})}function o(t,o){o.stopPropagation(),e.go("autoridadesCambios",{autoridadId:t})}var r=this;r.modifyAutoridad=o,r.goToAutoridad=t}angular.module("app").controller("ListaAutoridades",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/autoridades/list/autoridades.directive.html",scope:{autoridades:"=autoridades"},controller:"ListaAutoridades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaAutoridades",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar autoridad").content("¿Está seguro que desea eliminar este autoridad?").ariaLabel("Eliminar autoridad").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){var r=o.autoridadesRest().get({id:t},function(){r.$delete({id:t}).then(function(){"autoridades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("autoridades")})})}var a=this;a.removeAutoridad=r}angular.module("app").controller("RemoveAutoridad",e),e.$inject=["$state","$mdDialog","autoridadesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/autoridades/remove/removeAutoridad.directive.html",scope:{autoridadId:"=autoridad"},controller:"RemoveAutoridad",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeAutoridad",e)}(),function(){"use strict";function e(e,t,o,r){function n(){p.bajas?i():a()}function a(){if(p.nextPage){var e={page:p.nextPage};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=p.cofrades.concat(e.results)})}}function i(){if(p.nextPageBajas){var e={page:p.nextPageBajas};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=p.cofradesBajas.concat(e.results)})}}function s(){p.filtro=isNaN(p.buscar)?"nombre":"numeroOrden",p.bajas?l():c()}function c(){var e={};e[p.filtro]=p.buscar,r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=e.results})}function l(){var e={};e[p.filtro]=p.buscar,r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=e.results})}function u(e,t){o.go("cofradesDetalle",{cofradeId:e})}function d(e,t){t.stopPropagation(),o.go("cofradesCambios",{cofradeId:e})}function f(){p.search()}var p=this;p.filtro="nombre",p.buscar=null,p.search=s,p.goToCofrade=u,p.modifyCofrade=d,p.changeTab=f;var m=e.$on("scrollDown",n);t.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}(),function(){"use strict";function e(e,t){function o(e,o){o.stopPropagation(),t.show({templateUrl:"./templates/directives/cofrades/remove/dialogTmpl/removeCofrade.tmpl.html",locals:{id:e},controller:"RemoveCofradeTmpl",controllerAs:"vm",bindToController:!0,targetEvent:o,clickOutsideToClose:!0}).then(function(){})}var r=this;r.removeCofrade=o}angular.module("app").controller("RemoveCofrade",e),e.$inject=["$state","$mdDialog"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/remove/removeCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RemoveCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCofrade",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){var r=o.cofradesRest().get({id:t},function(){r.baja=null,r.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var a=this;a.restoreCofrade=r}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e){function t(t,o){e.go("costalerosDetalle",{costaleroId:t})}function o(t,o){o.stopPropagation(),e.go("costalerosCambios",{costaleroId:t})}var r=this;r.modifyCostalero=o,r.goToCostalero=t}angular.module("app").controller("ListaCostaleros",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/list/costaleros.directive.html",scope:{costaleros:"=costaleros"},link:function(e,t){e.$watch("vm.costaleros",function(t){t&&(e.vm.costalerosShort=e.vm.costaleros.map(function(e){var t={id:e.id,sitio:e.sitio};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaCostaleros",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCostaleros",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar costalero").content("¿Está seguro que desea eliminar este costalero?<br>Dejará su sitio libre.").ariaLabel("Eliminar costalero").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){var r=o.costalerosRest().get({id:t},function(){r.cofrade=null,r.talla=null,r.fecha=null,r.$save().then(function(){"costaleros"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("costaleros")})})}var a=this;a.removeCostalero=r}angular.module("app").controller("RemoveCostalero",e),e.$inject=["$state","$mdDialog","costalerosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/remove/removeCostalero.directive.html",scope:{costaleroId:"=costalero"},controller:"RemoveCostalero",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCostalero",e)}(),function(){"use strict";function e(e){function t(t,o){e.go("directivosDetalle",{directivoId:t})}function o(t,o){o.stopPropagation(),e.go("directivosCambios",{directivoId:t})}var r=this;r.modifyDirectivo=o,r.goToDirectivo=t}angular.module("app").controller("ListaDirectivos",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/directivos/list/directivos.directive.html",scope:{directivos:"=directivos"},link:function(e,t){e.$watch("vm.directivos",function(t){t&&(e.vm.directivosShort=e.vm.directivos.map(function(e){var t={id:e.id,posicion:e.posicion};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaDirectivos",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaDirectivos",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar directivo").content("¿Está seguro que desea eliminar este directivo?").ariaLabel("Eliminar directivo").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){var r=o.directivosRest().get({id:t},function(){r.$delete({id:t}).then(function(){"directivos"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("directivos")})})}var a=this;a.removeDirectivo=r}angular.module("app").controller("RemoveDirectivo",e),e.$inject=["$state","$mdDialog","directivosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/directivos/remove/removeDirectivo.directive.html",scope:{directivoId:"=directivo"},controller:"RemoveDirectivo",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeDirectivo",e)}(),function(){"use strict";function e(e,t){function o(){t.papeletasSitiosRest().query({anio:r.anio},function(e){r.papeletasSitio=e[0]})}var r=this;r.anio=null,r.getAnio=o}angular.module("app").controller("ListaPapeletasSitios",e),e.$inject=["$state","papeletasSitiosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/papeletasSitios/list/papeletasSitios.directive.html",scope:{anios:"=papeletas"},controller:"ListaPapeletasSitios",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaPapeletasSitios",e)}(),function(){"use strict";function e(e,t,o){function r(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar papeleta sitio").content("¿Está seguro que desea eliminar esta papeleta de sitio?").ariaLabel("Eliminar papeletaSitio").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){n(e)})}function n(t){o.papeletasSitiosRest().save({anio:t.anio,papeletas:[t.papeleta],remove:!0},function(){"papeletasSitios"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("papeletasSitios")})}var a=this;a.removePapeletaSitio=r}angular.module("app").controller("RemovePapeletaSitio",e),e.$inject=["$state","$mdDialog","papeletasSitiosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/papeletasSitios/remove/removePapeletaSitio.directive.html",scope:{papeletaSitio:"=papeleta"},controller:"RemovePapeletaSitio",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removePapeletaSitio",e)}(),function(){"use strict";function e(e){function t(e,t){e="callesSector"+e,angular.element(document.getElementById(e)).toggleClass("ocultar")}function o(t,o){o.stopPropagation(),e.go("sectoresCambios",{sectorId:t})}function r(t,o,r){r.stopPropagation(),e.go("sectoresCambios",{sectorId:t,calle:o})}function n(t,o){o.stopPropagation(),e.go("sectoresCambios",{sectorId:t,calle:"new"})}var a=this;a.modifySector=o,a.modifyCalle=r,a.addCalle=n,a.showCalles=t}angular.module("app").controller("ListaSectores",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/sectores/list/sectores.directive.html",scope:{sectores:"=sectores"},link:function(e,t){e.$watch("vm.sectores",function(t){t&&(e.vm.sectoresShort=e.vm.sectores.map(function(e){var t={id:e.id,numeroSector:e.numeroSector,calles:e.calles};return e.cofrade&&(t.numeroOrden=e.cofrade.numeroOrden,t.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),t}))},!0)},controller:"ListaSectores",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaSectores",e)}(),function(){"use strict";function e(e,t,o,r){function n(e,o){o.stopPropagation();var r=t.confirm().title("Eliminar sector").content("¿Está seguro que desea eliminar este sector?").ariaLabel("Eliminar sector").targetEvent(o).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);t.show(r).then(function(){a(e)})}function a(t){var n=r.sectoresRest().get({id:t},function(){0!==n[0].calles.length?o.show(o.simple().content("No se puede eliminar un sector con calles asignadas").position("top right").hideDelay(3e3)):n[0].$delete({id:t}).then(function(){"sectores"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("sectores")})})}var i=this;i.removeSector=n}angular.module("app").controller("RemoveSector",e),e.$inject=["$state","$mdDialog","$mdToast","sectoresService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/sectores/remove/removeSector.directive.html",scope:{sectorId:"=sector"},controller:"RemoveSector",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeSector",e)}(),function(){"use strict";function e(e,t,o){function r(){t.cancel()}function n(t){var r=o.cofradesRest().get({id:t},function(){r.baja={motivo:a.motivoBaja,fechaBaja:(new Date).toLocaleDateString()},r.numeroCofrade=null,r.$save({updateNumeroCofrade:!0}).then(function(){a.closeDialog(),"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var a=this;a.closeDialog=r,a.removeEndCofrade=n}angular.module("app").controller("RemoveCofradeTmpl",e),e.$inject=["$state","$mdDialog","cofradesService"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5pbml0Lm1vZHVsZS5qcyIsImFwcC5sb2FkaW5nLmpzIiwiYWxsLm1pbi5qcyIsImFwcC5tYXAuanMiLCJhcHAucGlja2VyRGF0ZS5qcyIsImFwcC5yb3V0ZXMuanMiLCJhcHAudGhlbWUuanMiLCJhc3BpcmFudGVzL2FzcGlyYW50ZXMucm91dGVzLmpzIiwiYXV0b3JpZGFkZXMvYXV0b3JpZGFkZXMucm91dGVzLmpzIiwiY29mcmFkZXMvY29mcmFkZXMucm91dGVzLmpzIiwiY29zdGFsZXJvcy9jb3N0YWxlcm9zLnJvdXRlcy5qcyIsImRpcmVjdGl2b3MvZGlyZWN0aXZvcy5yb3V0ZXMuanMiLCJnYXN0b3NCYW5jYXJpb3MvZ2FzdG9zQmFuY2FyaW9zLnJvdXRlcy5qcyIsImludGVyZmF6L2FwcC5jb250cm9sbGVyLmpzIiwibnVtZXJvc0xvdGVyaWEvbnVtZXJvc0xvdGVyaWEucm91dGVzLmpzIiwicGFwZWxldGFzU2l0aW9zL3BhcGVsZXRhc1NpdGlvcy5yb3V0ZXMuanMiLCJzZWN0b3Jlcy9zZWN0b3Jlcy5yb3V0ZXMuanMiLCJhc3BpcmFudGVzL2FkZE1vZGlmeS9hc3BpcmFudGVBZGRNb2RpZnkuY29udHJvbGxlci5qcyIsImFzcGlyYW50ZXMvZGV0YWlsL2FzcGlyYW50ZURldGFsbGUuY29udHJvbGxlci5qcyIsImFzcGlyYW50ZXMvbGlzdC9hc3BpcmFudGVzLmNvbnRyb2xsZXIuanMiLCJhdXRvcmlkYWRlcy9hZGRNb2RpZnkvYXV0b3JpZGFkQWRkTW9kaWZ5LmNvbnRyb2xsZXIuanMiLCJhdXRvcmlkYWRlcy9kZXRhaWwvYXV0b3JpZGFkRGV0YWxsZS5jb250cm9sbGVyLmpzIiwiYXV0b3JpZGFkZXMvbGlzdC9hdXRvcmlkYWRlcy5jb250cm9sbGVyLmpzIiwiY29mcmFkZXMvYWRkTW9kaWZ5L2NvZnJhZGVBZGRNb2RpZnkuY29udHJvbGxlci5qcyIsImNvZnJhZGVzL2RldGFpbC9jb2ZyYWRlRGV0YWxsZS5jb250cm9sbGVyLmpzIiwiY29mcmFkZXMvbGlzdC9jb2ZyYWRlcy5jb250cm9sbGVyLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL3Njcm9sbHkuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9maWx0ZXJzL3BhcnNlQ3VlbnRhLmZpbHRlci5qcyIsImNvbW1vbnMvZmlsdGVycy9wYXJzZURhdGUuZmlsdGVyLmpzIiwiY29tbW9ucy9maWx0ZXJzL3JlbW92ZU51bGxzLmZpbHRlci5qcyIsImNvbW1vbnMvc2VydmljZXMvYXNwaXJhbnRlcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9hdXRvcmlkYWRlcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9jb2ZyYWRlcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9jb3N0YWxlcm9zLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL2RpcmVjdGl2b3Muc2VydmljZS5qcyIsImNvbW1vbnMvc2VydmljZXMvZ2FzdG9zQmFuY2FyaW9zLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL21hcGFzLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL251bWVyb3NMb3RlcmlhLnNlcnZpY2UuanMiLCJjb21tb25zL3NlcnZpY2VzL3BhcGVsZXRhc1NpdGlvcy5zZXJ2aWNlLmpzIiwiY29tbW9ucy9zZXJ2aWNlcy9zZWN0b3Jlcy5zZXJ2aWNlLmpzIiwiY29zdGFsZXJvcy9hZGRNb2RpZnkvY29zdGFsZXJvQWRkTW9kaWZ5LmNvbnRyb2xsZXIuanMiLCJjb3N0YWxlcm9zL2RldGFpbC9jb3N0YWxlcm9EZXRhbGxlLmNvbnRyb2xsZXIuanMiLCJjb3N0YWxlcm9zL2xpc3QvY29zdGFsZXJvcy5jb250cm9sbGVyLmpzIiwiZGlyZWN0aXZvcy9hZGRNb2RpZnkvZGlyZWN0aXZvQWRkTW9kaWZ5LmNvbnRyb2xsZXIuanMiLCJkaXJlY3Rpdm9zL2RldGFpbC9kaXJlY3Rpdm9EZXRhbGxlLmNvbnRyb2xsZXIuanMiLCJkaXJlY3Rpdm9zL2xpc3QvZGlyZWN0aXZvcy5jb250cm9sbGVyLmpzIiwiZ2FzdG9zQmFuY2FyaW9zL21vZGlmeS9nYXN0b0JhbmNhcmlvTW9kaWZ5LmNvbnRyb2xsZXIuanMiLCJudW1lcm9zTG90ZXJpYS9tb2RpZnkvbnVtZXJvc0xvdGVyaWFNb2RpZnkuY29udHJvbGxlci5qcyIsInBhcGVsZXRhc1NpdGlvcy9hZGRNb2RpZnkvcGFwZWxldGFTaXRpb0FkZE1vZGlmeS5jb250cm9sbGVyLmpzIiwicGFwZWxldGFzU2l0aW9zL2xpc3QvcGFwZWxldGFzU2l0aW9zLmNvbnRyb2xsZXIuanMiLCJzZWN0b3Jlcy9hZGRNb2RpZnkvc2VjdG9yQWRkTW9kaWZ5LmNvbnRyb2xsZXIuanMiLCJzZWN0b3Jlcy9saXN0L3NlY3RvcmVzLmNvbnRyb2xsZXIuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvYXNwaXJhbnRlcy9saXN0L2FzcGlyYW50ZXMuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvYXNwaXJhbnRlcy9saXN0L2FzcGlyYW50ZXMuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2FzcGlyYW50ZXMvcmVtb3ZlL3JlbW92ZUFzcGlyYW50ZS5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9hc3BpcmFudGVzL3JlbW92ZS9yZW1vdmVBc3BpcmFudGUuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2F1dG9yaWRhZGVzL2xpc3QvYXV0b3JpZGFkZXMuY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvYXV0b3JpZGFkZXMvbGlzdC9hdXRvcmlkYWRlcy5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvYXV0b3JpZGFkZXMvcmVtb3ZlL3JlbW92ZUF1dG9yaWRhZC5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9hdXRvcmlkYWRlcy9yZW1vdmUvcmVtb3ZlQXV0b3JpZGFkLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9saXN0L2NvZnJhZGVzLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL2xpc3QvY29mcmFkZXMuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9yZW1vdmVDb2ZyYWRlLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9yZW1vdmVDb2ZyYWRlLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb2ZyYWRlcy9yZXN0b3JlL3Jlc3RvcmVDb2ZyYWRlLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3Jlc3RvcmUvcmVzdG9yZUNvZnJhZGUuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2Nvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2Nvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9jb3N0YWxlcm9zL3JlbW92ZS9yZW1vdmVDb3N0YWxlcm8uY29udHJvbGxlci5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9yZW1vdmUvcmVtb3ZlQ29zdGFsZXJvLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9kaXJlY3Rpdm9zL2xpc3QvZGlyZWN0aXZvcy5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9kaXJlY3Rpdm9zL2xpc3QvZGlyZWN0aXZvcy5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvZGlyZWN0aXZvcy9yZW1vdmUvcmVtb3ZlRGlyZWN0aXZvLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2RpcmVjdGl2b3MvcmVtb3ZlL3JlbW92ZURpcmVjdGl2by5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvcGFwZWxldGFzU2l0aW9zL2xpc3QvcGFwZWxldGFzU2l0aW9zLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL3BhcGVsZXRhc1NpdGlvcy9saXN0L3BhcGVsZXRhc1NpdGlvcy5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvcGFwZWxldGFzU2l0aW9zL3JlbW92ZS9yZW1vdmVQYXBlbGV0YVNpdGlvLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL3BhcGVsZXRhc1NpdGlvcy9yZW1vdmUvcmVtb3ZlUGFwZWxldGFTaXRpby5kaXJlY3RpdmUuanMiLCJjb21tb25zL2RpcmVjdGl2ZXMvc2VjdG9yZXMvbGlzdC9zZWN0b3Jlcy5jb250cm9sbGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9zZWN0b3Jlcy9saXN0L3NlY3RvcmVzLmRpcmVjdGl2ZS5qcyIsImNvbW1vbnMvZGlyZWN0aXZlcy9zZWN0b3Jlcy9yZW1vdmUvcmVtb3ZlU2VjdG9yLmNvbnRyb2xsZXIuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL3NlY3RvcmVzL3JlbW92ZS9yZW1vdmVTZWN0b3IuZGlyZWN0aXZlLmpzIiwiY29tbW9ucy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9kaWFsb2dUbXBsL3JlbW92ZUNvZnJhZGUuY29udHJvbGxlci50bXBsLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJsb2FkaW5nU3Bpbm5lciIsIiRodHRwUHJvdmlkZXIiLCJpbnRlcmNlcHRvcnMiLCJwdXNoIiwibXlIdHRwSW50ZXJjZXB0b3IiLCIkcSIsImxvYWRTY3JlZW4iLCJlbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVxdWVzdCIsImNvbmZpZyIsIm1ldGhvZCIsImNzcyIsInJlcXVlc3RFcnJvciIsInJlamVjdGlvbiIsInJlamVjdCIsInJlc3BvbnNlIiwicmVzcG9uc2VFcnJvciIsImZhY3RvcnkiLCIkaW5qZWN0IiwiZ29vZ2xlTWFwQVBJIiwidWlHbWFwR29vZ2xlTWFwQXBpUHJvdmlkZXIiLCJjb25maWd1cmUiLCJsaWJyYXJpZXMiLCJkYXRlUGlja2VyQ29uZmlnIiwiJG1kRGF0ZUxvY2FsZVByb3ZpZGVyIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJkYXlzIiwic2hvcnREYXlzIiwiZmlyc3REYXlPZldlZWsiLCJwYXJzZURhdGUiLCJkYXRlU3RyaW5nIiwiRGF0ZSIsImZvcm1hdERhdGUiLCJkYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlIiwidGhlbWVBbmd1bGFyTWF0ZXJpYWwiLCIkbWRUaGVtaW5nUHJvdmlkZXIiLCJ0ZW1wbGF0ZVByb3ZpZGVyIiwiJHRlbXBsYXRlQ2FjaGUiLCJnZXQiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVzb2x2ZSIsImFzcGlyYW50ZXNQcmVwU2VydmljZSIsImdldEFzcGlyYW50ZVByZXBTZXJ2aWNlIiwiYXNwaXJhbnRlc1NlcnZpY2UiLCJhc3BpcmFudGVzUmVzdCIsInF1ZXJ5IiwiJHN0YXRlUGFyYW1zIiwiaWQiLCJhc3BpcmFudGVJZCIsImF1dG9yaWRhZGVzUHJlcFNlcnZpY2UiLCJnZXRBdXRvcmlkYWRQcmVwU2VydmljZSIsImdldE1hcHNQcmVwU2VydmljZSIsImF1dG9yaWRhZGVzU2VydmljZSIsImF1dG9yaWRhZGVzUmVzdCIsImF1dG9yaWRhZElkIiwidWlHbWFwR29vZ2xlTWFwQXBpIiwibWFwYXNTZXJ2aWNlIiwiJHByb21pc2UiLCJ0aGVuIiwiZGF0YSIsImFkZHJlc3MiLCJkaXJlY2Npb24iLCJjYWxsZSIsIm51bWVybyIsIm11bmljaXBpbyIsInByb3ZpbmNpYSIsImNwIiwiZ2VvQ29kaW5nQVBJIiwicmVzdWx0cyIsImxlbmd0aCIsImNvb3JkaW5hdGVzIiwiZ2VvbWV0cnkiLCJsb2NhdGlvbiIsIm1hcHMiLCJjb29yZCIsImxhdGl0dWRlIiwibGF0IiwibG9uZ2l0dWRlIiwibG5nIiwibWFya2VyIiwiem9vbSIsImNvZnJhZGVzUHJlcFNlcnZpY2UiLCJjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2UiLCJnZXRDb2ZyYWRlUHJlcFNlcnZpY2UiLCJjb2ZyYWRlc1NlcnZpY2UiLCJjb2ZyYWRlc1Jlc3QiLCJjb2ZyYWRlc0JhamFzUmVzdCIsImNvZnJhZGVJZCIsImRhdG9zUGVyc29uYWxlcyIsImNvc3RhbGVyb3NQcmVwU2VydmljZSIsImdldENvc3RhbGVyb1ByZXBTZXJ2aWNlIiwiY29zdGFsZXJvc1NlcnZpY2UiLCJjb3N0YWxlcm9zUmVzdCIsImNvc3RhbGVyb0lkIiwiZGlyZWN0aXZvc1ByZXBTZXJ2aWNlIiwiZ2V0RGlyZWN0aXZvUHJlcFNlcnZpY2UiLCJkaXJlY3Rpdm9zU2VydmljZSIsImRpcmVjdGl2b3NSZXN0IiwiZGlyZWN0aXZvSWQiLCJnYXN0b3NCYW5jYXJpb3NQcmVwU2VydmljZSIsImdhc3Rvc0JhbmNhcmlvc1NlcnZpY2UiLCJnYXN0b3NCYW5jYXJpb3NSZXN0IiwiQXBwQ3RybCIsIiRtZFNpZGVuYXYiLCIkc3RhdGUiLCJ0b2dnbGVTaWRlbmF2IiwibWVudUlkIiwidG9nZ2xlIiwibmF2aWdhdGVUbyIsInRvIiwiZ28iLCJ2bSIsInRoaXMiLCJudW1lcm9zTG90ZXJpYVByZXBTZXJ2aWNlIiwibnVtZXJvc0xvdGVyaWFTZXJ2aWNlIiwibnVtZXJvc0xvdGVyaWFSZXN0IiwicGFwZWxldGFzU2l0aW9zUHJlcFNlcnZpY2UiLCJwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlIiwicGFwZWxldGFzU2l0aW9zUmVzdCIsImFuaW9zIiwic2VjdG9yZXNQcmVwU2VydmljZSIsImdldFNlY3RvclByZXBTZXJ2aWNlIiwic2VjdG9yZXNTZXJ2aWNlIiwic2VjdG9yZXNSZXN0Iiwic2VjdG9ySWQiLCJBc3BpcmFudGVBZGRNb2RpZnkiLCIkc2NvcGUiLCIkZG9jdW1lbnQiLCIkbWRUb2FzdCIsImFjdGl2YXRlIiwiaW5pdEFzcGlyYW50ZSIsIm5ld0FzcGlyYW50ZSIsImFzcGlyYW50ZSIsIm5ld0NvZnJhZGUiLCJjb2ZyYWRlIiwiZmVjaGEiLCJiYWNrU3RhdGUiLCJ3aW5kb3ciLCJoaXN0b3J5IiwiYmFjayIsInF1ZXJ5U2VhcmNoIiwiZmlsdHJvIiwiaXNOYU4iLCJub21icmUiLCJudW1lcm9PcmRlbiIsInNlbGVjdGVkSXRlbUNoYW5nZSIsIml0ZW0iLCJndWFyZGFyIiwiaXNWYWxpZCIsInNhdmUiLCJndWFyZGFyU3VjY2VzcyIsImd1YXJkYXJFcnJvciIsImFzcGlyYW50ZUZvcm0iLCIkZXJyb3IiLCJyZXF1aXJlZCIsInNob3dBY3Rpb25Ub2FzdCIsInNob3ciLCJzaW1wbGUiLCJjb250ZW50IiwicG9zaXRpb24iLCJoaWRlRGVsYXkiLCJwYXJlbnQiLCJhY3Rpb24iLCJoaWdobGlnaHRBY3Rpb24iLCJBc3BpcmFudGVEZXRhbGxlIiwibW9kaWZ5QXNwaXJhbnRlIiwiZXZlbnQiLCJBc3BpcmFudGVzIiwiYXNwaXJhbnRlcyIsIkF1dG9yaWRhZEFkZE1vZGlmeSIsImluaXRBdXRvcmlkYWQiLCJuZXdBdXRvcmlkYWQiLCJhdXRvcmlkYWQiLCJjYWxsZVNlbGVjdGVkIiwiZ2V0Q2FsbGVzIiwic2VhcmNoVGV4dCIsIkF1dG9yaWRhZERldGFsbGUiLCJtb2RpZnlBdXRvcmlkYWQiLCJBdXRvcmlkYWRlcyIsImF1dG9yaWRhZGVzIiwiQ29mcmFkZUFkZE1vZGlmeSIsIiRmaWx0ZXIiLCJpbml0Q29mcmFkZSIsImdldFJlZ2lzdHJvcyIsIm51bWVyb0NvZnJhZGUiLCJmZWNoYU5hY2ltaWVudG8iLCJmZWNoYUluc2NyaXBjaW9uIiwiZGF0b3NGaW5hbmNpZXJvcyIsImN1ZW50YSIsImRldWRhIiwic2VhcmNoU2VjdG9yIiwic2VjdG9yIiwibnVldmFDYWxsZSIsIm51bWVyb1NlY3RvciIsImNhbGN1bGFyQ0MiLCJpYmFuIiwiY2MiLCJjYWxjdWxhckliYW4iLCJndWFyZGFyQ29mcmFkZSIsIkNvZnJhZGVSZXNvdXJjZSIsImd1YXJkYXJDYWxsZSIsInNlY3RvclJlc291cmNlIiwiY2FsbGVzIiwiJHNhdmUiLCJKU09OIiwic3RyaW5naWZ5Iiwic2V4byIsIkNvZnJhZGVEZXRhbGxlIiwibW9kaWZ5Q29mcmFkZSIsIkNvZnJhZGVzIiwibmV4dFBhZ2UiLCJuZXh0IiwiY29mcmFkZXMiLCJuZXh0UGFnZUJhamFzIiwiY29mcmFkZXNCYWphcyIsInNlbGVjdGVkVGFiIiwic2Nyb2xseSIsInJlc3RyaWN0IiwibGluayIsIiRyb290U2NvcGUiLCJhdHRycyIsInJhdyIsImJpbmQiLCJzY3JvbGxUb3AiLCJvZmZzZXRIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCIkZW1pdCIsImRpcmVjdGl2ZSIsInBhcnNlSWJhbiIsImZvcm1hdHRlZEliYW4iLCJpIiwicGFyc2VDQyIsImZvcm1hdHRlZENDIiwic3Vic3RyIiwidmFsb3JDaWZyYXMiLCJjaWZyYXMiLCJMRVRSQVMiLCJpdGVtcyIsInBvc2ljaW9uIiwiaW5kZXhPZiIsImpvaW4iLCJtb2R1bG8iLCJkaXZpc29yIiwiQ1VFTlRBIiwibGFyZ28iLCJyZXN0byIsImRpdmlkZW5kbyIsImNlcm9zSXpxdWllcmRhIiwiY2NjIiwicGFpcyIsImZpbHRlciIsInN0cmluZ1RvRGF0ZUZvcm1hdCIsImZvcm1hdERhdGVzIiwic3BsaXQiLCJyZW1vdmVOdWxscyIsIm9iaiIsImlzQXJyYXkiLCJBcnJheSIsImsiLCJzcGxpY2UiLCIkcmVzb3VyY2UiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsImhlYWRlcnNHZXR0ZXIiLCJmcm9tSnNvbiIsInRyYW5zZm9ybVJlcXVlc3QiLCJ0b0pzb24iLCIkaHR0cCIsInBhcmFtcyIsImtleSIsIkNvc3RhbGVyb0FkZE1vZGlmeSIsImluaXRDb3N0YWxlcm8iLCJjb3N0YWxlcm8iLCJjb2ZyYWRlU2VsZWN0ZWQiLCJjb3N0YWxlcm9Gb3JtIiwiQ29zdGFsZXJvRGV0YWxsZSIsIm1vZGlmeUNvc3RhbGVybyIsIkNvc3RhbGVyb3MiLCJjb3N0YWxlcm9zIiwiRGlyZWN0aXZvQWRkTW9kaWZ5IiwiaW5pdERpcmVjdGl2byIsIm5ld0RpcmVjdGl2byIsImRpcmVjdGl2byIsImRpcmVjdGl2b0Zvcm0iLCJEaXJlY3Rpdm9EZXRhbGxlIiwibW9kaWZ5RGlyZWN0aXZvIiwiRGlyZWN0aXZvcyIsImRpcmVjdGl2b3MiLCJHYXN0b3NCYW5jYXJpb3MiLCJpbml0R2FzdG9CYW5jYXJpbyIsImdhc3RvQmFuY2FyaW8iLCJOdW1lcm9zTG90ZXJpYSIsImluaXROdW1lcm9zTG90ZXJpYSIsIm51bWVyb3NMb3RlcmlhIiwiUGFwZWxldGFTaXRpb0FkZE1vZGlmeSIsIm5ld3BhcGVsZXRhU2l0aW8iLCJwYXBlbGV0YVNpdGlvIiwiYW5pbyIsImdldEZ1bGxZZWFyIiwicGFwZWxldGFzIiwicGFwZWxldGFTaXRpb0Zvcm0iLCJQYXBlbGV0YXNTaXRpb3MiLCJwYXBlbGV0YXNTaXRpb3MiLCJTZWN0b3JBZGRNb2RpZnkiLCJpbml0U2VjdG9yIiwibmV3RW5jYXJnYWRvIiwib3JpZ2luU2VjdG9yIiwibmV3Q2FsbGUiLCJpbmRleENhbGxlIiwiZ3VhcmRhclNlY3RvciIsImd1YXJkYXJDYW1iaW9TZWN0b3IiLCJzZWN0b3JGb3JtIiwiU2VjdG9yZXMiLCJzZWN0b3JlcyIsIkxpc3RhQXNwaXJhbnRlcyIsImdvVG9Bc3BpcmFudGUiLCJzdG9wUHJvcGFnYXRpb24iLCJsaXN0YUFzcGlyYW50ZXMiLCJ0ZW1wbGF0ZVVybCIsInNjb3BlIiwiJHdhdGNoIiwibmV3VmFsIiwiYXNwaXJhbnRlc1Nob3J0IiwibWFwIiwiYXV4IiwiYXBlbGxpZG8xIiwiYXBlbGxpZG8yIiwiYmluZFRvQ29udHJvbGxlciIsIlJlbW92ZUFzcGlyYW50ZSIsIiRtZERpYWxvZyIsInJlbW92ZUFzcGlyYW50ZSIsInJlbW92ZURpYWxvZyIsImNvbmZpcm0iLCJ0aXRsZSIsImFyaWFMYWJlbCIsInRhcmdldEV2ZW50Iiwib2siLCJjYW5jZWwiLCJjbGlja091dHNpZGVUb0Nsb3NlIiwicmVtb3ZlRW5kQXNwaXJhbnRlIiwiJGRlbGV0ZSIsImN1cnJlbnQiLCJuYW1lIiwidHJhbnNpdGlvblRvIiwicmVsb2FkIiwiaW5oZXJpdCIsIm5vdGlmeSIsIkxpc3RhQXV0b3JpZGFkZXMiLCJnb1RvQXV0b3JpZGFkIiwibGlzdGFBdXRvcmlkYWRlcyIsIlJlbW92ZUF1dG9yaWRhZCIsInJlbW92ZUF1dG9yaWRhZCIsInJlbW92ZUVuZEF1dG9yaWRhZCIsIkxpc3RhQ29mcmFkZXMiLCJnZXROZXh0UGFnZSIsImJhamFzIiwiZ2V0TmV4dFBhZ2VCYWphcyIsImdldE5leHRQYWdlQWx0YXMiLCJwYXJhbWV0ZXJzIiwicGFnZSIsImJ1c2NhciIsImNvbmNhdCIsInNlYXJjaCIsInNlYXJjaEJhamFzIiwic2VhcmNoQWx0YXMiLCJnb1RvQ29mcmFkZSIsImNoYW5nZVRhYiIsImhhbmRsZXIiLCIkb24iLCJsaXN0YUNvZnJhZGVzIiwiUmVtb3ZlQ29mcmFkZSIsInJlbW92ZUNvZnJhZGUiLCJsb2NhbHMiLCJSZXN0b3JlQ29mcmFkZSIsInJlc3RvcmVDb2ZyYWRlIiwicmVzdGF1cmFyRGlhbG9nIiwicmVzdG9yZUVuZENvZnJhZGUiLCJiYWphIiwidXBkYXRlTnVtZXJvQ29mcmFkZSIsIkxpc3RhQ29zdGFsZXJvcyIsImdvVG9Db3N0YWxlcm8iLCJsaXN0YUNvc3RhbGVyb3MiLCJjb3N0YWxlcm9zU2hvcnQiLCJzaXRpbyIsIlJlbW92ZUNvc3RhbGVybyIsInJlbW92ZUNvc3RhbGVybyIsInJlbW92ZUVuZENvc3RhbGVybyIsInRhbGxhIiwiTGlzdGFEaXJlY3Rpdm9zIiwiZ29Ub0RpcmVjdGl2byIsImxpc3RhRGlyZWN0aXZvcyIsImRpcmVjdGl2b3NTaG9ydCIsIlJlbW92ZURpcmVjdGl2byIsInJlbW92ZURpcmVjdGl2byIsInJlbW92ZUVuZERpcmVjdGl2byIsIkxpc3RhUGFwZWxldGFzU2l0aW9zIiwiZ2V0QW5pbyIsInBhcGVsZXRhc1NpdGlvIiwibGlzdGFQYXBlbGV0YXNTaXRpb3MiLCJSZW1vdmVQYXBlbGV0YVNpdGlvIiwicmVtb3ZlUGFwZWxldGFTaXRpbyIsInJlbW92ZUVuZFBhcGVsZXRhU2l0aW8iLCJwYXBlbGV0YU9iaiIsInBhcGVsZXRhIiwicmVtb3ZlIiwiTGlzdGFTZWN0b3JlcyIsInNob3dDYWxsZXMiLCJnZXRFbGVtZW50QnlJZCIsInRvZ2dsZUNsYXNzIiwibW9kaWZ5U2VjdG9yIiwibW9kaWZ5Q2FsbGUiLCJhZGRDYWxsZSIsImxpc3RhU2VjdG9yZXMiLCJzZWN0b3Jlc1Nob3J0IiwiUmVtb3ZlU2VjdG9yIiwicmVtb3ZlU2VjdG9yIiwicmVtb3ZlRW5kU2VjdG9yIiwiUmVtb3ZlQ29mcmFkZVRtcGwiLCJjbG9zZURpYWxvZyIsInJlbW92ZUVuZENvZnJhZGUiLCJtb3Rpdm8iLCJtb3Rpdm9CYWphIiwiZmVjaGFCYWphIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQUNBLFlBRUFBLFNBQUFDLE9BQUEsT0FDQSxZQUNBLGFBQ0EsYUFDQSxvQkFDQSxrQkNSQSxXQUNBLFlBT0EsU0FBQUMsR0FBQUMsR0FDQUEsRUFBQUMsYUFBQUMsS0FBQSxxQkFHQSxRQUFBQyxHQUFBQyxHQUNBLEdBQUFDLEdBQUFSLFFBQUFTLFFBQUFDLFNBQUFDLGNBQUEsa0JBQ0EsUUFFQUMsUUFBQSxTQUFBQyxHQUlBLE1BRkEsU0FBQUEsRUFBQUMsUUFDQU4sRUFBQU8sSUFBQSxVQUFBLFNBQ0FGLEdBSUFHLGFBQUEsU0FBQUMsR0FFQSxNQUFBVixHQUFBVyxPQUFBRCxJQUlBRSxTQUFBLFNBQUFBLEdBR0EsTUFEQVgsR0FBQU8sSUFBQSxVQUFBLFFBQ0FJLEdBSUFDLGNBQUEsU0FBQUgsR0FHQSxNQURBVCxHQUFBTyxJQUFBLFVBQUEsUUFDQVIsRUFBQVcsT0FBQUQsS0FyQ0FqQixRQUNBQyxPQUFBLE9BQ0FvQixRQUFB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QkFDQTRHLEVBQUFrRCxjQUFBLEtBRUFsRCxFQUFBcUUsT0FBQThLLHFCQUFBLElBQUEvVCxLQUFBLFdBQ0FxRCxFQUFBa1QsY0FDQSxhQUFBelQsRUFBQTRPLFFBQUFDLEtBQ0E3TyxFQUFBOE8sYUFBQTlPLEVBQUE0TyxRQUFBLE1BQ0FHLFFBQUEsRUFDQUMsU0FBQSxFQUNBQyxRQUFBLElBSUFqUCxFQUFBTSxHQUFBLGdCQXhCQSxHQUFBQyxHQUFBQyxJQUVBRCxHQUFBa1QsWUFBQUEsRUFDQWxULEVBQUFtVCxpQkFBQUEsRUFSQS9hLFFBQ0FDLE9BQUEsT0FDQWtELFdBQUEsb0JBQUEwWCxHaEYwNEdFQSxFQUFrQnZaLFNBQVcsU0FBVSxZQUFhIiwiZmlsZSI6ImFsbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xyXG4gICAgJ3VpLnJvdXRlcicsXHJcbiAgICAnbmdSZXNvdXJjZScsXHJcbiAgICAnbmdNYXRlcmlhbCcsXHJcbiAgICAndWlHbWFwZ29vZ2xlLW1hcHMnLFxyXG4gICAgJ25nTWVzc2FnZXMnXHJcbiAgXSk7XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnbXlIdHRwSW50ZXJjZXB0b3InLCBteUh0dHBJbnRlcmNlcHRvcilcclxuICAgIC5jb25maWcobG9hZGluZ1NwaW5uZXIpO1xyXG5cclxuICBmdW5jdGlvbiBsb2FkaW5nU3Bpbm5lcigkaHR0cFByb3ZpZGVyKSB7XHJcbiAgICAkaHR0cFByb3ZpZGVyLmludGVyY2VwdG9ycy5wdXNoKCdteUh0dHBJbnRlcmNlcHRvcicpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbXlIdHRwSW50ZXJjZXB0b3IoJHEpIHtcclxuICAgIHZhciBsb2FkU2NyZWVuID0gYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tLWFwcC1sb2FkaW5nJykpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLy8gb3B0aW9uYWwgbWV0aG9kXHJcbiAgICAgICdyZXF1ZXN0JzogZnVuY3Rpb24oY29uZmlnKSB7XHJcbiAgICAgICAgLy8gZG8gc29tZXRoaW5nIG9uIHN1Y2Nlc3NcclxuICAgICAgICBpZiAoY29uZmlnLm1ldGhvZCA9PT0gJ1BPU1QnKVxyXG4gICAgICAgICAgbG9hZFNjcmVlbi5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgICAgICByZXR1cm4gY29uZmlnO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgLy8gb3B0aW9uYWwgbWV0aG9kXHJcbiAgICAgJ3JlcXVlc3RFcnJvcic6IGZ1bmN0aW9uKHJlamVjdGlvbikge1xyXG4gICAgICAgIC8vIGRvIHNvbWV0aGluZyBvbiBlcnJvclxyXG4gICAgICAgIHJldHVybiAkcS5yZWplY3QocmVqZWN0aW9uKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIC8vIG9wdGlvbmFsIG1ldGhvZFxyXG4gICAgICAncmVzcG9uc2UnOiBmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgIC8vIGRvIHNvbWV0aGluZyBvbiBzdWNjZXNzXHJcbiAgICAgICAgbG9hZFNjcmVlbi5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIC8vIG9wdGlvbmFsIG1ldGhvZFxyXG4gICAgICdyZXNwb25zZUVycm9yJzogZnVuY3Rpb24ocmVqZWN0aW9uKSB7XHJcbiAgICAgICAgLy8gZG8gc29tZXRoaW5nIG9uIGVycm9yXHJcbiAgICAgICAgbG9hZFNjcmVlbi5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIHJldHVybiAkcS5yZWplY3QocmVqZWN0aW9uKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpO1xyXG4iLG51bGwsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGdvb2dsZU1hcEFQSSk7XHJcblxyXG4gIGZ1bmN0aW9uIGdvb2dsZU1hcEFQSSh1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlcil7XHJcbiAgICB1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlci5jb25maWd1cmUoe1xyXG4gICAgICAgIGxpYnJhcmllczogJ3dlYXRoZXIsZ2VvbWV0cnksdmlzdWFsaXphdGlvbidcclxuICAgIH0pOyAgICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGRhdGVQaWNrZXJDb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBkYXRlUGlja2VyQ29uZmlnKCRtZERhdGVMb2NhbGVQcm92aWRlcikge1xyXG5cclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5tb250aHMgPSBbJ2VuZXJvJywgJ2ZlYnJlcm8nLCAnbWFyem8nLCAnYWJyaWwnLCAnbWF5bycsICdqdW5pbycsICdqdWxpbycsICdhZ29zdG8nLCAnc2VwdGllbWJyZScsICdvY3R1YnJlJywgJ25vdmllbWJyZScsICdkaWNpZW1icmUnXTtcclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5zaG9ydE1vbnRocyA9IFsnZW5lJywgJ2ZlYicsICdtYXInLCAnYWJyJywgJ21heScsICdqdW4nLCAnanVsJywgJ2FnbycsICdzZXAnLCAnb2N0JywgJ25vdicsICdkaWMnXTtcclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5kYXlzID0gWydsdW5lcycsICdtYXJ0ZXMnLCAnbWnDqXJjb2xlcycsICdqdWV2ZXMnLCAndmllcm5lcycsICdzw6FiYWRvJywgJ2RvbWluZ28nXTtcclxuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5zaG9ydERheXMgPSBbJ2x1bicsICdtYXInLCAnbWnDqScsICdqdWUnLCAndmllJywgJ3PDoWInLCAnZG9tJ107XHJcblxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLmZpcnN0RGF5T2ZXZWVrID0gMTtcclxuICAgIFxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLnBhcnNlRGF0ZSA9IGZ1bmN0aW9uKGRhdGVTdHJpbmcpIHtcclxuICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLmZvcm1hdERhdGUgPSBmdW5jdGlvbihkYXRlKSB7XHJcbiAgICAgIHJldHVybiBuZXcgRGF0ZShkYXRlKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgIH07XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7XHJcbiIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGNvbmZpZyk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XHJcblxyXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XHJcblxyXG4gICAgJHN0YXRlUHJvdmlkZXJcclxuICAgICAgLnN0YXRlKFwiaG9tZVwiLCB7XHJcbiAgICAgICAgdXJsOiBcIi9cIixcclxuICAgICAgICB0ZW1wbGF0ZTogJzxwIGNsYXNzPVwibGVhZFwiPldlbGNvbWUgdG8gdGhlIFVJLVJvdXRlciBEZW1vPC9wPicgK1xyXG4gICAgICAgICAgJzxwPlVzZSB0aGUgbWVudSBhYm92ZSB0byBuYXZpZ2F0ZS4gJyArXHJcbiAgICAgICAgICAnUGF5IGF0dGVudGlvbiB0byB0aGUgPGNvZGU+JHN0YXRlPC9jb2RlPiBhbmQgPGNvZGU+JHN0YXRlUGFyYW1zPC9jb2RlPiB2YWx1ZXMgYmVsb3cuPC9wPicgK1xyXG4gICAgICAgICAgJzxwPkNsaWNrIHRoZXNlIGxpbmtz4oCUPGEgaHJlZj1cIiMvYz9pZD0xXCI+QWxpY2U8L2E+IG9yICcgK1xyXG4gICAgICAgICAgJzxhIGhyZWY9XCIjL3VzZXIvNDJcIj5Cb2I8L2E+4oCUdG8gc2VlIGEgdXJsIHJlZGlyZWN0IGluIGFjdGlvbi48L3A+J1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKHRoZW1lQW5ndWxhck1hdGVyaWFsKTtcclxuXHJcbiAgZnVuY3Rpb24gdGhlbWVBbmd1bGFyTWF0ZXJpYWwoJG1kVGhlbWluZ1Byb3ZpZGVyKXtcclxuICAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoJ2FzcGlyYW50ZXMnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9hc3BpcmFudGVzXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdhc3BpcmFudGVzL2xpc3QvYXNwaXJhbnRlcy5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0FzcGlyYW50ZXMnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGFzcGlyYW50ZXNQcmVwU2VydmljZTogYXNwaXJhbnRlc1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuc3RhdGUoJ2FzcGlyYW50ZXNEZXRhbGxlJywge1xyXG4gICAgICAgIHVybDogXCIvYXNwaXJhbnRlcy86YXNwaXJhbnRlSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2FzcGlyYW50ZXMvZGV0YWlsL2FzcGlyYW50ZURldGFsbGUuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBc3BpcmFudGVEZXRhbGxlJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnZXRBc3BpcmFudGVQcmVwU2VydmljZTogZ2V0QXNwaXJhbnRlUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pLlxyXG4gICAgICBzdGF0ZSgnYXNwaXJhbnRlc0NhbWJpb3MnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9hc3BpcmFudGVzL2NhbWJpb3MvOmFzcGlyYW50ZUlkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdhc3BpcmFudGVzL2FkZE1vZGlmeS9hc3BpcmFudGVBZGRNb2RpZnkuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBc3BpcmFudGVBZGRNb2RpZnknLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldEFzcGlyYW50ZVByZXBTZXJ2aWNlOiBnZXRBc3BpcmFudGVQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhc3BpcmFudGVzUHJlcFNlcnZpY2UoYXNwaXJhbnRlc1NlcnZpY2UpIHtcclxuICAgIHJldHVybiBhc3BpcmFudGVzU2VydmljZS5hc3BpcmFudGVzUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG5cclxuICBcclxuICBmdW5jdGlvbiBnZXRBc3BpcmFudGVQcmVwU2VydmljZShhc3BpcmFudGVzU2VydmljZSwgJHN0YXRlUGFyYW1zKSB7XHJcbiAgICByZXR1cm4gKCRzdGF0ZVBhcmFtcy5hc3BpcmFudGVJZCkgPyBhc3BpcmFudGVzU2VydmljZS5hc3BpcmFudGVzUmVzdCgpLmdldCh7aWQ6ICRzdGF0ZVBhcmFtcy5hc3BpcmFudGVJZH0pIDogZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGNvbmZpZyk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlcikge1xyXG4gICAgJHN0YXRlUHJvdmlkZXJcclxuICAgICAgLnN0YXRlKCdhdXRvcmlkYWRlcycsIHtcclxuICAgICAgICB1cmw6IFwiL2F1dG9yaWRhZGVzXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdhdXRvcmlkYWRlcy9saXN0L2F1dG9yaWRhZGVzLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQXV0b3JpZGFkZXMnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGF1dG9yaWRhZGVzUHJlcFNlcnZpY2U6IGF1dG9yaWRhZGVzUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnYXV0b3JpZGFkZXNEZXRhbGxlJywge1xyXG4gICAgICAgIHVybDogXCIvYXV0b3JpZGFkZXMvOmF1dG9yaWRhZElkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdhdXRvcmlkYWRlcy9kZXRhaWwvYXV0b3JpZGFkRGV0YWxsZS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0F1dG9yaWRhZERldGFsbGUnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldEF1dG9yaWRhZFByZXBTZXJ2aWNlOiBnZXRBdXRvcmlkYWRQcmVwU2VydmljZSxcclxuICAgICAgICAgICAgZ2V0TWFwc1ByZXBTZXJ2aWNlOiBnZXRNYXBzUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pLlxyXG4gICAgICBzdGF0ZSgnYXV0b3JpZGFkZXNDYW1iaW9zJywge1xyXG4gICAgICAgIHVybDogXCIvYXV0b3JpZGFkZXMvY2FtYmlvcy86YXV0b3JpZGFkSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2F1dG9yaWRhZGVzL2FkZE1vZGlmeS9hdXRvcmlkYWRBZGRNb2RpZnkuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBdXRvcmlkYWRBZGRNb2RpZnknLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldEF1dG9yaWRhZFByZXBTZXJ2aWNlOiBnZXRBdXRvcmlkYWRQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhdXRvcmlkYWRlc1ByZXBTZXJ2aWNlKGF1dG9yaWRhZGVzU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGF1dG9yaWRhZGVzU2VydmljZS5hdXRvcmlkYWRlc1Jlc3QoKS5xdWVyeSgpO1xyXG4gIH1cclxuXHJcbiAgXHJcbiAgZnVuY3Rpb24gZ2V0QXV0b3JpZGFkUHJlcFNlcnZpY2UoYXV0b3JpZGFkZXNTZXJ2aWNlLCAkc3RhdGVQYXJhbXMpIHtcclxuICAgIHJldHVybiAoJHN0YXRlUGFyYW1zLmF1dG9yaWRhZElkKSA/IGF1dG9yaWRhZGVzU2VydmljZS5hdXRvcmlkYWRlc1Jlc3QoKS5nZXQoe2lkOiAkc3RhdGVQYXJhbXMuYXV0b3JpZGFkSWR9KSA6IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0TWFwc1ByZXBTZXJ2aWNlKHVpR21hcEdvb2dsZU1hcEFwaSwgZ2V0QXV0b3JpZGFkUHJlcFNlcnZpY2UsIG1hcGFzU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGdldEF1dG9yaWRhZFByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIFxyXG4gICAgICB2YXIgYWRkcmVzcyA9IGRhdGEuZGlyZWNjaW9uLmNhbGxlICAgICArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5kaXJlY2Npb24ubnVtZXJvICAgICsgJyAnICtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmRpcmVjY2lvbi5tdW5pY2lwaW8gKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEuZGlyZWNjaW9uLnByb3ZpbmNpYSArICcgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5kaXJlY2Npb24uY3A7XHJcblxyXG4gICAgICByZXR1cm4gbWFwYXNTZXJ2aWNlLmdlb0NvZGluZ0FQSShhZGRyZXNzKS5cclxuICAgICAgICB0aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnJlc3VsdHMubGVuZ3RoKXtcclxuICAgICAgICAgICAgdmFyIGNvb3JkaW5hdGVzID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uO1xyXG4gICAgICAgICAgICByZXR1cm4gdWlHbWFwR29vZ2xlTWFwQXBpLnRoZW4oZnVuY3Rpb24obWFwcykge1xyXG4gICAgICAgICAgICAgIHJldHVybiAge2Nvb3JkOiAgeyBsYXRpdHVkZTogY29vcmRpbmF0ZXMubGF0LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25naXR1ZGU6IGNvb3JkaW5hdGVzLmxuZyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgIG1hcmtlcjogeyBsYXRpdHVkZTogY29vcmRpbmF0ZXMubGF0LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25naXR1ZGU6IGNvb3JkaW5hdGVzLmxuZyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgem9vbTogMTcgfTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoJ2NvZnJhZGVzJywge1xyXG4gICAgICAgIHVybDogXCIvY29mcmFkZXNcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2NvZnJhZGVzL2xpc3QvY29mcmFkZXMuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb2ZyYWRlcycsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgY29mcmFkZXNQcmVwU2VydmljZTogY29mcmFkZXNQcmVwU2VydmljZSxcclxuICAgICAgICAgICAgY29mcmFkZXNCYWphc1ByZXBTZXJ2aWNlOiBjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnY29mcmFkZXNEZXRhbGxlJywge1xyXG4gICAgICAgIHVybDogXCIvY29mcmFkZXMvOmNvZnJhZGVJZFwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnY29mcmFkZXMvZGV0YWlsL2NvZnJhZGVEZXRhbGxlLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29mcmFkZURldGFsbGUnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldENvZnJhZGVQcmVwU2VydmljZTogZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLFxyXG4gICAgICAgICAgICBnZXRNYXBzUHJlcFNlcnZpY2U6IGdldE1hcHNQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSkuXHJcbiAgICAgIHN0YXRlKCdjb2ZyYWRlc0NhbWJpb3MnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9jb2ZyYWRlcy9jYW1iaW9zLzpjb2ZyYWRlSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2NvZnJhZGVzL2FkZE1vZGlmeS9jb2ZyYWRlQWRkTW9kaWZ5Lmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29mcmFkZUFkZE1vZGlmeScsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlOiBnZXRDb2ZyYWRlUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY29mcmFkZXNQcmVwU2VydmljZShjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHJldHVybiBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNvZnJhZGVzQmFqYXNQcmVwU2VydmljZShjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHJldHVybiBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNCYWphc1Jlc3QoKS5xdWVyeSgpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0Q29mcmFkZVByZXBTZXJ2aWNlKGNvZnJhZGVzU2VydmljZSwgJHN0YXRlUGFyYW1zKSB7XHJcbiAgICByZXR1cm4gKCRzdGF0ZVBhcmFtcy5jb2ZyYWRlSWQpID8gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLmdldCh7aWQ6ICRzdGF0ZVBhcmFtcy5jb2ZyYWRlSWR9KSA6IGZhbHNlO1xyXG4gIH1cclxuICBcclxuICBmdW5jdGlvbiBnZXRNYXBzUHJlcFNlcnZpY2UodWlHbWFwR29vZ2xlTWFwQXBpLCBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UsIG1hcGFzU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGdldENvZnJhZGVQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBcclxuICAgICAgdmFyIGFkZHJlc3MgPSBkYXRhLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY2FsbGUgICAgICsgJyAnICtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ubnVtZXJvICAgICsgJyAnICtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ubXVuaWNpcGlvICsgJyAnICtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ucHJvdmluY2lhICsgJyAnICtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY3A7XHJcblxyXG4gICAgICByZXR1cm4gbWFwYXNTZXJ2aWNlLmdlb0NvZGluZ0FQSShhZGRyZXNzKS5cclxuICAgICAgICB0aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnJlc3VsdHMubGVuZ3RoKXtcclxuICAgICAgICAgICAgdmFyIGNvb3JkaW5hdGVzID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uO1xyXG4gICAgICAgICAgICByZXR1cm4gdWlHbWFwR29vZ2xlTWFwQXBpLnRoZW4oZnVuY3Rpb24obWFwcykge1xyXG4gICAgICAgICAgICAgIHJldHVybiAge2Nvb3JkOiAgeyBsYXRpdHVkZTogY29vcmRpbmF0ZXMubGF0LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25naXR1ZGU6IGNvb3JkaW5hdGVzLmxuZyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgIG1hcmtlcjogeyBsYXRpdHVkZTogY29vcmRpbmF0ZXMubGF0LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25naXR1ZGU6IGNvb3JkaW5hdGVzLmxuZyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgem9vbTogMTcgfTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29uZmlnKGNvbmZpZyk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlcikge1xyXG4gICAgJHN0YXRlUHJvdmlkZXJcclxuICAgICAgLnN0YXRlKCdjb3N0YWxlcm9zJywge1xyXG4gICAgICAgIHVybDogXCIvY29zdGFsZXJvc1wiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnY29zdGFsZXJvcy9saXN0L2Nvc3RhbGVyb3MuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb3N0YWxlcm9zJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBjb3N0YWxlcm9zUHJlcFNlcnZpY2U6IGNvc3RhbGVyb3NQcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLnN0YXRlKCdjb3N0YWxlcm9zRGV0YWxsZScsIHtcclxuICAgICAgICB1cmw6IFwiL2Nvc3RhbGVyb3MvOmNvc3RhbGVyb0lkXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdjb3N0YWxlcm9zL2RldGFpbC9jb3N0YWxlcm9EZXRhbGxlLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29zdGFsZXJvRGV0YWxsZScsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2U6IGdldENvc3RhbGVyb1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KS5cclxuICAgICAgc3RhdGUoJ2Nvc3RhbGVyb3NDYW1iaW9zJywge1xyXG4gICAgICAgIHVybDogXCIvY29zdGFsZXJvcy9jYW1iaW9zLzpjb3N0YWxlcm9JZFwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnY29zdGFsZXJvcy9hZGRNb2RpZnkvY29zdGFsZXJvQWRkTW9kaWZ5Lmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29zdGFsZXJvQWRkTW9kaWZ5JyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnZXRDb3N0YWxlcm9QcmVwU2VydmljZTogZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY29zdGFsZXJvc1ByZXBTZXJ2aWNlKGNvc3RhbGVyb3NTZXJ2aWNlKSB7XHJcbiAgICByZXR1cm4gY29zdGFsZXJvc1NlcnZpY2UuY29zdGFsZXJvc1Jlc3QoKS5xdWVyeSgpO1xyXG4gIH1cclxuXHJcbiAgXHJcbiAgZnVuY3Rpb24gZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2UoY29zdGFsZXJvc1NlcnZpY2UsICRzdGF0ZVBhcmFtcykge1xyXG4gICAgcmV0dXJuICgkc3RhdGVQYXJhbXMuY29zdGFsZXJvSWQpID8gY29zdGFsZXJvc1NlcnZpY2UuY29zdGFsZXJvc1Jlc3QoKS5nZXQoe2lkOiAkc3RhdGVQYXJhbXMuY29zdGFsZXJvSWR9KSA6IGZhbHNlO1xyXG4gIH1cclxuICBcclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbmZpZyhjb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgIC5zdGF0ZSgnZGlyZWN0aXZvcycsIHtcclxuICAgICAgICB1cmw6IFwiL2RpcmVjdGl2b3NcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2RpcmVjdGl2b3MvbGlzdC9kaXJlY3Rpdm9zLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnRGlyZWN0aXZvcycsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZGlyZWN0aXZvc1ByZXBTZXJ2aWNlOiBkaXJlY3Rpdm9zUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnZGlyZWN0aXZvc0RldGFsbGUnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9kaXJlY3Rpdm9zLzpkaXJlY3Rpdm9JZFwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnZGlyZWN0aXZvcy9kZXRhaWwvZGlyZWN0aXZvRGV0YWxsZS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0RpcmVjdGl2b0RldGFsbGUnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIGdldERpcmVjdGl2b1ByZXBTZXJ2aWNlOiBnZXREaXJlY3Rpdm9QcmVwU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgfSkuXHJcbiAgICAgIHN0YXRlKCdkaXJlY3Rpdm9zQ2FtYmlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL2RpcmVjdGl2b3MvY2FtYmlvcy86ZGlyZWN0aXZvSWRcIixcclxuICAgICAgICB0ZW1wbGF0ZVByb3ZpZGVyOiBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7ICBcclxuICAgICAgICAgIHJldHVybiAkdGVtcGxhdGVDYWNoZS5nZXQoJ2RpcmVjdGl2b3MvYWRkTW9kaWZ5L2RpcmVjdGl2b0FkZE1vZGlmeS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0RpcmVjdGl2b0FkZE1vZGlmeScsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZ2V0RGlyZWN0aXZvUHJlcFNlcnZpY2U6IGdldERpcmVjdGl2b1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGRpcmVjdGl2b3NQcmVwU2VydmljZShkaXJlY3Rpdm9zU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGRpcmVjdGl2b3NTZXJ2aWNlLmRpcmVjdGl2b3NSZXN0KCkucXVlcnkoKTtcclxuICB9XHJcblxyXG4gIFxyXG4gIGZ1bmN0aW9uIGdldERpcmVjdGl2b1ByZXBTZXJ2aWNlKGRpcmVjdGl2b3NTZXJ2aWNlLCAkc3RhdGVQYXJhbXMpIHtcclxuICAgIHJldHVybiAoJHN0YXRlUGFyYW1zLmRpcmVjdGl2b0lkKSA/IGRpcmVjdGl2b3NTZXJ2aWNlLmRpcmVjdGl2b3NSZXN0KCkuZ2V0KHtpZDogJHN0YXRlUGFyYW1zLmRpcmVjdGl2b0lkfSkgOiBmYWxzZTtcclxuICB9XHJcbiAgXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoJ2dhc3Rvc0JhbmNhcmlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL2dhc3Rvc0JhbmNhcmlvc1wiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnZ2FzdG9zQmFuY2FyaW9zL21vZGlmeS9nYXN0b0JhbmNhcmlvTW9kaWZ5Lmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnR2FzdG9zQmFuY2FyaW9zJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBnYXN0b3NCYW5jYXJpb3NQcmVwU2VydmljZTogZ2FzdG9zQmFuY2FyaW9zUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2FzdG9zQmFuY2FyaW9zUHJlcFNlcnZpY2UoZ2FzdG9zQmFuY2FyaW9zU2VydmljZSkge1xyXG4gICAgcmV0dXJuIGdhc3Rvc0JhbmNhcmlvc1NlcnZpY2UuZ2FzdG9zQmFuY2FyaW9zUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG4gIFxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdBcHBDdHJsJywgQXBwQ3RybCk7XHJcblxyXG5cclxuICBmdW5jdGlvbiBBcHBDdHJsKCRtZFNpZGVuYXYsICRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIHZtLnRvZ2dsZVNpZGVuYXYgPSB0b2dnbGVTaWRlbmF2O1xyXG4gICAgdm0ubmF2aWdhdGVUbyAgICA9IG5hdmlnYXRlVG87XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHRvZ2dsZVNpZGVuYXYobWVudUlkKSB7XHJcbiAgICAgICRtZFNpZGVuYXYobWVudUlkKS50b2dnbGUoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBuYXZpZ2F0ZVRvKHRvLCBtZW51SWQpe1xyXG4gICAgICB0b2dnbGVTaWRlbmF2KG1lbnVJZCk7XHJcbiAgICAgICRzdGF0ZS5nbyh0byk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbmZpZyhjb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgIC5zdGF0ZSgnbnVtZXJvc0xvdGVyaWEnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9udW1lcm9zTG90ZXJpYVwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnbnVtZXJvc0xvdGVyaWEvbW9kaWZ5L251bWVyb3NMb3RlcmlhTW9kaWZ5Lmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnTnVtZXJvc0xvdGVyaWEnLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgIG51bWVyb3NMb3RlcmlhUHJlcFNlcnZpY2U6IG51bWVyb3NMb3RlcmlhUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbnVtZXJvc0xvdGVyaWFQcmVwU2VydmljZShudW1lcm9zTG90ZXJpYVNlcnZpY2UpIHtcclxuICAgIHJldHVybiBudW1lcm9zTG90ZXJpYVNlcnZpY2UubnVtZXJvc0xvdGVyaWFSZXN0KCkucXVlcnkoKTtcclxuICB9XHJcbiAgXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb25maWcoY29uZmlnKTtcclxuXHJcbiAgZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAuc3RhdGUoJ3BhcGVsZXRhc1NpdGlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL3BhcGVsZXRhc1NpdGlvc1wiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgncGFwZWxldGFzU2l0aW9zL2xpc3QvcGFwZWxldGFzU2l0aW9zLmh0bWwnKTsgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAnUGFwZWxldGFzU2l0aW9zJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBwYXBlbGV0YXNTaXRpb3NQcmVwU2VydmljZTogcGFwZWxldGFzU2l0aW9zUHJlcFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIH0pLlxyXG4gICAgICBzdGF0ZSgncGFwZWxldGFzU2l0aW9zQ2FtYmlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL3BhcGVsZXRhc1NpdGlvcy9jYW1iaW9zXCIsXHJcbiAgICAgICAgdGVtcGxhdGVQcm92aWRlcjogZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyAgXHJcbiAgICAgICAgICByZXR1cm4gJHRlbXBsYXRlQ2FjaGUuZ2V0KCdwYXBlbGV0YXNTaXRpb3MvYWRkTW9kaWZ5L3BhcGVsZXRhU2l0aW9BZGRNb2RpZnkuaHRtbCcpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQYXBlbGV0YVNpdGlvQWRkTW9kaWZ5JyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcGFwZWxldGFzU2l0aW9zUHJlcFNlcnZpY2UocGFwZWxldGFzU2l0aW9zU2VydmljZSkge1xyXG4gICAgcmV0dXJuIHBhcGVsZXRhc1NpdGlvc1NlcnZpY2UucGFwZWxldGFzU2l0aW9zUmVzdCgpLnF1ZXJ5KHthbmlvczogdHJ1ZX0pO1xyXG4gIH1cclxuICBcclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbmZpZyhjb25maWcpO1xyXG5cclxuICBmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgIC5zdGF0ZSgnc2VjdG9yZXMnLCB7XHJcbiAgICAgICAgdXJsOiBcIi9zZWN0b3Jlc1wiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnc2VjdG9yZXMvbGlzdC9zZWN0b3Jlcy5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ1NlY3RvcmVzJyxcclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBzZWN0b3Jlc1ByZXBTZXJ2aWNlOiBzZWN0b3Jlc1ByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KS5cclxuICAgICAgc3RhdGUoJ3NlY3RvcmVzQ2FtYmlvcycsIHtcclxuICAgICAgICB1cmw6IFwiL3NlY3RvcmVzL2NhbWJpb3MvOnNlY3RvcklkLzpjYWxsZVwiLFxyXG4gICAgICAgIHRlbXBsYXRlUHJvdmlkZXI6IGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXsgIFxyXG4gICAgICAgICAgcmV0dXJuICR0ZW1wbGF0ZUNhY2hlLmdldCgnc2VjdG9yZXMvYWRkTW9kaWZ5L3NlY3RvckFkZE1vZGlmeS5odG1sJyk7IFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogJ1NlY3RvckFkZE1vZGlmeScsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHJlc29sdmU6IHtcclxuICAgICAgICAgICAgZ2V0U2VjdG9yUHJlcFNlcnZpY2U6IGdldFNlY3RvclByZXBTZXJ2aWNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNlY3RvcmVzUHJlcFNlcnZpY2Uoc2VjdG9yZXNTZXJ2aWNlKSB7XHJcbiAgICByZXR1cm4gc2VjdG9yZXNTZXJ2aWNlLnNlY3RvcmVzUmVzdCgpLnF1ZXJ5KCk7XHJcbiAgfVxyXG4gIFxyXG4gIGZ1bmN0aW9uIGdldFNlY3RvclByZXBTZXJ2aWNlKHNlY3RvcmVzU2VydmljZSwgJHN0YXRlUGFyYW1zKSB7XHJcbiAgICByZXR1cm4gKCRzdGF0ZVBhcmFtcy5zZWN0b3JJZCkgPyBzZWN0b3Jlc1NlcnZpY2Uuc2VjdG9yZXNSZXN0KCkuZ2V0KHtpZDogJHN0YXRlUGFyYW1zLnNlY3RvcklkfSkgOiBmYWxzZTtcclxuICB9XHJcbiAgXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0FzcGlyYW50ZUFkZE1vZGlmeScsIEFzcGlyYW50ZUFkZE1vZGlmeSk7XHJcblxyXG4gIGZ1bmN0aW9uIEFzcGlyYW50ZUFkZE1vZGlmeSgkc2NvcGUsICRkb2N1bWVudCwgJG1kVG9hc3QsICRzdGF0ZSwgZ2V0QXNwaXJhbnRlUHJlcFNlcnZpY2UsIGFzcGlyYW50ZXNTZXJ2aWNlLCBjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLm5ld0NvZnJhZGUgPSBmYWxzZTtcclxuXHJcbiAgICB2bS5iYWNrU3RhdGUgICAgICAgICAgPSBiYWNrU3RhdGU7XHJcbiAgICB2bS5xdWVyeVNlYXJjaCAgICAgICAgPSBxdWVyeVNlYXJjaDtcclxuICAgIHZtLnNlbGVjdGVkSXRlbUNoYW5nZSA9IHNlbGVjdGVkSXRlbUNoYW5nZTtcclxuICAgIHZtLmd1YXJkYXIgICAgICAgICAgICA9IGd1YXJkYXI7XHJcblxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgaWYgKGdldEFzcGlyYW50ZVByZXBTZXJ2aWNlKXtcclxuICAgICAgICBnZXRBc3BpcmFudGVQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGluaXRBc3BpcmFudGUpO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2V7XHJcbiAgICAgICAgbmV3QXNwaXJhbnRlKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdEFzcGlyYW50ZShkYXRhKSB7XHJcbiAgICAgIHZtLmFzcGlyYW50ZSA9IGRhdGE7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG5ld0FzcGlyYW50ZSgpIHtcclxuICAgICAgdm0ubmV3Q29mcmFkZSA9IHRydWU7XHJcbiAgICAgIHZtLmFzcGlyYW50ZSA9IHtjb2ZyYWRlOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgZmVjaGE6IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCl9O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGJhY2tTdGF0ZSgpIHtcclxuICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHF1ZXJ5U2VhcmNoKHF1ZXJ5KSB7XHJcbiAgICAgIHZhciBmaWx0cm8gPSB7fTtcclxuICAgICAgaWYgKGlzTmFOKHF1ZXJ5KSlcclxuICAgICAgICBmaWx0cm8ubm9tYnJlID0gcXVlcnk7XHJcbiAgICAgIGVsc2UgaWYoIWlzTmFOKHF1ZXJ5KSlcclxuICAgICAgICBmaWx0cm8ubnVtZXJvT3JkZW4gPSBxdWVyeTtcclxuXHJcbiAgICAgIHJldHVybiBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkoZmlsdHJvKS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWxlY3RlZEl0ZW1DaGFuZ2UoaXRlbSkge1xyXG4gICAgICB2bS5hc3BpcmFudGUuY29mcmFkZSA9ICBpdGVtID8gaXRlbS5pZCA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhcihpc1ZhbGlkKSB7XHJcbiAgICAgIGlmKGlzVmFsaWQpe1xyXG4gICAgICAgIGlmICghdm0uYXNwaXJhbnRlLmNvZnJhZGUpe1xyXG4gICAgICAgICAgJHNjb3BlLmFzcGlyYW50ZUZvcm0uY29mcmFkZS4kZXJyb3IucmVxdWlyZWQgPSB0cnVlO1xyXG4gICAgICAgICAgc2hvd0FjdGlvblRvYXN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICB2bS5hc3BpcmFudGUuY29mcmFkZSA9IHZtLmFzcGlyYW50ZS5jb2ZyYWRlLmlkID8gdm0uYXNwaXJhbnRlLmNvZnJhZGUuaWQgOiB2bS5hc3BpcmFudGUuY29mcmFkZTtcclxuICAgICAgICAgIGFzcGlyYW50ZXNTZXJ2aWNlLmFzcGlyYW50ZXNSZXN0KCkuc2F2ZSh2bS5hc3BpcmFudGUsIGd1YXJkYXJTdWNjZXNzLCBndWFyZGFyRXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBlbHNlXHJcbiAgICAgICAgc2hvd0FjdGlvblRvYXN0KCk7XHJcbiAgICB9XHJcbiAgICAgIFxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhclN1Y2Nlc3MocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0d1YXJkYWRvIGNvbiDDqXhpdG8hIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICAgICRzdGF0ZS5nbygnYXNwaXJhbnRlcycpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJFcnJvcihyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXJyb3IgYWwgZ3VhcmRhciEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBzaG93QWN0aW9uVG9hc3QoKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFeGlzdGVuIGVycm9yZXMgZW4gZWwgZm9ybXVsYXJpbycpXHJcbiAgICAgICAgICAuYWN0aW9uKCdPSycpXHJcbiAgICAgICAgICAuaGlnaGxpZ2h0QWN0aW9uKGZhbHNlKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQXNwaXJhbnRlRGV0YWxsZScsIEFzcGlyYW50ZURldGFsbGUpO1xyXG5cclxuICBmdW5jdGlvbiBBc3BpcmFudGVEZXRhbGxlKCRzdGF0ZSwgZ2V0QXNwaXJhbnRlUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ubW9kaWZ5QXNwaXJhbnRlID0gbW9kaWZ5QXNwaXJhbnRlO1xyXG4gICAgXHJcbiAgICBhY3RpdmF0ZSgpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICByZXR1cm4gZ2V0QXNwaXJhbnRlUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5hc3BpcmFudGUgPSBkYXRhO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2RpZnlBc3BpcmFudGUoaWQsIGV2ZW50KXtcclxuICAgICAgJHN0YXRlLmdvKCdhc3BpcmFudGVzQ2FtYmlvcycsIHthc3BpcmFudGVJZDogaWR9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdBc3BpcmFudGVzJywgQXNwaXJhbnRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIEFzcGlyYW50ZXMoYXNwaXJhbnRlc1ByZXBTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5hc3BpcmFudGVzID0gbnVsbDtcclxuICAgIGFjdGl2YXRlKCk7XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICByZXR1cm4gYXNwaXJhbnRlc1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0uYXNwaXJhbnRlcyA9IGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdBdXRvcmlkYWRBZGRNb2RpZnknLCBBdXRvcmlkYWRBZGRNb2RpZnkpO1xyXG5cclxuICBmdW5jdGlvbiBBdXRvcmlkYWRBZGRNb2RpZnkoJHNjb3BlLCAkZG9jdW1lbnQsICRtZFRvYXN0LCAkc3RhdGUsIGdldEF1dG9yaWRhZFByZXBTZXJ2aWNlLCBhdXRvcmlkYWRlc1NlcnZpY2UsIGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubmV3Q29mcmFkZSA9IGZhbHNlO1xyXG5cclxuICAgIHZtLmJhY2tTdGF0ZSAgICAgICAgICA9IGJhY2tTdGF0ZTtcclxuICAgIHZtLnF1ZXJ5U2VhcmNoICAgICAgICA9IHF1ZXJ5U2VhcmNoO1xyXG4gICAgdm0uc2VsZWN0ZWRJdGVtQ2hhbmdlID0gc2VsZWN0ZWRJdGVtQ2hhbmdlO1xyXG4gICAgdm0uZ3VhcmRhciAgICAgICAgICAgID0gZ3VhcmRhcjtcclxuXHJcbiAgICBhY3RpdmF0ZSgpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICBpZiAoZ2V0QXV0b3JpZGFkUHJlcFNlcnZpY2Upe1xyXG4gICAgICAgIGdldEF1dG9yaWRhZFByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oaW5pdEF1dG9yaWRhZCk7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICBuZXdBdXRvcmlkYWQoKTtcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbml0QXV0b3JpZGFkKGRhdGEpIHtcclxuICAgICAgdm0uYXV0b3JpZGFkID0gZGF0YTtcclxuICAgICAgdm0uY2FsbGVTZWxlY3RlZCA9IHtjYWxsZTogdm0uYXV0b3JpZGFkLmRpcmVjY2lvbi5jYWxsZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjcDogdm0uYXV0b3JpZGFkLmRpcmVjY2lvbi5jcCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm92aW5jaWE6IHZtLmF1dG9yaWRhZC5kaXJlY2Npb24ucHJvdmluY2lhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG11bmljaXBpbzogdm0uYXV0b3JpZGFkLmRpcmVjY2lvbi5tdW5pY2lwaW99O1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBuZXdBdXRvcmlkYWQoKSB7XHJcbiAgICAgIHZtLm5ld0NvZnJhZGUgPSB0cnVlO1xyXG4gICAgICB2bS5hdXRvcmlkYWQgPSB7ZGlyZWNjaW9uOiB7fX07XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYmFja1N0YXRlKCkge1xyXG4gICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcXVlcnlTZWFyY2gocXVlcnkpIHtcclxuICAgICAgcmV0dXJuIGNvZnJhZGVzU2VydmljZS5nZXRDYWxsZXMocXVlcnkpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe3JldHVybiByZXNwb25zZS5kYXRhO30pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNlbGVjdGVkSXRlbUNoYW5nZShpdGVtKSB7XHJcbiAgICAgIGlmIChpdGVtKXtcclxuICAgICAgICB2bS5hdXRvcmlkYWQuZGlyZWNjaW9uLmNhbGxlID0gaXRlbS5jYWxsZTtcclxuICAgICAgICB2bS5hdXRvcmlkYWQuZGlyZWNjaW9uLm11bmljaXBpbyA9IGl0ZW0ubXVuaWNpcGlvO1xyXG4gICAgICAgIHZtLmF1dG9yaWRhZC5kaXJlY2Npb24uY3AgPSBpdGVtLmNwO1xyXG4gICAgICAgIHZtLmF1dG9yaWRhZC5kaXJlY2Npb24ucHJvdmluY2lhID0gaXRlbS5wcm92aW5jaWE7XHJcbiAgICAgIH1lbHNle1xyXG4gICAgICAgIHZtLmF1dG9yaWRhZC5kaXJlY2Npb24uY2FsbGUgPSBudWxsO1xyXG4gICAgICAgIHZtLmF1dG9yaWRhZC5kaXJlY2Npb24ubXVuaWNpcGlvID0gbnVsbDtcclxuICAgICAgICB2bS5hdXRvcmlkYWQuZGlyZWNjaW9uLmNwID0gbnVsbDtcclxuICAgICAgICB2bS5hdXRvcmlkYWQuZGlyZWNjaW9uLnByb3ZpbmNpYSA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyKGlzVmFsaWQpIHtcclxuICAgICAgaWYoaXNWYWxpZCl7XHJcbiAgICAgICAgdm0uYXV0b3JpZGFkLmRpcmVjY2lvbi5jYWxsZSA9IHZtLmF1dG9yaWRhZC5kaXJlY2Npb24uY2FsbGUgPyB2bS5hdXRvcmlkYWQuZGlyZWNjaW9uLmNhbGxlIDogdm0uc2VhcmNoVGV4dDtcclxuICAgICAgICBhdXRvcmlkYWRlc1NlcnZpY2UuYXV0b3JpZGFkZXNSZXN0KCkuc2F2ZSh2bS5hdXRvcmlkYWQsIGd1YXJkYXJTdWNjZXNzLCBndWFyZGFyRXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBzaG93QWN0aW9uVG9hc3QoKTtcclxuICAgIH1cclxuICAgICAgXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyU3VjY2VzcyhyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnR3VhcmRhZG8gY29uIMOpeGl0byEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgICAgJHN0YXRlLmdvKCdhdXRvcmlkYWRlcycpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJFcnJvcihyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXJyb3IgYWwgZ3VhcmRhciEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBzaG93QWN0aW9uVG9hc3QoKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFeGlzdGVuIGVycm9yZXMgZW4gZWwgZm9ybXVsYXJpbycpXHJcbiAgICAgICAgICAuYWN0aW9uKCdPSycpXHJcbiAgICAgICAgICAuaGlnaGxpZ2h0QWN0aW9uKGZhbHNlKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQXV0b3JpZGFkRGV0YWxsZScsIEF1dG9yaWRhZERldGFsbGUpO1xyXG5cclxuICBmdW5jdGlvbiBBdXRvcmlkYWREZXRhbGxlKCRzdGF0ZSwgZ2V0QXV0b3JpZGFkUHJlcFNlcnZpY2UsIGdldE1hcHNQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5tb2RpZnlBdXRvcmlkYWQgPSBtb2RpZnlBdXRvcmlkYWQ7XHJcbiAgICBcclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIHJldHVybiBnZXRBdXRvcmlkYWRQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmF1dG9yaWRhZCA9IGRhdGE7XHJcbiAgICAgICAgdm0ubWFwcyA9IGdldE1hcHNQcmVwU2VydmljZTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5QXV0b3JpZGFkKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnYXV0b3JpZGFkZXNDYW1iaW9zJywge2F1dG9yaWRhZElkOiBpZH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0F1dG9yaWRhZGVzJywgQXV0b3JpZGFkZXMpO1xyXG5cclxuICBmdW5jdGlvbiBBdXRvcmlkYWRlcyhhdXRvcmlkYWRlc1ByZXBTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5hdXRvcmlkYWRlcyA9IG51bGw7XHJcbiAgICBhY3RpdmF0ZSgpO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGF1dG9yaWRhZGVzUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5hdXRvcmlkYWRlcyA9IGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdDb2ZyYWRlQWRkTW9kaWZ5JywgQ29mcmFkZUFkZE1vZGlmeSk7XHJcblxyXG4gIGZ1bmN0aW9uIENvZnJhZGVBZGRNb2RpZnkoJGZpbHRlciwgJGRvY3VtZW50LCAkbWRUb2FzdCwgJHN0YXRlLCBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UsIGNvZnJhZGVzU2VydmljZSwgc2VjdG9yZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5udWV2YUNhbGxlID0gdHJ1ZTtcclxuICAgIHZtLmNvZnJhZGUgPSB7ZGF0b3NGaW5hbmNpZXJvczoge2N1ZW50YToge30sIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV1ZGE6IFtdfSxcclxuICAgICAgICAgICAgICAgICAgZGF0b3NQZXJzb25hbGVzOiAge2RpcmVjY2lvbjoge30sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXhvOiBcIkhvbWJyZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVjaGFJbnNjcmlwY2lvbjogbmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlY2hhTmFjaW1pZW50bzogbmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKX1cclxuICAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgIHZtLmJhY2tTdGF0ZSAgICAgICAgICA9IGJhY2tTdGF0ZTtcclxuICAgIHZtLnF1ZXJ5U2VhcmNoICAgICAgICA9IHF1ZXJ5U2VhcmNoO1xyXG4gICAgdm0uc2VsZWN0ZWRJdGVtQ2hhbmdlID0gc2VsZWN0ZWRJdGVtQ2hhbmdlO1xyXG4gICAgdm0uY2FsY3VsYXJDQyAgICAgICAgID0gY2FsY3VsYXJDQztcclxuICAgIHZtLmNhbGN1bGFySWJhbiAgICAgICA9IGNhbGN1bGFySWJhbjtcclxuICAgIHZtLmd1YXJkYXIgICAgICAgICAgICA9IGd1YXJkYXI7XHJcblxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgaWYgKGdldENvZnJhZGVQcmVwU2VydmljZSl7XHJcbiAgICAgICAgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oaW5pdENvZnJhZGUpO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2V7XHJcbiAgICAgICAgY29mcmFkZXNTZXJ2aWNlLmdldFJlZ2lzdHJvcygpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm0uY29mcmFkZS5udW1lcm9PcmRlbiA9IHJlc3BvbnNlLmRhdGEubnVtZXJvT3JkZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5jb2ZyYWRlLm51bWVyb0NvZnJhZGUgPSByZXNwb25zZS5kYXRhLm51bWVyb0NvZnJhZGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdENvZnJhZGUoZGF0YSkge1xyXG4gICAgICB2bS5jb2ZyYWRlID0gZGF0YTtcclxuICAgICAgdm0uY2FsbGVTZWxlY3RlZCA9IHtjYWxsZTogdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNhbGxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNwOiB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY3AsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdmluY2lhOiB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ucHJvdmluY2lhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG11bmljaXBpbzogdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLm11bmljaXBpb307XHJcblxyXG4gICAgICB2bS5mZWNoYU5hY2ltaWVudG8gPSB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5mZWNoYU5hY2ltaWVudG87XHJcbiAgICAgIHZtLmZlY2hhSW5zY3JpcGNpb24gPSB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5mZWNoYUluc2NyaXBjaW9uO1xyXG4gICAgICB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MgPSB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MgfHwge2N1ZW50YToge30sIGRldWRhOiBbXX07XHJcbiAgICAgIHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEgPSB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhIHx8IHt9O1xyXG4gICAgICB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuZGV1ZGEgPSB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuZGV1ZGEgfHwgW107XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGJhY2tTdGF0ZSgpIHtcclxuICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHF1ZXJ5U2VhcmNoKHF1ZXJ5KSB7XHJcbiAgICAgIHJldHVybiBjb2ZyYWRlc1NlcnZpY2UuZ2V0Q2FsbGVzKHF1ZXJ5KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtyZXR1cm4gcmVzcG9uc2UuZGF0YTt9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWxlY3RlZEl0ZW1DaGFuZ2UoaXRlbSkge1xyXG4gICAgICBpZiAoaXRlbSl7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNhbGxlID0gaXRlbS5jYWxsZTtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ubXVuaWNpcGlvID0gaXRlbS5tdW5pY2lwaW87XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLmNwID0gaXRlbS5jcDtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24ucHJvdmluY2lhID0gaXRlbS5wcm92aW5jaWE7XHJcbiAgICAgICAgc2VhcmNoU2VjdG9yKGl0ZW0uY2FsbGUpO1xyXG4gICAgICB9ZWxzZXtcclxuICAgICAgICB2bS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5kaXJlY2Npb24uY2FsbGUgPSBudWxsO1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5tdW5pY2lwaW8gPSBudWxsO1xyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jcCA9IG51bGw7XHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMuZGlyZWNjaW9uLnByb3ZpbmNpYSA9IG51bGw7XHJcbiAgICAgICAgdm0uc2VjdG9yID0gbnVsbDtcclxuICAgICAgICB2bS5udWV2YUNhbGxlID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBzZWFyY2hTZWN0b3IoY2FsbGUpIHtcclxuICAgICAgc2VjdG9yZXNTZXJ2aWNlLnNlY3RvcmVzUmVzdCgpLnF1ZXJ5KHtjYWxsZTogY2FsbGV9LCBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5zZWN0b3IgPSBkYXRhWzBdLm51bWVyb1NlY3RvcjtcclxuICAgICAgICB2bS5udWV2YUNhbGxlID0gZmFsc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNhbGN1bGFyQ0MoKSB7XHJcbiAgICAgIGlmICh2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhLmliYW4pXHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5jYyA9ICRmaWx0ZXIoJ2NhbGN1bGFyQ0MnKSh2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhLmliYW4pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNhbGN1bGFySWJhbigpIHtcclxuICAgICAgaWYgKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MpXHJcbiAgICAgICAgdm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5pYmFuID0gJGZpbHRlcignY2FsY3VsYXJJYmFuJykodm0uY29mcmFkZS5kYXRvc0ZpbmFuY2llcm9zLmN1ZW50YS5jYyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhcihpc1ZhbGlkKSB7XHJcbiAgICAgIGlmKGlzVmFsaWQpe1xyXG4gICAgICAgIHZhciBkYXRvc0ZpbmFuY2llcm9zID0ge2N1ZW50YToge30sIGRldWRhOiBbXX07XHJcblxyXG4gICAgICAgIHZtLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmRpcmVjY2lvbi5jYWxsZSA9IHZtLnNlYXJjaFRleHQ7XHJcblxyXG4gICAgICAgIGlmIChKU09OLnN0cmluZ2lmeSh2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MpID09PSBKU09OLnN0cmluZ2lmeShkYXRvc0ZpbmFuY2llcm9zKSlcclxuICAgICAgICAgIGRlbGV0ZSB2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3M7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFyIENvZnJhZGVSZXNvdXJjZSA9IGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKTtcclxuICAgICAgICBpZih2bS5udWV2YUNhbGxlKXtcclxuICAgICAgICAgIGd1YXJkYXJDYWxsZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgZ3VhcmRhckNvZnJhZGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICBcclxuICAgICAgZnVuY3Rpb24gZ3VhcmRhckNvZnJhZGUoKXtcclxuICAgICAgICBDb2ZyYWRlUmVzb3VyY2Uuc2F2ZSh2bS5jb2ZyYWRlLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZnVuY3Rpb24gZ3VhcmRhckNhbGxlKCkge1xyXG4gICAgICAgIHNlY3RvcmVzU2VydmljZS5zZWN0b3Jlc1Jlc3QoKS5nZXQoe3NlY3Rvcjogdm0uc2VjdG9yfSwgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2YXIgc2VjdG9yUmVzb3VyY2UgPSAgZGF0YVswXTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaWYoc2VjdG9yUmVzb3VyY2Upe1xyXG4gICAgICAgICAgICBzZWN0b3JSZXNvdXJjZS5jb2ZyYWRlID0gc2VjdG9yUmVzb3VyY2UuY29mcmFkZS5pZDtcclxuICAgICAgICAgICAgc2VjdG9yUmVzb3VyY2UuY2FsbGVzLnB1c2godm0uc2VhcmNoVGV4dCk7XHJcbiAgICAgICAgICAgIHNlY3RvclJlc291cmNlLiRzYXZlKG51bGwsIGd1YXJkYXJDb2ZyYWRlLCBndWFyZGFyRXJyb3IpOyAgICAgICAgICAgIFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgICAgICAgLmNvbnRlbnQoJ0VsIHNlY3RvciAnICt2bS5zZWN0b3IrICcgbm8gZXhpc3RlISEnKVxyXG4gICAgICAgICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyU3VjY2VzcyhyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnR3VhcmRhZG8gY29uIMOpeGl0byEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgICAgJHN0YXRlLmdvKCdjb2ZyYWRlcycpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJFcnJvcihyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXJyb3IgYWwgZ3VhcmRhciEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBzaG93QWN0aW9uVG9hc3QoKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFeGlzdGVuIGVycm9yZXMgZW4gZWwgZm9ybXVsYXJpbycpXHJcbiAgICAgICAgICAuYWN0aW9uKCdPSycpXHJcbiAgICAgICAgICAuaGlnaGxpZ2h0QWN0aW9uKGZhbHNlKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29mcmFkZURldGFsbGUnLCBDb2ZyYWRlRGV0YWxsZSk7XHJcblxyXG4gIGZ1bmN0aW9uIENvZnJhZGVEZXRhbGxlKCRzdGF0ZSwgJGZpbHRlciwgZ2V0Q29mcmFkZVByZXBTZXJ2aWNlLCBnZXRNYXBzUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0uY29mcmFkZSA9IG51bGw7XHJcbiAgICB2bS5tYXBzID0gbnVsbDtcclxuICAgIFxyXG4gICAgdm0ubW9kaWZ5Q29mcmFkZSA9IG1vZGlmeUNvZnJhZGU7XHJcbiAgICBcclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIHJldHVybiBnZXRDb2ZyYWRlUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5jb2ZyYWRlID0gZGF0YTtcclxuICAgICAgICBpZih2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MpXHJcbiAgICAgICAgICBpZih2bS5jb2ZyYWRlLmRhdG9zRmluYW5jaWVyb3MuY3VlbnRhKXtcclxuICAgICAgICAgICAgdm0uaWJhbiA9ICRmaWx0ZXIoJ3BhcnNlSWJhbicpKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuaWJhbik7XHJcbiAgICAgICAgICAgIHZtLmNjID0gJGZpbHRlcigncGFyc2VDQycpKHZtLmNvZnJhZGUuZGF0b3NGaW5hbmNpZXJvcy5jdWVudGEuY2MpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIHZtLm1hcHMgPSBnZXRNYXBzUHJlcFNlcnZpY2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG1vZGlmeUNvZnJhZGUoaWQsIGV2ZW50KXtcclxuICAgICAgJHN0YXRlLmdvKCdjb2ZyYWRlc0NhbWJpb3MnLCB7Y29mcmFkZUlkOiBpZH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0NvZnJhZGVzJywgQ29mcmFkZXMpO1xyXG5cclxuICBmdW5jdGlvbiBDb2ZyYWRlcyhjb2ZyYWRlc1ByZXBTZXJ2aWNlLCBjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLmNvZnJhZGVzID0gbnVsbDtcclxuICAgIHZtLm5leHRQYWdlID0gbnVsbDtcclxuICAgIHZtLmNvZnJhZGVzQmFqYXMgPSBudWxsO1xyXG4gICAgdm0ubmV4dFBhZ2VCYWphcyA9IG51bGw7XHJcbiAgICB2bS5zZWxlY3RlZFRhYiA9IDA7XHJcbiAgICBhY3RpdmF0ZSgpO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgY29mcmFkZXNQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLm5leHRQYWdlID0gZGF0YS5uZXh0O1xyXG4gICAgICAgIHZtLmNvZnJhZGVzID0gZGF0YS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBjb2ZyYWRlc0JhamFzUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5uZXh0UGFnZUJhamFzID0gZGF0YS5uZXh0O1xyXG4gICAgICAgIHZtLmNvZnJhZGVzQmFqYXMgPSBkYXRhLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdzY3JvbGx5Jywgc2Nyb2xseSk7XHJcblxyXG4gIGZ1bmN0aW9uIHNjcm9sbHkoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0EnLFxyXG4gICAgICBsaW5rOiBmdW5jdGlvbiAoJHJvb3RTY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuICAgICAgICB2YXIgcmF3ID0gZWxlbWVudFswXTtcclxuICAgICAgICBlbGVtZW50LmJpbmQoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGlmIChyYXcuc2Nyb2xsVG9wICsgcmF3Lm9mZnNldEhlaWdodCA+PSByYXcuc2Nyb2xsSGVpZ2h0LTUpIHtcclxuICAgICAgICAgICAgJHJvb3RTY29wZS4kZW1pdChcInNjcm9sbERvd25cIik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5maWx0ZXIoJ3BhcnNlSWJhbicsIHBhcnNlSWJhbilcclxuICAgIC5maWx0ZXIoJ3BhcnNlQ0MnLCBwYXJzZUNDKVxyXG4gICAgLmZpbHRlcignY2FsY3VsYXJJYmFuJywgY2FsY3VsYXJJYmFuKVxyXG4gICAgLmZpbHRlcignY2FsY3VsYXJDQycsIGNhbGN1bGFyQ0MpO1xyXG5cclxuICBmdW5jdGlvbiBwYXJzZUliYW4oKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGliYW4pIHtcclxuICAgICAgaWJhbiA9IGliYW4gfHwgJyc7XHJcbiAgICAgIHZhciBmb3JtYXR0ZWRJYmFuID0gJyc7XHJcblxyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGliYW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAoaSA+IDAgJiYgaSAlIDQgPT09IDApIHtcclxuICAgICAgICAgIGZvcm1hdHRlZEliYW4gKz0gJyAnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3JtYXR0ZWRJYmFuICs9IGliYW5baV07XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGZvcm1hdHRlZEliYW47XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcGFyc2VDQygpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoY2MpIHtcclxuICAgICAgY2MgPSBjYyB8fCAnJztcclxuICAgICAgdmFyIGZvcm1hdHRlZENDID0gJyc7XHJcblxyXG4gICAgICBmb3JtYXR0ZWRDQyA9IGNjLnN1YnN0cigwLCA0KSArICctJztcclxuICAgICAgZm9ybWF0dGVkQ0MgKz0gY2Muc3Vic3RyKDQsIDQpICsgJy0nO1xyXG4gICAgICBmb3JtYXR0ZWRDQyArPSBjYy5zdWJzdHIoOCwgMikgKyAnLSc7XHJcbiAgICAgIGZvcm1hdHRlZENDICs9IGNjLnN1YnN0cigxMCwgMTApO1xyXG5cclxuICAgICAgcmV0dXJuIGZvcm1hdHRlZENDO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNhbGN1bGFyQ0MoKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGliYW4pIHtcclxuICAgICAgaWJhbiA9IGliYW4gfHwgJyc7XHJcbiAgICAgIHJldHVybiBpYmFuLnN1YnN0cig0LCAyMCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY2FsY3VsYXJJYmFuKCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjY2MpIHtcclxuICAgICAgdmFyIHBhaXMgPSBcIkVTXCI7XHJcbiAgICAgIHZhciBjaWZyYXMgPSBjY2MgKyB2YWxvckNpZnJhcyhwYWlzKSArIFwiMDBcIjtcclxuICAgICAgdmFyIHJlc3RvID0gbW9kdWxvKGNpZnJhcywgOTcpO1xyXG4gICAgICByZXR1cm4gcGFpcyArIGNlcm9zSXpxdWllcmRhKDk4LXJlc3RvLCAyKSArIGNjYztcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gdmFsb3JDaWZyYXMoY2lmcmFzKSB7XHJcbiAgICAgIHZhciBMRVRSQVMgPSBcIjAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiO1xyXG4gICAgICB2YXIgaXRlbXMgPSBbXTtcclxuICAgICAgZm9yICh2YXIgaT0wOyBpPGNpZnJhcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHZhciBwb3NpY2lvbiA9IExFVFJBUy5pbmRleE9mKGNpZnJhc1tpXSk7XHJcbiAgICAgICAgaXRlbXMucHVzaChwb3NpY2lvbiA8IDA/IFwiLVwiOiBwb3NpY2lvbik7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGl0ZW1zLmpvaW4oXCJcIik7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kdWxvKGNpZnJhcywgZGl2aXNvcikge1xyXG4gICAgICB2YXIgQ1VFTlRBID0gMTA7XHJcbiAgICAgIHZhciBsYXJnbyA9IGNpZnJhcy5sZW5ndGg7XHJcbiAgICAgIHZhciByZXN0byA9IDA7XHJcbiAgICAgIGZvciAodmFyIGk9MDsgaTxsYXJnbzsgaSs9Q1VFTlRBKSB7XHJcbiAgICAgICAgdmFyIGRpdmlkZW5kbyA9IHJlc3RvICsgXCJcIiArIGNpZnJhcy5zdWJzdHIoaSwgQ1VFTlRBKTtcclxuICAgICAgICByZXN0byA9IGRpdmlkZW5kbyAlIGRpdmlzb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3RvO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNlcm9zSXpxdWllcmRhKGNpZnJhcywgbGFyZ28pIHtcclxuICAgICAgY2lmcmFzICs9ICcnO1xyXG4gICAgICB3aGlsZShjaWZyYXMubGVuZ3RoIDwgbGFyZ28pIHsgY2lmcmFzID0gJzAnK2NpZnJhczsgfVxyXG4gICAgICByZXR1cm4gY2lmcmFzO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5maWx0ZXIoJ3N0cmluZ1RvRGF0ZUZvcm1hdCcsIHN0cmluZ1RvRGF0ZUZvcm1hdClcclxuICAgIC5maWx0ZXIoJ2Zvcm1hdERhdGVzJywgZm9ybWF0RGF0ZXMpO1xyXG5cclxuICBmdW5jdGlvbiBzdHJpbmdUb0RhdGVGb3JtYXQoKXtcclxuICAgIHJldHVybiBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYgKGRhdGEuZGF0b3NQZXJzb25hbGVzKXtcclxuICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYU5hY2ltaWVudG8gID0gbmV3IERhdGUoZGF0YS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFOYWNpbWllbnRvKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYUluc2NyaXBjaW9uID0gbmV3IERhdGUoZGF0YS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFJbnNjcmlwY2lvbikudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XHJcbiAgICAgIH1cclxuICAgICAgaWYoZGF0YS5mZWNoYSlcclxuICAgICAgICBkYXRhLmZlY2hhICA9IG5ldyBEYXRlKGRhdGEuZmVjaGEpLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xyXG5cclxuICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZm9ybWF0RGF0ZXMoKXtcclxuICAgIHJldHVybiBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgXHJcbiAgICAgIHZhciBkYXRlID0gbnVsbDtcclxuICAgICAgaWYgKGRhdGEuZGF0b3NQZXJzb25hbGVzKXtcclxuICAgICAgICBkYXRlID0gZGF0YS5kYXRvc1BlcnNvbmFsZXMuZmVjaGFOYWNpbWllbnRvLnNwbGl0KFwiL1wiKTtcclxuICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYU5hY2ltaWVudG8gID0gZGF0ZVsyXSArICctJyArIGRhdGVbMV0gKyAnLScgKyBkYXRlWzBdO1xyXG4gICAgICAgIGRhdGUgPSBkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYUluc2NyaXBjaW9uLnNwbGl0KFwiL1wiKTtcclxuICAgICAgICBkYXRhLmRhdG9zUGVyc29uYWxlcy5mZWNoYUluc2NyaXBjaW9uID0gZGF0ZVsyXSArICctJyArIGRhdGVbMV0gKyAnLScgKyBkYXRlWzBdO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKGRhdGEuZmVjaGEpe1xyXG4gICAgICAgIGRhdGUgPSBkYXRhLmZlY2hhLnNwbGl0KFwiL1wiKTtcclxuICAgICAgICBkYXRhLmZlY2hhICA9IGRhdGVbMl0gKyAnLScgKyBkYXRlWzFdICsgJy0nICsgZGF0ZVswXTtcclxuICAgICAgfVxyXG4gICAgICBlbHNle1xyXG4gICAgICAgIGRhdGEgPSBuZXcgRGF0ZShkYXRhKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7XHJcbiIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmlsdGVyKCdyZW1vdmVOdWxscycsIHJlbW92ZU51bGxzKTtcclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlTnVsbHMoKXtcclxuICAgIHJldHVybiBmdW5jdGlvbihvYmope1xyXG4gICAgICB2YXIgaXNBcnJheSA9IG9iaiBpbnN0YW5jZW9mIEFycmF5O1xyXG4gICAgICBmb3IgKHZhciBrIGluIG9iail7XHJcbiAgICAgICAgaWYgKG9ialtrXT09PW51bGwpIGlzQXJyYXkgPyBvYmouc3BsaWNlKGssMSkgOiBkZWxldGUgb2JqW2tdO1xyXG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBvYmpba109PVwib2JqZWN0XCIpIHJlbW92ZU51bGxzKG9ialtrXSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIG9iajtcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdhc3BpcmFudGVzU2VydmljZScsIGFzcGlyYW50ZXNTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gYXNwaXJhbnRlc1NlcnZpY2UoJHJlc291cmNlLCAkZmlsdGVyKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBhc3BpcmFudGVzUmVzdDogYXNwaXJhbnRlc1Jlc3RcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gYXNwaXJhbnRlc1Jlc3QoKSB7XHJcbiAgICAgIHJldHVybiAkcmVzb3VyY2UoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvYXNwaXJhbnRlcy86aWQuanNvbjpqc29uJywgbnVsbCwge1xyXG4gICAgICAgICdxdWVyeSc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OiB0cnVlfSxcclxuICAgICAgICAnZ2V0JzogICAge21ldGhvZDonR0VUJywgdHJhbnNmb3JtUmVzcG9uc2U6IGZ1bmN0aW9uKGRhdGEsIGhlYWRlcnNHZXR0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRmaWx0ZXIoJ3N0cmluZ1RvRGF0ZUZvcm1hdCcpKGFuZ3VsYXIuZnJvbUpzb24oZGF0YSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICdzYXZlJzogICB7bWV0aG9kOidQT1NUJywgdHJhbnNmb3JtUmVxdWVzdDogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci50b0pzb24oJGZpbHRlcignZm9ybWF0RGF0ZXMnKSgkZmlsdGVyKCdyZW1vdmVOdWxscycpKGRhdGEpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnYXV0b3JpZGFkZXNTZXJ2aWNlJywgYXV0b3JpZGFkZXNTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gYXV0b3JpZGFkZXNTZXJ2aWNlKCRyZXNvdXJjZSwgJGZpbHRlcikge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYXV0b3JpZGFkZXNSZXN0OiBhdXRvcmlkYWRlc1Jlc3RcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gYXV0b3JpZGFkZXNSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL2F1dG9yaWRhZGVzLzppZC5qc29uOmpzb24nLCBudWxsLCB7XHJcbiAgICAgICAgJ3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6IHRydWV9LFxyXG4gICAgICAgICdzYXZlJzogICB7bWV0aG9kOidQT1NUJywgdHJhbnNmb3JtUmVxdWVzdDogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci50b0pzb24oJGZpbHRlcigncmVtb3ZlTnVsbHMnKShkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnY29mcmFkZXNTZXJ2aWNlJywgY29mcmFkZXNTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gY29mcmFkZXNTZXJ2aWNlKCRyZXNvdXJjZSwgJGh0dHAsICRmaWx0ZXIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNvZnJhZGVzUmVzdDogY29mcmFkZXNSZXN0LFxyXG4gICAgICBjb2ZyYWRlc0JhamFzUmVzdDogY29mcmFkZXNCYWphc1Jlc3QsXHJcbiAgICAgIGdldENhbGxlczogZ2V0Q2FsbGVzLFxyXG4gICAgICBnZXRSZWdpc3Ryb3M6IGdldFJlZ2lzdHJvc1xyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBjb2ZyYWRlc1Jlc3QoKSB7XHJcbiAgICAgIHJldHVybiAkcmVzb3VyY2UoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvY29mcmFkZXMvOmlkLmpzb246anNvbicsIG51bGwsIHtcclxuICAgICAgICAncXVlcnknOiAge21ldGhvZDonR0VUJywgaXNBcnJheTogZmFsc2V9LFxyXG4gICAgICAgICdnZXQnOiAgICB7bWV0aG9kOidHRVQnLCB0cmFuc2Zvcm1SZXNwb25zZTogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGZpbHRlcignc3RyaW5nVG9EYXRlRm9ybWF0JykoYW5ndWxhci5mcm9tSnNvbihkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgJ3NhdmUnOiAgIHttZXRob2Q6J1BPU1QnLCB0cmFuc2Zvcm1SZXF1ZXN0OiBmdW5jdGlvbihkYXRhLCBoZWFkZXJzR2V0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLnRvSnNvbigkZmlsdGVyKCdmb3JtYXREYXRlcycpKCRmaWx0ZXIoJ3JlbW92ZU51bGxzJykoZGF0YSkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY29mcmFkZXNCYWphc1Jlc3QoKSB7XHJcbiAgICAgIHJldHVybiAkcmVzb3VyY2UoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvY29mcmFkZXNCYWphcy86aWQuanNvbjpqc29uJywgbnVsbCwgeydxdWVyeSc6ICB7bWV0aG9kOidHRVQnLCBpc0FycmF5OmZhbHNlfX0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldENhbGxlcyhjYWxsZSkge1xyXG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL2NhbGxlcy8nLCB7cGFyYW1zOiB7Y2FsbGU6IGNhbGxlfX0pLlxyXG4gICAgICAgICAgICAgIHRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFuZ3VsYXIuZnJvbUpzb24ocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldFJlZ2lzdHJvcygpIHtcclxuICAgICAgcmV0dXJuICRodHRwLmdldCgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9yZWdpc3Ryb3MvJykuXHJcbiAgICAgICAgICAgICAgdGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci5mcm9tSnNvbihyZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnY29zdGFsZXJvc1NlcnZpY2UnLCBjb3N0YWxlcm9zU2VydmljZSk7XHJcblxyXG4gIGZ1bmN0aW9uIGNvc3RhbGVyb3NTZXJ2aWNlKCRyZXNvdXJjZSwgJGZpbHRlcikge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY29zdGFsZXJvc1Jlc3Q6IGNvc3RhbGVyb3NSZXN0XHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIGNvc3RhbGVyb3NSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL2Nvc3RhbGVyb3MvOmlkLmpzb246anNvbicsIG51bGwsIHtcclxuICAgICAgICAncXVlcnknOiAge21ldGhvZDonR0VUJywgaXNBcnJheTogdHJ1ZX0sXHJcbiAgICAgICAgJ2dldCc6ICAgIHttZXRob2Q6J0dFVCcsIHRyYW5zZm9ybVJlc3BvbnNlOiBmdW5jdGlvbihkYXRhLCBoZWFkZXJzR2V0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkZmlsdGVyKCdzdHJpbmdUb0RhdGVGb3JtYXQnKShhbmd1bGFyLmZyb21Kc29uKGRhdGEpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAnc2F2ZSc6ICAge21ldGhvZDonUE9TVCcsIHRyYW5zZm9ybVJlcXVlc3Q6IGZ1bmN0aW9uKGRhdGEsIGhlYWRlcnNHZXR0ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFuZ3VsYXIudG9Kc29uKCRmaWx0ZXIoJ2Zvcm1hdERhdGVzJykoJGZpbHRlcigncmVtb3ZlTnVsbHMnKShkYXRhKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZhY3RvcnkoJ2RpcmVjdGl2b3NTZXJ2aWNlJywgZGlyZWN0aXZvc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBkaXJlY3Rpdm9zU2VydmljZSgkcmVzb3VyY2UsICRmaWx0ZXIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGRpcmVjdGl2b3NSZXN0OiBkaXJlY3Rpdm9zUmVzdFxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBkaXJlY3Rpdm9zUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9kaXJlY3Rpdm9zLzppZC5qc29uOmpzb24nLCBudWxsLCB7XHJcbiAgICAgICAgJ3F1ZXJ5JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6IHRydWV9LFxyXG4gICAgICAgICdzYXZlJzogICB7bWV0aG9kOidQT1NUJywgdHJhbnNmb3JtUmVxdWVzdDogZnVuY3Rpb24oZGF0YSwgaGVhZGVyc0dldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5ndWxhci50b0pzb24oJGZpbHRlcigncmVtb3ZlTnVsbHMnKShkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnZ2FzdG9zQmFuY2FyaW9zU2VydmljZScsIGdhc3Rvc0JhbmNhcmlvc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBnYXN0b3NCYW5jYXJpb3NTZXJ2aWNlKCRyZXNvdXJjZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZ2FzdG9zQmFuY2FyaW9zUmVzdDogZ2FzdG9zQmFuY2FyaW9zUmVzdFxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBnYXN0b3NCYW5jYXJpb3NSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL2dhc3Rvc0JhbmNhcmlvcy86aWQuanNvbjpqc29uJyk7XHJcbiAgICB9XHJcbiAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdtYXBhc1NlcnZpY2UnLCBtYXBhc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBtYXBhc1NlcnZpY2UoJGh0dHApIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGdlb0NvZGluZ0FQSTogZ2VvQ29kaW5nQVBJXHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIGdlb0NvZGluZ0FQSShhZGRyZXNzKSB7XHJcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2h0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9nZW9jb2RlL2pzb24nLCB7cGFyYW1zOiB7YWRkcmVzczogYWRkcmVzcywga2V5OiBcIkFJemFTeURDX09JRFNsNmN1cmpDTUNMeXpuMnloTW1nLWVyNWtuSVwifX0pLlxyXG4gICAgICB0aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfSAgICBcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZmFjdG9yeSgnbnVtZXJvc0xvdGVyaWFTZXJ2aWNlJywgbnVtZXJvc0xvdGVyaWFTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gbnVtZXJvc0xvdGVyaWFTZXJ2aWNlKCRyZXNvdXJjZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbnVtZXJvc0xvdGVyaWFSZXN0OiBudW1lcm9zTG90ZXJpYVJlc3RcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gbnVtZXJvc0xvdGVyaWFSZXN0KCkge1xyXG4gICAgICByZXR1cm4gJHJlc291cmNlKCdodHRwOi8vMTI3LjAuMC4xOjUwNTAvYXBpL251bWVyb3NMb3RlcmlhLzppZC5qc29uOmpzb24nKTtcclxuICAgIH1cclxuICAgXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmZhY3RvcnkoJ3BhcGVsZXRhc1NpdGlvc1NlcnZpY2UnLCBwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlKTtcclxuXHJcbiAgZnVuY3Rpb24gcGFwZWxldGFzU2l0aW9zU2VydmljZSgkcmVzb3VyY2UsICRmaWx0ZXIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHBhcGVsZXRhc1NpdGlvc1Jlc3Q6IHBhcGVsZXRhc1NpdGlvc1Jlc3RcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gcGFwZWxldGFzU2l0aW9zUmVzdCgpIHtcclxuICAgICAgcmV0dXJuICRyZXNvdXJjZSgnaHR0cDovLzEyNy4wLjAuMTo1MDUwL2FwaS9wYXBlbGV0YXNTaXRpb3MvOmlkLmpzb246anNvbicsIG51bGwsIHtcclxuICAgICAgICAncXVlcnknOiAge21ldGhvZDonR0VUJywgaXNBcnJheTogdHJ1ZX0sXHJcbiAgICAgICAgJ3NhdmUnOiAgIHttZXRob2Q6J1BPU1QnLCB0cmFuc2Zvcm1SZXF1ZXN0OiBmdW5jdGlvbihkYXRhLCBoZWFkZXJzR2V0dGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLnRvSnNvbigkZmlsdGVyKCdyZW1vdmVOdWxscycpKGRhdGEpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgIFxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5mYWN0b3J5KCdzZWN0b3Jlc1NlcnZpY2UnLCBzZWN0b3Jlc1NlcnZpY2UpO1xyXG5cclxuICBmdW5jdGlvbiBzZWN0b3Jlc1NlcnZpY2UoJHJlc291cmNlKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzZWN0b3Jlc1Jlc3Q6IHNlY3RvcmVzUmVzdFxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBzZWN0b3Jlc1Jlc3QoKSB7XHJcbiAgICAgIHJldHVybiAkcmVzb3VyY2UoJ2h0dHA6Ly8xMjcuMC4wLjE6NTA1MC9hcGkvc2VjdG9yZXMvOmlkLmpzb246anNvbicsIG51bGwsIHtcclxuICAgICAgICAnZ2V0JzogIHttZXRob2Q6J0dFVCcsIGlzQXJyYXk6IHRydWV9LFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29zdGFsZXJvQWRkTW9kaWZ5JywgQ29zdGFsZXJvQWRkTW9kaWZ5KTtcclxuXHJcbiAgZnVuY3Rpb24gQ29zdGFsZXJvQWRkTW9kaWZ5KCRzY29wZSwgJGZpbHRlciwgJGRvY3VtZW50LCAkbWRUb2FzdCwgJHN0YXRlLCBnZXRDb3N0YWxlcm9QcmVwU2VydmljZSwgY29zdGFsZXJvc1NlcnZpY2UsIGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0uYmFja1N0YXRlICAgICAgICAgID0gYmFja1N0YXRlO1xyXG4gICAgdm0ucXVlcnlTZWFyY2ggICAgICAgID0gcXVlcnlTZWFyY2g7XHJcbiAgICB2bS5zZWxlY3RlZEl0ZW1DaGFuZ2UgPSBzZWxlY3RlZEl0ZW1DaGFuZ2U7XHJcbiAgICB2bS5ndWFyZGFyICAgICAgICAgICAgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIGlmIChnZXRDb3N0YWxlcm9QcmVwU2VydmljZSl7XHJcbiAgICAgICAgZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihpbml0Q29zdGFsZXJvKTtcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbml0Q29zdGFsZXJvKGRhdGEpIHtcclxuICAgICAgdm0uY29zdGFsZXJvID0gZGF0YTtcclxuICAgICAgdm0uY29mcmFkZVNlbGVjdGVkID0gdm0uY29zdGFsZXJvLmNvZnJhZGU7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGJhY2tTdGF0ZSgpIHtcclxuICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHF1ZXJ5U2VhcmNoKHF1ZXJ5KSB7XHJcbiAgICAgIHZhciBmaWx0cm8gPSB7fTtcclxuICAgICAgaWYgKGlzTmFOKHF1ZXJ5KSlcclxuICAgICAgICBmaWx0cm8ubm9tYnJlID0gcXVlcnk7XHJcbiAgICAgIGVsc2UgaWYoIWlzTmFOKHF1ZXJ5KSlcclxuICAgICAgICBmaWx0cm8ubnVtZXJvT3JkZW4gPSBxdWVyeTtcclxuXHJcbiAgICAgIHJldHVybiBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkoZmlsdHJvKS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWxlY3RlZEl0ZW1DaGFuZ2UoaXRlbSkge1xyXG4gICAgICB2bS5jb3N0YWxlcm8uY29mcmFkZSA9ICBpdGVtID8gaXRlbS5pZCA6IG51bGw7XHJcbiAgICB9ICAgIFxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXIoaXNWYWxpZCkge1xyXG4gICAgICBpZihpc1ZhbGlkKXtcclxuICAgICAgICB2bS5jb3N0YWxlcm8uZmVjaGEgPSAodm0uY29zdGFsZXJvLmZlY2hhID09PSBcIlwiKSA/IG51bGwgOiB2bS5jb3N0YWxlcm8uZmVjaGE7XHJcbiAgICAgICAgaWYgKCF2bS5jb3N0YWxlcm8uY29mcmFkZSl7XHJcbiAgICAgICAgICAkc2NvcGUuY29zdGFsZXJvRm9ybS5jb2ZyYWRlLiRlcnJvci5yZXF1aXJlZCA9IHRydWU7XHJcbiAgICAgICAgICBzaG93QWN0aW9uVG9hc3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIGNvc3RhbGVyb3NTZXJ2aWNlLmNvc3RhbGVyb3NSZXN0KCkuc2F2ZSh2bS5jb3N0YWxlcm8sIGd1YXJkYXJTdWNjZXNzLCBndWFyZGFyRXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBlbHNlXHJcbiAgICAgICAgc2hvd0FjdGlvblRvYXN0KCk7XHJcbiAgICB9XHJcbiAgICAgIFxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhclN1Y2Nlc3MocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0d1YXJkYWRvIGNvbiDDqXhpdG8hIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICAgICRzdGF0ZS5nbygnY29zdGFsZXJvcycpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJFcnJvcihyZXNwb25zZSkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXJyb3IgYWwgZ3VhcmRhciEhJylcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBzaG93QWN0aW9uVG9hc3QoKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFeGlzdGVuIGVycm9yZXMgZW4gZWwgZm9ybXVsYXJpbycpXHJcbiAgICAgICAgICAuYWN0aW9uKCdPSycpXHJcbiAgICAgICAgICAuaGlnaGxpZ2h0QWN0aW9uKGZhbHNlKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignQ29zdGFsZXJvRGV0YWxsZScsIENvc3RhbGVyb0RldGFsbGUpO1xyXG5cclxuICBmdW5jdGlvbiBDb3N0YWxlcm9EZXRhbGxlKCRzdGF0ZSwgZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ubW9kaWZ5Q29zdGFsZXJvID0gbW9kaWZ5Q29zdGFsZXJvO1xyXG4gICAgXHJcbiAgICBhY3RpdmF0ZSgpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICByZXR1cm4gZ2V0Q29zdGFsZXJvUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5jb3N0YWxlcm8gPSBkYXRhO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2RpZnlDb3N0YWxlcm8oaWQsIGV2ZW50KXtcclxuICAgICAgJHN0YXRlLmdvKCdjb3N0YWxlcm9zQ2FtYmlvcycsIHtjb3N0YWxlcm9JZDogaWR9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdDb3N0YWxlcm9zJywgQ29zdGFsZXJvcyk7XHJcblxyXG4gIGZ1bmN0aW9uIENvc3RhbGVyb3MoY29zdGFsZXJvc1ByZXBTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5jb3N0YWxlcm9zID0gbnVsbDtcclxuICAgIGFjdGl2YXRlKCk7XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICByZXR1cm4gY29zdGFsZXJvc1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0uY29zdGFsZXJvcyA9IGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdEaXJlY3Rpdm9BZGRNb2RpZnknLCBEaXJlY3Rpdm9BZGRNb2RpZnkpO1xyXG5cclxuICBmdW5jdGlvbiBEaXJlY3Rpdm9BZGRNb2RpZnkoJHNjb3BlLCAkZG9jdW1lbnQsICRtZFRvYXN0LCAkc3RhdGUsIGdldERpcmVjdGl2b1ByZXBTZXJ2aWNlLCBkaXJlY3Rpdm9zU2VydmljZSwgY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5uZXdDb2ZyYWRlID0gZmFsc2U7XHJcblxyXG4gICAgdm0uYmFja1N0YXRlICAgICAgICAgID0gYmFja1N0YXRlO1xyXG4gICAgdm0ucXVlcnlTZWFyY2ggICAgICAgID0gcXVlcnlTZWFyY2g7XHJcbiAgICB2bS5zZWxlY3RlZEl0ZW1DaGFuZ2UgPSBzZWxlY3RlZEl0ZW1DaGFuZ2U7XHJcbiAgICB2bS5ndWFyZGFyICAgICAgICAgICAgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIGlmIChnZXREaXJlY3Rpdm9QcmVwU2VydmljZSl7XHJcbiAgICAgICAgZ2V0RGlyZWN0aXZvUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihpbml0RGlyZWN0aXZvKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNle1xyXG4gICAgICAgIG5ld0RpcmVjdGl2bygpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXREaXJlY3Rpdm8oZGF0YSkge1xyXG4gICAgICB2bS5kaXJlY3Rpdm8gPSBkYXRhO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBuZXdEaXJlY3Rpdm8oKSB7XHJcbiAgICAgIHZtLm5ld0NvZnJhZGUgPSB0cnVlO1xyXG4gICAgICB2bS5kaXJlY3Rpdm8gPSB7Y29mcmFkZTogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICAgIGZlY2hhOiBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpfTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBiYWNrU3RhdGUoKSB7XHJcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBxdWVyeVNlYXJjaChxdWVyeSkge1xyXG4gICAgICB2YXIgZmlsdHJvID0ge307XHJcbiAgICAgIGlmIChpc05hTihxdWVyeSkpXHJcbiAgICAgICAgZmlsdHJvLm5vbWJyZSA9IHF1ZXJ5O1xyXG4gICAgICBlbHNlIGlmKCFpc05hTihxdWVyeSkpXHJcbiAgICAgICAgZmlsdHJvLm51bWVyb09yZGVuID0gcXVlcnk7XHJcblxyXG4gICAgICByZXR1cm4gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLnF1ZXJ5KGZpbHRybykuJHByb21pc2UudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UucmVzdWx0cztcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VsZWN0ZWRJdGVtQ2hhbmdlKGl0ZW0pIHtcclxuICAgICAgdm0uZGlyZWN0aXZvLmNvZnJhZGUgPSAgaXRlbSA/IGl0ZW0uaWQgOiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXIoaXNWYWxpZCkge1xyXG4gICAgICBpZihpc1ZhbGlkKXtcclxuICAgICAgICBpZiAoIXZtLmRpcmVjdGl2by5jb2ZyYWRlKXtcclxuICAgICAgICAgICRzY29wZS5kaXJlY3Rpdm9Gb3JtLmNvZnJhZGUuJGVycm9yLnJlcXVpcmVkID0gdHJ1ZTtcclxuICAgICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgdm0uZGlyZWN0aXZvLmNvZnJhZGUgPSB2bS5kaXJlY3Rpdm8uY29mcmFkZS5pZCA/IHZtLmRpcmVjdGl2by5jb2ZyYWRlLmlkIDogdm0uZGlyZWN0aXZvLmNvZnJhZGU7XHJcbiAgICAgICAgICBkaXJlY3Rpdm9zU2VydmljZS5kaXJlY3Rpdm9zUmVzdCgpLnNhdmUodm0uZGlyZWN0aXZvLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgfVxyXG4gICAgICBcclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJTdWNjZXNzKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdHdWFyZGFkbyBjb24gw6l4aXRvISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgICAkc3RhdGUuZ28oJ2RpcmVjdGl2b3MnKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyRXJyb3IocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0Vycm9yIGFsIGd1YXJkYXIhIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2hvd0FjdGlvblRvYXN0KCkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXhpc3RlbiBlcnJvcmVzIGVuIGVsIGZvcm11bGFyaW8nKVxyXG4gICAgICAgICAgLmFjdGlvbignT0snKVxyXG4gICAgICAgICAgLmhpZ2hsaWdodEFjdGlvbihmYWxzZSlcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0RpcmVjdGl2b0RldGFsbGUnLCBEaXJlY3Rpdm9EZXRhbGxlKTtcclxuXHJcbiAgZnVuY3Rpb24gRGlyZWN0aXZvRGV0YWxsZSgkc3RhdGUsIGdldERpcmVjdGl2b1ByZXBTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLm1vZGlmeURpcmVjdGl2byA9IG1vZGlmeURpcmVjdGl2bztcclxuICAgIFxyXG4gICAgYWN0aXZhdGUoKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGdldERpcmVjdGl2b1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0uZGlyZWN0aXZvID0gZGF0YTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5RGlyZWN0aXZvKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnZGlyZWN0aXZvc0NhbWJpb3MnLCB7ZGlyZWN0aXZvSWQ6IGlkfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignRGlyZWN0aXZvcycsIERpcmVjdGl2b3MpO1xyXG5cclxuICBmdW5jdGlvbiBEaXJlY3Rpdm9zKGRpcmVjdGl2b3NQcmVwU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0uZGlyZWN0aXZvcyA9IG51bGw7XHJcbiAgICBhY3RpdmF0ZSgpO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIGRpcmVjdGl2b3NQcmVwU2VydmljZS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLmRpcmVjdGl2b3MgPSBkYXRhO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignR2FzdG9zQmFuY2FyaW9zJywgR2FzdG9zQmFuY2FyaW9zKTtcclxuXHJcbiAgZnVuY3Rpb24gR2FzdG9zQmFuY2FyaW9zKCRzY29wZSwgJGRvY3VtZW50LCAkbWRUb2FzdCwgJHN0YXRlLCBnYXN0b3NCYW5jYXJpb3NQcmVwU2VydmljZSwgZ2FzdG9zQmFuY2FyaW9zU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubmV3Q29mcmFkZSA9IGZhbHNlO1xyXG5cclxuICAgIHZtLmd1YXJkYXIgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIGdhc3Rvc0JhbmNhcmlvc1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oaW5pdEdhc3RvQmFuY2FyaW8pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRHYXN0b0JhbmNhcmlvKGRhdGEpIHtcclxuICAgICAgdm0uZ2FzdG9CYW5jYXJpbyA9IGRhdGFbMF07XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGd1YXJkYXIoaXNWYWxpZCkge1xyXG4gICAgICBpZihpc1ZhbGlkKXtcclxuICAgICAgICBnYXN0b3NCYW5jYXJpb3NTZXJ2aWNlLmdhc3Rvc0JhbmNhcmlvc1Jlc3QoKS5zYXZlKHZtLmdhc3RvQmFuY2FyaW8sIGd1YXJkYXJTdWNjZXNzLCBndWFyZGFyRXJyb3IpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAgIFxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhclN1Y2Nlc3MocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0d1YXJkYWRvIGNvbiDDqXhpdG8hIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICAgICRzdGF0ZS5nbygnZ2FzdG9zQmFuY2FyaW9zJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFcnJvciBhbCBndWFyZGFyISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHNob3dBY3Rpb25Ub2FzdCgpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0V4aXN0ZW4gZXJyb3JlcyBlbiBlbCBmb3JtdWxhcmlvJylcclxuICAgICAgICAgIC5hY3Rpb24oJ09LJylcclxuICAgICAgICAgIC5oaWdobGlnaHRBY3Rpb24oZmFsc2UpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdOdW1lcm9zTG90ZXJpYScsIE51bWVyb3NMb3RlcmlhKTtcclxuXHJcbiAgZnVuY3Rpb24gTnVtZXJvc0xvdGVyaWEoJHNjb3BlLCAkZG9jdW1lbnQsICRtZFRvYXN0LCAkc3RhdGUsIG51bWVyb3NMb3RlcmlhUHJlcFNlcnZpY2UsIG51bWVyb3NMb3RlcmlhU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubmV3Q29mcmFkZSA9IGZhbHNlO1xyXG5cclxuICAgIHZtLmd1YXJkYXIgPSBndWFyZGFyO1xyXG5cclxuICAgIGFjdGl2YXRlKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcbiAgICAgIG51bWVyb3NMb3RlcmlhUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihpbml0TnVtZXJvc0xvdGVyaWEpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXROdW1lcm9zTG90ZXJpYShkYXRhKSB7XHJcbiAgICAgIHZtLm51bWVyb3NMb3RlcmlhID0gZGF0YVswXTtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhcihpc1ZhbGlkKSB7XHJcbiAgICAgIGlmKGlzVmFsaWQpe1xyXG4gICAgICAgIG51bWVyb3NMb3RlcmlhU2VydmljZS5udW1lcm9zTG90ZXJpYVJlc3QoKS5zYXZlKHZtLm51bWVyb3NMb3RlcmlhLCBndWFyZGFyU3VjY2VzcywgZ3VhcmRhckVycm9yKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzaG93QWN0aW9uVG9hc3QoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgICBcclxuICAgIGZ1bmN0aW9uIGd1YXJkYXJTdWNjZXNzKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdHdWFyZGFkbyBjb24gw6l4aXRvISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICApO1xyXG4gICAgICAkc3RhdGUuZ28oJ251bWVyb3NMb3RlcmlhJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFcnJvciBhbCBndWFyZGFyISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHNob3dBY3Rpb25Ub2FzdCgpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0V4aXN0ZW4gZXJyb3JlcyBlbiBlbCBmb3JtdWxhcmlvJylcclxuICAgICAgICAgIC5hY3Rpb24oJ09LJylcclxuICAgICAgICAgIC5oaWdobGlnaHRBY3Rpb24oZmFsc2UpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdQYXBlbGV0YVNpdGlvQWRkTW9kaWZ5JywgUGFwZWxldGFTaXRpb0FkZE1vZGlmeSk7XHJcblxyXG4gIGZ1bmN0aW9uIFBhcGVsZXRhU2l0aW9BZGRNb2RpZnkoJHNjb3BlLCAkZmlsdGVyLCAkZG9jdW1lbnQsICRtZFRvYXN0LCAkc3RhdGUsICBwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlLCBjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLm5ld0NvZnJhZGUgPSBmYWxzZTtcclxuXHJcbiAgICB2bS5iYWNrU3RhdGUgICAgICAgICAgPSBiYWNrU3RhdGU7XHJcbiAgICB2bS5xdWVyeVNlYXJjaCAgICAgICAgPSBxdWVyeVNlYXJjaDtcclxuICAgIHZtLnNlbGVjdGVkSXRlbUNoYW5nZSA9IHNlbGVjdGVkSXRlbUNoYW5nZTtcclxuICAgIHZtLmd1YXJkYXIgICAgICAgICAgICA9IGd1YXJkYXI7XHJcblxyXG4gICAgbmV3cGFwZWxldGFTaXRpbygpO1xyXG5cclxuICAgIGZ1bmN0aW9uIG5ld3BhcGVsZXRhU2l0aW8oKSB7XHJcbiAgICAgIHZtLm5ld0NvZnJhZGUgPSB0cnVlO1xyXG4gICAgICB2bS5mZWNoYSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XHJcbiAgICAgIHZtLnBhcGVsZXRhU2l0aW8gPSB7Y29mcmFkZTogbnVsbH07XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYmFja1N0YXRlKCkge1xyXG4gICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcXVlcnlTZWFyY2gocXVlcnkpIHtcclxuICAgICAgdmFyIGZpbHRybyA9IHt9O1xyXG4gICAgICBpZiAoaXNOYU4ocXVlcnkpKVxyXG4gICAgICAgIGZpbHRyby5ub21icmUgPSBxdWVyeTtcclxuICAgICAgZWxzZSBpZighaXNOYU4ocXVlcnkpKVxyXG4gICAgICAgIGZpbHRyby5udW1lcm9PcmRlbiA9IHF1ZXJ5O1xyXG5cclxuICAgICAgcmV0dXJuIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5xdWVyeShmaWx0cm8pLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNlbGVjdGVkSXRlbUNoYW5nZShpdGVtKSB7XHJcbiAgICAgIHZtLnBhcGVsZXRhU2l0aW8uY29mcmFkZSA9ICBpdGVtID8gaXRlbS5pZCA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhcihpc1ZhbGlkKSB7XHJcbiAgICAgIGlmKGlzVmFsaWQpe1xyXG4gICAgICAgIGlmICghdm0ucGFwZWxldGFTaXRpby5jb2ZyYWRlKXtcclxuICAgICAgICAgICRzY29wZS5wYXBlbGV0YVNpdGlvRm9ybS5jb2ZyYWRlLiRlcnJvci5yZXF1aXJlZCA9IHRydWU7XHJcbiAgICAgICAgICBzaG93QWN0aW9uVG9hc3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgIHZtLnBhcGVsZXRhU2l0aW8uZmVjaGEgPSB2bS5mZWNoYTtcclxuICAgICAgICAgICRmaWx0ZXIoJ2Zvcm1hdERhdGVzJykodm0ucGFwZWxldGFTaXRpbyk7XHJcbiAgICAgICAgICBwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlLnBhcGVsZXRhc1NpdGlvc1Jlc3QoKS5zYXZlKHthbmlvOiBuZXcgRGF0ZSh2bS5wYXBlbGV0YVNpdGlvLmZlY2hhKS5nZXRGdWxsWWVhcigpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcGVsZXRhczpbdm0ucGFwZWxldGFTaXRpb119LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3VhcmRhclN1Y2Nlc3MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBndWFyZGFyRXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBlbHNlXHJcbiAgICAgICAgc2hvd0FjdGlvblRvYXN0KCk7XHJcbiAgICB9XHJcbiAgICAgIFxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhclN1Y2Nlc3MocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0d1YXJkYWRvIGNvbiDDqXhpdG8hIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICAgICRzdGF0ZS5nbygncGFwZWxldGFzU2l0aW9zJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgJG1kVG9hc3Quc2ltcGxlKClcclxuICAgICAgICAgIC5jb250ZW50KCdFcnJvciBhbCBndWFyZGFyISEnKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHNob3dBY3Rpb25Ub2FzdCgpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0V4aXN0ZW4gZXJyb3JlcyBlbiBlbCBmb3JtdWxhcmlvJylcclxuICAgICAgICAgIC5hY3Rpb24oJ09LJylcclxuICAgICAgICAgIC5oaWdobGlnaHRBY3Rpb24oZmFsc2UpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5wb3NpdGlvbigndG9wIHJpZ2h0JylcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdQYXBlbGV0YXNTaXRpb3MnLCBQYXBlbGV0YXNTaXRpb3MpO1xyXG5cclxuICBmdW5jdGlvbiBQYXBlbGV0YXNTaXRpb3MocGFwZWxldGFzU2l0aW9zUHJlcFNlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLnBhcGVsZXRhc1NpdGlvcyA9IG51bGw7XHJcbiAgICBhY3RpdmF0ZSgpO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIHBhcGVsZXRhc1NpdGlvc1ByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgdm0ucGFwZWxldGFzU2l0aW9zID0gZGF0YTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1NlY3RvckFkZE1vZGlmeScsIFNlY3RvckFkZE1vZGlmeSk7XHJcblxyXG4gIGZ1bmN0aW9uIFNlY3RvckFkZE1vZGlmeSgkc2NvcGUsICRmaWx0ZXIsICRkb2N1bWVudCwgJG1kVG9hc3QsICRzdGF0ZSwgJHN0YXRlUGFyYW1zLCBnZXRTZWN0b3JQcmVwU2VydmljZSwgc2VjdG9yZXNTZXJ2aWNlLCBjb2ZyYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLm5ld0VuY2FyZ2FkbyA9IGZhbHNlO1xyXG4gICAgdm0ubmV3Q2FsbGUgICAgID0gZmFsc2U7XHJcbiAgICB2bS5pbmRleENhbGxlICAgPSBudWxsO1xyXG5cclxuICAgIHZtLmJhY2tTdGF0ZSAgICAgICAgICA9IGJhY2tTdGF0ZTtcclxuICAgIHZtLnF1ZXJ5U2VhcmNoICAgICAgICA9IHF1ZXJ5U2VhcmNoO1xyXG4gICAgdm0uc2VsZWN0ZWRJdGVtQ2hhbmdlID0gc2VsZWN0ZWRJdGVtQ2hhbmdlO1xyXG4gICAgdm0uZ3VhcmRhciAgICAgICAgICAgID0gZ3VhcmRhcjtcclxuXHJcbiAgICBhY3RpdmF0ZSgpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG4gICAgICBpZiAoZ2V0U2VjdG9yUHJlcFNlcnZpY2Upe1xyXG4gICAgICAgIGdldFNlY3RvclByZXBTZXJ2aWNlLiRwcm9taXNlLnRoZW4oaW5pdFNlY3Rvcik7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICBuZXdFbmNhcmdhZG8oKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRTZWN0b3IoZGF0YSkge1xyXG4gICAgICB2bS5zZWN0b3IgPSBkYXRhWzBdO1xyXG4gICAgICB2bS5jb2ZyYWRlU2VsZWN0ZWQgPSB2bS5zZWN0b3IuY29mcmFkZTtcclxuICAgICAgdm0ub3JpZ2luU2VjdG9yID0gdm0uc2VjdG9yLm51bWVyb1NlY3RvcjtcclxuICAgICAgaWYgKCRzdGF0ZVBhcmFtcy5jYWxsZSA9PT0gJ25ldycpe1xyXG4gICAgICAgIHZtLm5ld0NhbGxlID0gdHJ1ZTtcclxuICAgICAgICB2bS5pbmRleENhbGxlID0gdm0uc2VjdG9yLmNhbGxlcy5sZW5ndGg7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZXtcclxuICAgICAgICB2bS5pbmRleENhbGxlID0gKHZtLnNlY3Rvci5jYWxsZXMuaW5kZXhPZigkc3RhdGVQYXJhbXMuY2FsbGUpID4gLTEpID8gdm0uc2VjdG9yLmNhbGxlcy5pbmRleE9mKCRzdGF0ZVBhcmFtcy5jYWxsZSkgOiBudWxsO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG5ld0VuY2FyZ2FkbygpIHtcclxuICAgICAgdm0ubmV3RW5jYXJnYWRvID0gdHJ1ZTtcclxuICAgICAgdm0uc2VjdG9yID0ge2NvZnJhZGU6IG51bGx9O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGJhY2tTdGF0ZSgpIHtcclxuICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHF1ZXJ5U2VhcmNoKHF1ZXJ5KSB7XHJcbiAgICAgIHZhciBmaWx0cm8gPSB7fTtcclxuICAgICAgaWYgKGlzTmFOKHF1ZXJ5KSlcclxuICAgICAgICBmaWx0cm8ubm9tYnJlID0gcXVlcnk7XHJcbiAgICAgIGVsc2UgaWYoIWlzTmFOKHF1ZXJ5KSlcclxuICAgICAgICBmaWx0cm8ubnVtZXJvT3JkZW4gPSBxdWVyeTtcclxuXHJcbiAgICAgIHJldHVybiBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkoZmlsdHJvKS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWxlY3RlZEl0ZW1DaGFuZ2UoaXRlbSkge1xyXG4gICAgICB2bS5zZWN0b3IuY29mcmFkZSA9ICBpdGVtID8gaXRlbS5pZCA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhcihpc1ZhbGlkKSB7XHJcbiAgICAgIGlmKGlzVmFsaWQpe1xyXG4gICAgICAgIGlmICghdm0uc2VjdG9yLmNvZnJhZGUpe1xyXG4gICAgICAgICAgJHNjb3BlLnNlY3RvckZvcm0uY29mcmFkZS4kZXJyb3IucmVxdWlyZWQgPSB0cnVlO1xyXG4gICAgICAgICAgc2hvd0FjdGlvblRvYXN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICBpZiAodm0uc2VjdG9yLm51bWVyb1NlY3RvciA9PT0gdm0ub3JpZ2luU2VjdG9yIHx8IHZtLm5ld0VuY2FyZ2Fkbyl7XHJcbiAgICAgICAgICAgIGd1YXJkYXJTZWN0b3IoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIGd1YXJkYXJDYW1iaW9TZWN0b3IoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNob3dBY3Rpb25Ub2FzdCgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyU2VjdG9yKCl7XHJcbiAgICAgIHNlY3RvcmVzU2VydmljZS5zZWN0b3Jlc1Jlc3QoKS5zYXZlKHZtLnNlY3RvciwgZ3VhcmRhclN1Y2Nlc3MsIGd1YXJkYXJFcnJvcik7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhckNhbWJpb1NlY3Rvcigpe1xyXG4gICAgICBzZWN0b3Jlc1NlcnZpY2Uuc2VjdG9yZXNSZXN0KCkuZ2V0KHtzZWN0b3I6IHZtLnNlY3Rvci5udW1lcm9TZWN0b3J9KS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICBpZiAoIXJlc3BvbnNlWzBdKXtcclxuICAgICAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAgICAgLmNvbnRlbnQoJ05vIGV4aXN0ZSBlc2Ugc2VjdG9yJylcclxuICAgICAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAgICAgLnBhcmVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignI3RvYXN0Qm91bmRzJykpXHJcbiAgICAgICAgICAgICAgLmhpZGVEZWxheSgzMDAwKVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzcG9uc2VbMF0uY29mcmFkZSA9IHJlc3BvbnNlWzBdLmNvZnJhZGUuaWQ7XHJcbiAgICAgICAgcmVzcG9uc2VbMF0uY2FsbGVzLnB1c2godm0uc2VjdG9yLmNhbGxlc1t2bS5pbmRleENhbGxlXSk7XHJcbiAgICAgICAgcmVzcG9uc2VbMF0uJHNhdmUobnVsbCwgZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5zZWN0b3IuY2FsbGVzLnNwbGljZSh2bS5pbmRleENhbGxlLCAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5zZWN0b3IubnVtZXJvU2VjdG9yID0gdm0ub3JpZ2luU2VjdG9yO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGd1YXJkYXJTZWN0b3IoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZ3VhcmRhckVycm9yKTtcclxuICAgICAgICBcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ3VhcmRhclN1Y2Nlc3MocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0d1YXJkYWRvIGNvbiDDqXhpdG8hIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAuaGlkZURlbGF5KDMwMDApXHJcbiAgICAgICk7XHJcbiAgICAgICRzdGF0ZS5nbygnc2VjdG9yZXMnKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBndWFyZGFyRXJyb3IocmVzcG9uc2UpIHtcclxuICAgICAgJG1kVG9hc3Quc2hvdyhcclxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ0Vycm9yIGFsIGd1YXJkYXIhIScpXHJcbiAgICAgICAgICAucG9zaXRpb24oJ3RvcCByaWdodCcpXHJcbiAgICAgICAgICAucGFyZW50KCRkb2N1bWVudFswXS5xdWVyeVNlbGVjdG9yKCcjdG9hc3RCb3VuZHMnKSlcclxuICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2hvd0FjdGlvblRvYXN0KCkge1xyXG4gICAgICAkbWRUb2FzdC5zaG93KFxyXG4gICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAuY29udGVudCgnRXhpc3RlbiBlcnJvcmVzIGVuIGVsIGZvcm11bGFyaW8nKVxyXG4gICAgICAgICAgLmFjdGlvbignT0snKVxyXG4gICAgICAgICAgLmhpZ2hsaWdodEFjdGlvbihmYWxzZSlcclxuICAgICAgICAgIC5wYXJlbnQoJGRvY3VtZW50WzBdLnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdEJvdW5kcycpKVxyXG4gICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1NlY3RvcmVzJywgU2VjdG9yZXMpO1xyXG5cclxuICBmdW5jdGlvbiBTZWN0b3JlcyhzZWN0b3Jlc1ByZXBTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5zZWN0b3JlcyA9IG51bGw7XHJcbiAgICBhY3RpdmF0ZSgpO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuICAgICAgcmV0dXJuIHNlY3RvcmVzUHJlcFNlcnZpY2UuJHByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5zZWN0b3JlcyA9IGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignTGlzdGFBc3BpcmFudGVzJywgTGlzdGFBc3BpcmFudGVzKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFBc3BpcmFudGVzKCRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubW9kaWZ5QXNwaXJhbnRlID0gbW9kaWZ5QXNwaXJhbnRlO1xyXG4gICAgdm0uZ29Ub0FzcGlyYW50ZSAgID0gZ29Ub0FzcGlyYW50ZTtcclxuXHJcbiAgICBmdW5jdGlvbiBnb1RvQXNwaXJhbnRlKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnYXNwaXJhbnRlc0RldGFsbGUnLCB7YXNwaXJhbnRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5QXNwaXJhbnRlKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ2FzcGlyYW50ZXNDYW1iaW9zJywge2FzcGlyYW50ZUlkOiBpZH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YUFzcGlyYW50ZXMnLCBsaXN0YUFzcGlyYW50ZXMpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGFBc3BpcmFudGVzKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2FzcGlyYW50ZXMvbGlzdC9hc3BpcmFudGVzLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBhc3BpcmFudGVzOiAnPWFzcGlyYW50ZXMnICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgc2NvcGUuJHdhdGNoKCd2bS5hc3BpcmFudGVzJywgZnVuY3Rpb24obmV3VmFsKSB7XHJcbiAgICAgICAgICAgIGlmKG5ld1ZhbCkgeyBcclxuICAgICAgICAgICAgICBzY29wZS52bS5hc3BpcmFudGVzU2hvcnQgPSBzY29wZS52bS5hc3BpcmFudGVzLm1hcChmdW5jdGlvbihhc3BpcmFudGUpe1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1eCA9IHtpZDogYXNwaXJhbnRlLmlkLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVjaGE6IGFzcGlyYW50ZS5mZWNoYX07XHJcbiAgICAgICAgICAgICAgICBpZiAoYXNwaXJhbnRlLmNvZnJhZGUpe1xyXG4gICAgICAgICAgICAgICAgICBhdXgubnVtZXJvT3JkZW4gPSBhc3BpcmFudGUuY29mcmFkZS5udW1lcm9PcmRlbjtcclxuICAgICAgICAgICAgICAgICAgYXV4Lm5vbWJyZSA9IGFzcGlyYW50ZS5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5ub21icmUgICAgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNwaXJhbnRlLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMSArICcgJyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNwaXJhbnRlLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBhdXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgdHJ1ZSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdMaXN0YUFzcGlyYW50ZXMnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1JlbW92ZUFzcGlyYW50ZScsIFJlbW92ZUFzcGlyYW50ZSk7XHJcblxyXG4gIGZ1bmN0aW9uIFJlbW92ZUFzcGlyYW50ZSgkc3RhdGUsICRtZERpYWxvZywgYXNwaXJhbnRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ucmVtb3ZlQXNwaXJhbnRlID0gcmVtb3ZlQXNwaXJhbnRlO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVBc3BpcmFudGUoaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHZhciByZW1vdmVEaWFsb2cgPSAkbWREaWFsb2cuY29uZmlybSgpXHJcbiAgICAgICAgICAudGl0bGUoJ0VsaW1pbmFyIGFzcGlyYW50ZScpXHJcbiAgICAgICAgICAuY29udGVudCgnwr9Fc3TDoSBzZWd1cm8gcXVlIGRlc2VhIGVsaW1pbmFyIGVzdGUgYXNwaXJhbnRlPzxicj5QZXJkZXLDoSBzdSBhbnRpZ3VlZGFkLicpXHJcbiAgICAgICAgICAuYXJpYUxhYmVsKCdFbGltaW5hciBhc3BpcmFudGUnKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZW1vdmVEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVtb3ZlRW5kQXNwaXJhbnRlKGlkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRW5kQXNwaXJhbnRlKGlkKXtcclxuICAgICAgdmFyIGFzcGlyYW50ZSA9IGFzcGlyYW50ZXNTZXJ2aWNlLmFzcGlyYW50ZXNSZXN0KCkuZ2V0KHtpZDogaWR9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGFzcGlyYW50ZS4kZGVsZXRlKHtpZDogaWR9KS50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBpZigkc3RhdGUuY3VycmVudC5uYW1lID09PSAnYXNwaXJhbnRlcycpe1xyXG4gICAgICAgICAgICAkc3RhdGUudHJhbnNpdGlvblRvKCRzdGF0ZS5jdXJyZW50LCBudWxsLCB7XHJcbiAgICAgICAgICAgICAgcmVsb2FkOiB0cnVlLFxyXG4gICAgICAgICAgICAgIGluaGVyaXQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICRzdGF0ZS5nbygnYXNwaXJhbnRlcycpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgncmVtb3ZlQXNwaXJhbnRlJywgcmVtb3ZlQXNwaXJhbnRlKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIHJlbW92ZUFzcGlyYW50ZSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9hc3BpcmFudGVzL3JlbW92ZS9yZW1vdmVBc3BpcmFudGUuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGFzcGlyYW50ZUlkOiAnPWFzcGlyYW50ZScgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnUmVtb3ZlQXNwaXJhbnRlJyxcclxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdMaXN0YUF1dG9yaWRhZGVzJywgTGlzdGFBdXRvcmlkYWRlcyk7XHJcblxyXG4gIGZ1bmN0aW9uIExpc3RhQXV0b3JpZGFkZXMoJHN0YXRlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5tb2RpZnlBdXRvcmlkYWQgPSBtb2RpZnlBdXRvcmlkYWQ7XHJcbiAgICB2bS5nb1RvQXV0b3JpZGFkICAgPSBnb1RvQXV0b3JpZGFkO1xyXG5cclxuICAgIGZ1bmN0aW9uIGdvVG9BdXRvcmlkYWQoaWQsIGV2ZW50KXtcclxuICAgICAgJHN0YXRlLmdvKCdhdXRvcmlkYWRlc0RldGFsbGUnLCB7YXV0b3JpZGFkSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5QXV0b3JpZGFkKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ2F1dG9yaWRhZGVzQ2FtYmlvcycsIHthdXRvcmlkYWRJZDogaWR9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnbGlzdGFBdXRvcmlkYWRlcycsIGxpc3RhQXV0b3JpZGFkZXMpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGFBdXRvcmlkYWRlcygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9hdXRvcmlkYWRlcy9saXN0L2F1dG9yaWRhZGVzLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBhdXRvcmlkYWRlczogJz1hdXRvcmlkYWRlcycgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnTGlzdGFBdXRvcmlkYWRlcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlQXV0b3JpZGFkJywgUmVtb3ZlQXV0b3JpZGFkKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVtb3ZlQXV0b3JpZGFkKCRzdGF0ZSwgJG1kRGlhbG9nLCBhdXRvcmlkYWRlc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ucmVtb3ZlQXV0b3JpZGFkID0gcmVtb3ZlQXV0b3JpZGFkO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVBdXRvcmlkYWQoaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHZhciByZW1vdmVEaWFsb2cgPSAkbWREaWFsb2cuY29uZmlybSgpXHJcbiAgICAgICAgICAudGl0bGUoJ0VsaW1pbmFyIGF1dG9yaWRhZCcpXHJcbiAgICAgICAgICAuY29udGVudCgnwr9Fc3TDoSBzZWd1cm8gcXVlIGRlc2VhIGVsaW1pbmFyIGVzdGUgYXV0b3JpZGFkPycpXHJcbiAgICAgICAgICAuYXJpYUxhYmVsKCdFbGltaW5hciBhdXRvcmlkYWQnKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZW1vdmVEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVtb3ZlRW5kQXV0b3JpZGFkKGlkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRW5kQXV0b3JpZGFkKGlkKXtcclxuICAgICAgdmFyIGF1dG9yaWRhZCA9IGF1dG9yaWRhZGVzU2VydmljZS5hdXRvcmlkYWRlc1Jlc3QoKS5nZXQoe2lkOiBpZH0sIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgYXV0b3JpZGFkLiRkZWxldGUoe2lkOiBpZH0pLnRoZW4oZnVuY3Rpb24oKXtcclxuICAgICAgICAgIGlmKCRzdGF0ZS5jdXJyZW50Lm5hbWUgPT09ICdhdXRvcmlkYWRlcycpe1xyXG4gICAgICAgICAgICAkc3RhdGUudHJhbnNpdGlvblRvKCRzdGF0ZS5jdXJyZW50LCBudWxsLCB7XHJcbiAgICAgICAgICAgICAgcmVsb2FkOiB0cnVlLFxyXG4gICAgICAgICAgICAgIGluaGVyaXQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICRzdGF0ZS5nbygnYXV0b3JpZGFkZXMnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3JlbW92ZUF1dG9yaWRhZCcsIHJlbW92ZUF1dG9yaWRhZCk7XHJcblxyXG5cclxuICBmdW5jdGlvbiByZW1vdmVBdXRvcmlkYWQoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvYXV0b3JpZGFkZXMvcmVtb3ZlL3JlbW92ZUF1dG9yaWRhZC5kaXJlY3RpdmUuaHRtbCcsXHJcbiAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgYXV0b3JpZGFkSWQ6ICc9YXV0b3JpZGFkJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdSZW1vdmVBdXRvcmlkYWQnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0xpc3RhQ29mcmFkZXMnLCBMaXN0YUNvZnJhZGVzKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFDb2ZyYWRlcygkcm9vdFNjb3BlLCAkc2NvcGUsICRzdGF0ZSwgY29mcmFkZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5maWx0cm8gICAgPSAnbm9tYnJlJztcclxuICAgIHZtLmJ1c2NhciAgICA9IG51bGw7XHJcblxyXG4gICAgdm0uc2VhcmNoICAgICAgICAgPSBzZWFyY2g7XHJcbiAgICB2bS5nb1RvQ29mcmFkZSAgICA9IGdvVG9Db2ZyYWRlO1xyXG4gICAgdm0ubW9kaWZ5Q29mcmFkZSAgPSBtb2RpZnlDb2ZyYWRlO1xyXG4gICAgdm0uY2hhbmdlVGFiICAgICAgPSBjaGFuZ2VUYWI7XHJcblxyXG4gICAgdmFyIGhhbmRsZXIgPSAkcm9vdFNjb3BlLiRvbignc2Nyb2xsRG93bicsIGdldE5leHRQYWdlKTtcclxuXHJcbiAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCkge1xyXG4gICAgICBoYW5kbGVyKCk7XHJcbiAgICAgIGhhbmRsZXIgPSBudWxsO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0TmV4dFBhZ2UoKSB7XHJcbiAgICAgIGlmICghdm0uYmFqYXMpXHJcbiAgICAgICAgZ2V0TmV4dFBhZ2VBbHRhcygpO1xyXG4gICAgICBlbHNlXHJcbiAgICAgICAgZ2V0TmV4dFBhZ2VCYWphcygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldE5leHRQYWdlQWx0YXMoKSB7XHJcbiAgICAgIGlmICh2bS5uZXh0UGFnZSl7XHJcbiAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSB7cGFnZTogdm0ubmV4dFBhZ2V9O1xyXG5cclxuICAgICAgICBpZiAodm0uYnVzY2FyKVxyXG4gICAgICAgICAgcGFyYW1ldGVyc1t2bS5maWx0cm9dID0gdm0uYnVzY2FyO1xyXG5cclxuICAgICAgICBjb2ZyYWRlc1NlcnZpY2UuY29mcmFkZXNSZXN0KCkucXVlcnkocGFyYW1ldGVycywgZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2bS5uZXh0UGFnZSA9IGRhdGEubmV4dDtcclxuICAgICAgICAgIHZtLmNvZnJhZGVzID0gdm0uY29mcmFkZXMuY29uY2F0KGRhdGEucmVzdWx0cyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXROZXh0UGFnZUJhamFzKCkge1xyXG4gICAgICBpZiAodm0ubmV4dFBhZ2VCYWphcyl7XHJcbiAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSB7cGFnZTogdm0ubmV4dFBhZ2VCYWphc307XHJcblxyXG4gICAgICAgIGlmICh2bS5idXNjYXIpXHJcbiAgICAgICAgICBwYXJhbWV0ZXJzW3ZtLmZpbHRyb10gPSB2bS5idXNjYXI7XHJcblxyXG4gICAgICAgIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc0JhamFzUmVzdCgpLnF1ZXJ5KHBhcmFtZXRlcnMsIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgdm0ubmV4dFBhZ2VCYWphcyA9IGRhdGEubmV4dDtcclxuICAgICAgICAgIHZtLmNvZnJhZGVzQmFqYXMgPSB2bS5jb2ZyYWRlc0JhamFzLmNvbmNhdChkYXRhLnJlc3VsdHMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VhcmNoKCkge1xyXG4gICAgICB2bS5maWx0cm8gPSAoIGlzTmFOKHZtLmJ1c2NhcikpID8gJ25vbWJyZSc6ICdudW1lcm9PcmRlbic7XHJcbiAgICAgIGlmICghdm0uYmFqYXMpXHJcbiAgICAgICAgc2VhcmNoQWx0YXMoKTtcclxuICAgICAgZWxzZVxyXG4gICAgICAgIHNlYXJjaEJhamFzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VhcmNoQWx0YXMoKSB7XHJcbiAgICAgIHZhciBmaWx0cm8gPSB7fTtcclxuICAgICAgZmlsdHJvW3ZtLmZpbHRyb10gPSB2bS5idXNjYXI7XHJcbiAgICAgIGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5xdWVyeShmaWx0cm8sIGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZtLm5leHRQYWdlID0gZGF0YS5uZXh0O1xyXG4gICAgICAgIHZtLmNvZnJhZGVzID0gZGF0YS5yZXN1bHRzO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWFyY2hCYWphcygpIHtcclxuICAgICAgdmFyIGZpbHRybyA9IHt9O1xyXG4gICAgICBmaWx0cm9bdm0uZmlsdHJvXSA9IHZtLmJ1c2NhcjtcclxuICAgICAgY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzQmFqYXNSZXN0KCkucXVlcnkoZmlsdHJvLCBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2bS5uZXh0UGFnZUJhamFzID0gZGF0YS5uZXh0O1xyXG4gICAgICAgIHZtLmNvZnJhZGVzQmFqYXMgPSBkYXRhLnJlc3VsdHM7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdvVG9Db2ZyYWRlKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnY29mcmFkZXNEZXRhbGxlJywge2NvZnJhZGVJZDogaWR9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2RpZnlDb2ZyYWRlKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzQ2FtYmlvcycsIHtjb2ZyYWRlSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2hhbmdlVGFiKCl7XHJcbiAgICAgIHZtLnNlYXJjaCgpO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YUNvZnJhZGVzJywgbGlzdGFDb2ZyYWRlcyk7XHJcblxyXG5cclxuICBmdW5jdGlvbiBsaXN0YUNvZnJhZGVzKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL2xpc3QvY29mcmFkZXMuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGNvZnJhZGVzOiAnPWNvZnJhZGVzJyxcclxuICAgICAgICBuZXh0UGFnZTogJz1wYWdlJyxcclxuICAgICAgICBjb2ZyYWRlc0JhamFzOiAnPWNvZnJhZGVzQmFqYXMnLFxyXG4gICAgICAgIG5leHRQYWdlQmFqYXM6ICc9cGFnZUJhamFzJ1xyXG4gICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnTGlzdGFDb2ZyYWRlcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlQ29mcmFkZScsIFJlbW92ZUNvZnJhZGUpO1xyXG5cclxuICBmdW5jdGlvbiBSZW1vdmVDb2ZyYWRlKCRzdGF0ZSwgJG1kRGlhbG9nKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLnJlbW92ZUNvZnJhZGUgPSByZW1vdmVDb2ZyYWRlO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVDb2ZyYWRlKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyh7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL3JlbW92ZS9kaWFsb2dUbXBsL3JlbW92ZUNvZnJhZGUudG1wbC5odG1sJyxcclxuICAgICAgICBsb2NhbHM6IHtpZDogaWR9LFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdSZW1vdmVDb2ZyYWRlVG1wbCcsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcbiAgICAgICAgdGFyZ2V0RXZlbnQ6IGV2ZW50LFxyXG4gICAgICAgIGNsaWNrT3V0c2lkZVRvQ2xvc2U6dHJ1ZVxyXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIC8vcmVtb3ZlRW5kQ29mcmFkZShpZCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3JlbW92ZUNvZnJhZGUnLCByZW1vdmVDb2ZyYWRlKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIHJlbW92ZUNvZnJhZGUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvY29mcmFkZXMvcmVtb3ZlL3JlbW92ZUNvZnJhZGUuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGNvZnJhZGVJZDogJz1jb2ZyYWRlJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdSZW1vdmVDb2ZyYWRlJyxcclxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdSZXN0b3JlQ29mcmFkZScsIFJlc3RvcmVDb2ZyYWRlKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVzdG9yZUNvZnJhZGUoJHN0YXRlLCAkbWREaWFsb2csIGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5yZXN0b3JlQ29mcmFkZSA9IHJlc3RvcmVDb2ZyYWRlO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZXN0b3JlQ29mcmFkZShpZCwgZXZlbnQpe1xyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgdmFyIHJlc3RhdXJhckRpYWxvZyA9ICRtZERpYWxvZy5jb25maXJtKClcclxuICAgICAgICAgIC50aXRsZSgnUmVzdGF1cmFyIGNvZnJhZGUnKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ8K/RXN0w6Egc2VndXJvIHF1ZSBkZXNlYSByZXN0YXVyYXIgZXN0ZSBjb2ZyYWRlPzxicj5TdSBuw7ptZXJvIGRlIENvZnJhZGUgc2UgY2FsY3VsYXLDoSBkZSBudWV2by4nKVxyXG4gICAgICAgICAgLmFyaWFMYWJlbCgnUmVzdGF1cmFyIGNvZnJhZGUnKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZXN0YXVyYXJEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVzdG9yZUVuZENvZnJhZGUoaWQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZXN0b3JlRW5kQ29mcmFkZShpZCl7XHJcbiAgICAgIHZhciBjb2ZyYWRlID0gY29mcmFkZXNTZXJ2aWNlLmNvZnJhZGVzUmVzdCgpLmdldCh7aWQ6IGlkfSwgZnVuY3Rpb24oKXtcclxuICAgICAgICBjb2ZyYWRlLmJhamEgPSBudWxsO1xyXG4gICAgICAgIGNvZnJhZGUuJHNhdmUoe3VwZGF0ZU51bWVyb0NvZnJhZGU6IHRydWV9KS50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBpZigkc3RhdGUuY3VycmVudC5uYW1lID09PSAnY29mcmFkZXMnKXtcclxuICAgICAgICAgICAgJHN0YXRlLnRyYW5zaXRpb25Ubygkc3RhdGUuY3VycmVudCwgbnVsbCwge1xyXG4gICAgICAgICAgICAgIHJlbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgICBub3RpZnk6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2NvZnJhZGVzJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdyZXN0b3JlQ29mcmFkZScsIHJlc3RvcmVDb2ZyYWRlKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIHJlc3RvcmVDb2ZyYWRlKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2NvZnJhZGVzL3Jlc3RvcmUvcmVzdG9yZUNvZnJhZGUuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGNvZnJhZGVJZDogJz1jb2ZyYWRlJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdSZXN0b3JlQ29mcmFkZScsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignTGlzdGFDb3N0YWxlcm9zJywgTGlzdGFDb3N0YWxlcm9zKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFDb3N0YWxlcm9zKCRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubW9kaWZ5Q29zdGFsZXJvID0gbW9kaWZ5Q29zdGFsZXJvO1xyXG4gICAgdm0uZ29Ub0Nvc3RhbGVybyAgID0gZ29Ub0Nvc3RhbGVybztcclxuXHJcbiAgICBmdW5jdGlvbiBnb1RvQ29zdGFsZXJvKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnY29zdGFsZXJvc0RldGFsbGUnLCB7Y29zdGFsZXJvSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5Q29zdGFsZXJvKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3NDYW1iaW9zJywge2Nvc3RhbGVyb0lkOiBpZH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YUNvc3RhbGVyb3MnLCBsaXN0YUNvc3RhbGVyb3MpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGFDb3N0YWxlcm9zKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2Nvc3RhbGVyb3MvbGlzdC9jb3N0YWxlcm9zLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb3N0YWxlcm9zOiAnPWNvc3RhbGVyb3MnICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgc2NvcGUuJHdhdGNoKCd2bS5jb3N0YWxlcm9zJywgZnVuY3Rpb24obmV3VmFsKSB7XHJcbiAgICAgICAgICAgIGlmKG5ld1ZhbCkgeyBcclxuICAgICAgICAgICAgICBzY29wZS52bS5jb3N0YWxlcm9zU2hvcnQgPSBzY29wZS52bS5jb3N0YWxlcm9zLm1hcChmdW5jdGlvbihjb3N0YWxlcm8pe1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1eCA9IHtpZDogY29zdGFsZXJvLmlkLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l0aW86IGNvc3RhbGVyby5zaXRpb307XHJcbiAgICAgICAgICAgICAgICBpZiAoY29zdGFsZXJvLmNvZnJhZGUpe1xyXG4gICAgICAgICAgICAgICAgICBhdXgubnVtZXJvT3JkZW4gPSBjb3N0YWxlcm8uY29mcmFkZS5udW1lcm9PcmRlbjtcclxuICAgICAgICAgICAgICAgICAgYXV4Lm5vbWJyZSA9IGNvc3RhbGVyby5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5ub21icmUgICAgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdGFsZXJvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMSArICcgJyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdGFsZXJvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBhdXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgdHJ1ZSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdMaXN0YUNvc3RhbGVyb3MnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1JlbW92ZUNvc3RhbGVybycsIFJlbW92ZUNvc3RhbGVybyk7XHJcblxyXG4gIGZ1bmN0aW9uIFJlbW92ZUNvc3RhbGVybygkc3RhdGUsICRtZERpYWxvZywgY29zdGFsZXJvc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ucmVtb3ZlQ29zdGFsZXJvID0gcmVtb3ZlQ29zdGFsZXJvO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVDb3N0YWxlcm8oaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHZhciByZW1vdmVEaWFsb2cgPSAkbWREaWFsb2cuY29uZmlybSgpXHJcbiAgICAgICAgICAudGl0bGUoJ0VsaW1pbmFyIGNvc3RhbGVybycpXHJcbiAgICAgICAgICAuY29udGVudCgnwr9Fc3TDoSBzZWd1cm8gcXVlIGRlc2VhIGVsaW1pbmFyIGVzdGUgY29zdGFsZXJvPzxicj5EZWphcsOhIHN1IHNpdGlvIGxpYnJlLicpXHJcbiAgICAgICAgICAuYXJpYUxhYmVsKCdFbGltaW5hciBjb3N0YWxlcm8nKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZW1vdmVEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVtb3ZlRW5kQ29zdGFsZXJvKGlkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRW5kQ29zdGFsZXJvKGlkKXtcclxuICAgICAgdmFyIGNvc3RhbGVybyA9IGNvc3RhbGVyb3NTZXJ2aWNlLmNvc3RhbGVyb3NSZXN0KCkuZ2V0KHtpZDogaWR9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGNvc3RhbGVyby5jb2ZyYWRlID0gbnVsbDtcclxuICAgICAgICBjb3N0YWxlcm8udGFsbGEgPSBudWxsO1xyXG4gICAgICAgIGNvc3RhbGVyby5mZWNoYSA9IG51bGw7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29zdGFsZXJvLiRzYXZlKCkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgaWYoJHN0YXRlLmN1cnJlbnQubmFtZSA9PT0gJ2Nvc3RhbGVyb3MnKXtcclxuICAgICAgICAgICAgJHN0YXRlLnRyYW5zaXRpb25Ubygkc3RhdGUuY3VycmVudCwgbnVsbCwge1xyXG4gICAgICAgICAgICAgIHJlbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgICBub3RpZnk6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2Nvc3RhbGVyb3MnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ3JlbW92ZUNvc3RhbGVybycsIHJlbW92ZUNvc3RhbGVybyk7XHJcblxyXG5cclxuICBmdW5jdGlvbiByZW1vdmVDb3N0YWxlcm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvY29zdGFsZXJvcy9yZW1vdmUvcmVtb3ZlQ29zdGFsZXJvLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBjb3N0YWxlcm9JZDogJz1jb3N0YWxlcm8nICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgY29udHJvbGxlcjogJ1JlbW92ZUNvc3RhbGVybycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignTGlzdGFEaXJlY3Rpdm9zJywgTGlzdGFEaXJlY3Rpdm9zKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFEaXJlY3Rpdm9zKCRzdGF0ZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIFxyXG4gICAgdm0ubW9kaWZ5RGlyZWN0aXZvID0gbW9kaWZ5RGlyZWN0aXZvO1xyXG4gICAgdm0uZ29Ub0RpcmVjdGl2byAgID0gZ29Ub0RpcmVjdGl2bztcclxuXHJcbiAgICBmdW5jdGlvbiBnb1RvRGlyZWN0aXZvKGlkLCBldmVudCl7XHJcbiAgICAgICRzdGF0ZS5nbygnZGlyZWN0aXZvc0RldGFsbGUnLCB7ZGlyZWN0aXZvSWQ6IGlkfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5RGlyZWN0aXZvKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ2RpcmVjdGl2b3NDYW1iaW9zJywge2RpcmVjdGl2b0lkOiBpZH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YURpcmVjdGl2b3MnLCBsaXN0YURpcmVjdGl2b3MpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGFEaXJlY3Rpdm9zKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL2RpcmVjdGl2b3MvbGlzdC9kaXJlY3Rpdm9zLmRpcmVjdGl2ZS5odG1sJyxcclxuICAgICAgc2NvcGU6IHtcclxuICAgICAgICBkaXJlY3Rpdm9zOiAnPWRpcmVjdGl2b3MnICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgc2NvcGUuJHdhdGNoKCd2bS5kaXJlY3Rpdm9zJywgZnVuY3Rpb24obmV3VmFsKSB7XHJcbiAgICAgICAgICAgIGlmKG5ld1ZhbCkgeyBcclxuICAgICAgICAgICAgICBzY29wZS52bS5kaXJlY3Rpdm9zU2hvcnQgPSBzY29wZS52bS5kaXJlY3Rpdm9zLm1hcChmdW5jdGlvbihkaXJlY3Rpdm8pe1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1eCA9IHtpZDogZGlyZWN0aXZvLmlkLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaWNpb246IGRpcmVjdGl2by5wb3NpY2lvbn07XHJcbiAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aXZvLmNvZnJhZGUpe1xyXG4gICAgICAgICAgICAgICAgICBhdXgubnVtZXJvT3JkZW4gPSBkaXJlY3Rpdm8uY29mcmFkZS5udW1lcm9PcmRlbjtcclxuICAgICAgICAgICAgICAgICAgYXV4Lm5vbWJyZSA9IGRpcmVjdGl2by5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5ub21icmUgICAgKyAnICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMSArICcgJyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZvLmNvZnJhZGUuZGF0b3NQZXJzb25hbGVzLmFwZWxsaWRvMjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBhdXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgdHJ1ZSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdMaXN0YURpcmVjdGl2b3MnLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ1JlbW92ZURpcmVjdGl2bycsIFJlbW92ZURpcmVjdGl2byk7XHJcblxyXG4gIGZ1bmN0aW9uIFJlbW92ZURpcmVjdGl2bygkc3RhdGUsICRtZERpYWxvZywgZGlyZWN0aXZvc1NlcnZpY2UpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0ucmVtb3ZlRGlyZWN0aXZvID0gcmVtb3ZlRGlyZWN0aXZvO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVEaXJlY3Rpdm8oaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHZhciByZW1vdmVEaWFsb2cgPSAkbWREaWFsb2cuY29uZmlybSgpXHJcbiAgICAgICAgICAudGl0bGUoJ0VsaW1pbmFyIGRpcmVjdGl2bycpXHJcbiAgICAgICAgICAuY29udGVudCgnwr9Fc3TDoSBzZWd1cm8gcXVlIGRlc2VhIGVsaW1pbmFyIGVzdGUgZGlyZWN0aXZvPycpXHJcbiAgICAgICAgICAuYXJpYUxhYmVsKCdFbGltaW5hciBkaXJlY3Rpdm8nKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZW1vdmVEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVtb3ZlRW5kRGlyZWN0aXZvKGlkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRW5kRGlyZWN0aXZvKGlkKXtcclxuICAgICAgdmFyIGRpcmVjdGl2byA9IGRpcmVjdGl2b3NTZXJ2aWNlLmRpcmVjdGl2b3NSZXN0KCkuZ2V0KHtpZDogaWR9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGRpcmVjdGl2by4kZGVsZXRlKHtpZDogaWR9KS50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBpZigkc3RhdGUuY3VycmVudC5uYW1lID09PSAnZGlyZWN0aXZvcycpe1xyXG4gICAgICAgICAgICAkc3RhdGUudHJhbnNpdGlvblRvKCRzdGF0ZS5jdXJyZW50LCBudWxsLCB7XHJcbiAgICAgICAgICAgICAgcmVsb2FkOiB0cnVlLFxyXG4gICAgICAgICAgICAgIGluaGVyaXQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICRzdGF0ZS5nbygnZGlyZWN0aXZvcycpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgncmVtb3ZlRGlyZWN0aXZvJywgcmVtb3ZlRGlyZWN0aXZvKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIHJlbW92ZURpcmVjdGl2bygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9kaXJlY3Rpdm9zL3JlbW92ZS9yZW1vdmVEaXJlY3Rpdm8uZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIGRpcmVjdGl2b0lkOiAnPWRpcmVjdGl2bycgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnUmVtb3ZlRGlyZWN0aXZvJyxcclxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdMaXN0YVBhcGVsZXRhc1NpdGlvcycsIExpc3RhUGFwZWxldGFzU2l0aW9zKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFQYXBlbGV0YXNTaXRpb3MoJHN0YXRlLCBwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgXHJcbiAgICB2bS5hbmlvID0gbnVsbDtcclxuXHJcbiAgICB2bS5nZXRBbmlvID0gZ2V0QW5pbztcclxuXHJcbiAgICBmdW5jdGlvbiBnZXRBbmlvKCl7XHJcbiAgICAgIHBhcGVsZXRhc1NpdGlvc1NlcnZpY2UucGFwZWxldGFzU2l0aW9zUmVzdCgpLnF1ZXJ5KHthbmlvOiB2bS5hbmlvfSwgZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAgIHZtLnBhcGVsZXRhc1NpdGlvID0gcmVzcG9uc2VbMF07XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdsaXN0YVBhcGVsZXRhc1NpdGlvcycsIGxpc3RhUGFwZWxldGFzU2l0aW9zKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RhUGFwZWxldGFzU2l0aW9zKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL3BhcGVsZXRhc1NpdGlvcy9saXN0L3BhcGVsZXRhc1NpdGlvcy5kaXJlY3RpdmUuaHRtbCcsXHJcbiAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgYW5pb3M6ICc9cGFwZWxldGFzJyAgICAgICAgXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbnRyb2xsZXI6ICdMaXN0YVBhcGVsZXRhc1NpdGlvcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlUGFwZWxldGFTaXRpbycsIFJlbW92ZVBhcGVsZXRhU2l0aW8pO1xyXG5cclxuICBmdW5jdGlvbiBSZW1vdmVQYXBlbGV0YVNpdGlvKCRzdGF0ZSwgJG1kRGlhbG9nLCBwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLnJlbW92ZVBhcGVsZXRhU2l0aW8gPSByZW1vdmVQYXBlbGV0YVNpdGlvO1xyXG4gICAgXHJcbiAgICBmdW5jdGlvbiByZW1vdmVQYXBlbGV0YVNpdGlvKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICB2YXIgcmVtb3ZlRGlhbG9nID0gJG1kRGlhbG9nLmNvbmZpcm0oKVxyXG4gICAgICAgICAgLnRpdGxlKCdFbGltaW5hciBwYXBlbGV0YSBzaXRpbycpXHJcbiAgICAgICAgICAuY29udGVudCgnwr9Fc3TDoSBzZWd1cm8gcXVlIGRlc2VhIGVsaW1pbmFyIGVzdGEgcGFwZWxldGEgZGUgc2l0aW8/JylcclxuICAgICAgICAgIC5hcmlhTGFiZWwoJ0VsaW1pbmFyIHBhcGVsZXRhU2l0aW8nKVxyXG4gICAgICAgICAgLnRhcmdldEV2ZW50KGV2ZW50KVxyXG4gICAgICAgICAgLm9rKCdBY2VwdGFyJylcclxuICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJylcclxuICAgICAgICAgIC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpO1xyXG4gICAgICAkbWREaWFsb2cuc2hvdyhyZW1vdmVEaWFsb2cpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmVtb3ZlRW5kUGFwZWxldGFTaXRpbyhpZCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJlbW92ZUVuZFBhcGVsZXRhU2l0aW8ocGFwZWxldGFPYmope1xyXG4gICAgICBwYXBlbGV0YXNTaXRpb3NTZXJ2aWNlLnBhcGVsZXRhc1NpdGlvc1Jlc3QoKS5zYXZlKHthbmlvOiBwYXBlbGV0YU9iai5hbmlvLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFwZWxldGFzOiBbcGFwZWxldGFPYmoucGFwZWxldGFdLCByZW1vdmU6IHRydWV9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGlmKCRzdGF0ZS5jdXJyZW50Lm5hbWUgPT09ICdwYXBlbGV0YXNTaXRpb3MnKXtcclxuICAgICAgICAgICRzdGF0ZS50cmFuc2l0aW9uVG8oJHN0YXRlLmN1cnJlbnQsIG51bGwsIHtcclxuICAgICAgICAgICAgcmVsb2FkOiB0cnVlLFxyXG4gICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgbm90aWZ5OiB0cnVlXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICRzdGF0ZS5nbygncGFwZWxldGFzU2l0aW9zJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgncmVtb3ZlUGFwZWxldGFTaXRpbycsIHJlbW92ZVBhcGVsZXRhU2l0aW8pO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlUGFwZWxldGFTaXRpbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZGlyZWN0aXZlcy9wYXBlbGV0YXNTaXRpb3MvcmVtb3ZlL3JlbW92ZVBhcGVsZXRhU2l0aW8uZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIHBhcGVsZXRhU2l0aW86ICc9cGFwZWxldGEnICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgY29udHJvbGxlcjogJ1JlbW92ZVBhcGVsZXRhU2l0aW8nLFxyXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdhcHAnKVxyXG4gICAgLmNvbnRyb2xsZXIoJ0xpc3RhU2VjdG9yZXMnLCBMaXN0YVNlY3RvcmVzKTtcclxuXHJcbiAgZnVuY3Rpb24gTGlzdGFTZWN0b3Jlcygkc3RhdGUpIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICBcclxuICAgIHZtLm1vZGlmeVNlY3RvciA9IG1vZGlmeVNlY3RvcjtcclxuICAgIHZtLm1vZGlmeUNhbGxlICA9IG1vZGlmeUNhbGxlO1xyXG4gICAgdm0uYWRkQ2FsbGUgICAgID0gYWRkQ2FsbGU7XHJcbiAgICB2bS5zaG93Q2FsbGVzICAgPSBzaG93Q2FsbGVzO1xyXG5cclxuICAgIGZ1bmN0aW9uIHNob3dDYWxsZXMoc2VjdG9yLCBldmVudCl7XHJcbiAgICAgIHNlY3RvciA9ICdjYWxsZXNTZWN0b3InK3NlY3RvcjtcclxuICAgICAgYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNlY3RvcikpLnRvZ2dsZUNsYXNzKCdvY3VsdGFyJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW9kaWZ5U2VjdG9yKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAkc3RhdGUuZ28oJ3NlY3RvcmVzQ2FtYmlvcycsIHtzZWN0b3JJZDogaWR9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb2RpZnlDYWxsZShpZCwgY2FsbGUsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICRzdGF0ZS5nbygnc2VjdG9yZXNDYW1iaW9zJywge3NlY3RvcklkOiBpZCwgY2FsbGU6IGNhbGxlfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYWRkQ2FsbGUoaWQsIGV2ZW50KXtcclxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICRzdGF0ZS5nbygnc2VjdG9yZXNDYW1iaW9zJywge3NlY3RvcklkOiBpZCwgY2FsbGU6ICduZXcnfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ2xpc3RhU2VjdG9yZXMnLCBsaXN0YVNlY3RvcmVzKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RhU2VjdG9yZXMoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogJy4vdGVtcGxhdGVzL2RpcmVjdGl2ZXMvc2VjdG9yZXMvbGlzdC9zZWN0b3Jlcy5kaXJlY3RpdmUuaHRtbCcsXHJcbiAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgc2VjdG9yZXM6ICc9c2VjdG9yZXMnICAgICAgICBcclxuICAgICAgfSxcclxuICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgc2NvcGUuJHdhdGNoKCd2bS5zZWN0b3JlcycsIGZ1bmN0aW9uKG5ld1ZhbCkge1xyXG4gICAgICAgICAgICBpZihuZXdWYWwpIHsgXHJcbiAgICAgICAgICAgICAgc2NvcGUudm0uc2VjdG9yZXNTaG9ydCA9IHNjb3BlLnZtLnNlY3RvcmVzLm1hcChmdW5jdGlvbihzZWN0b3Ipe1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1eCA9IHtpZDogc2VjdG9yLmlkLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtZXJvU2VjdG9yOiBzZWN0b3IubnVtZXJvU2VjdG9yLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsZXM6IHNlY3Rvci5jYWxsZXN9O1xyXG4gICAgICAgICAgICAgICAgaWYgKHNlY3Rvci5jb2ZyYWRlKXtcclxuICAgICAgICAgICAgICAgICAgYXV4Lm51bWVyb09yZGVuID0gc2VjdG9yLmNvZnJhZGUubnVtZXJvT3JkZW47XHJcbiAgICAgICAgICAgICAgICAgIGF1eC5ub21icmUgPSBzZWN0b3IuY29mcmFkZS5kYXRvc1BlcnNvbmFsZXMubm9tYnJlICAgICsgJyAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rvci5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5hcGVsbGlkbzEgKyAnICcgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rvci5jb2ZyYWRlLmRhdG9zUGVyc29uYWxlcy5hcGVsbGlkbzI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIHRydWUpO1xyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnTGlzdGFTZWN0b3JlcycsXHJcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuY29udHJvbGxlcignUmVtb3ZlU2VjdG9yJywgUmVtb3ZlU2VjdG9yKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVtb3ZlU2VjdG9yKCRzdGF0ZSwgJG1kRGlhbG9nLCAkbWRUb2FzdCwgc2VjdG9yZXNTZXJ2aWNlKSB7XHJcbiAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgIHZtLnJlbW92ZVNlY3RvciA9IHJlbW92ZVNlY3RvcjtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlU2VjdG9yKGlkLCBldmVudCl7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICB2YXIgcmVtb3ZlRGlhbG9nID0gJG1kRGlhbG9nLmNvbmZpcm0oKVxyXG4gICAgICAgICAgLnRpdGxlKCdFbGltaW5hciBzZWN0b3InKVxyXG4gICAgICAgICAgLmNvbnRlbnQoJ8K/RXN0w6Egc2VndXJvIHF1ZSBkZXNlYSBlbGltaW5hciBlc3RlIHNlY3Rvcj8nKVxyXG4gICAgICAgICAgLmFyaWFMYWJlbCgnRWxpbWluYXIgc2VjdG9yJylcclxuICAgICAgICAgIC50YXJnZXRFdmVudChldmVudClcclxuICAgICAgICAgIC5vaygnQWNlcHRhcicpXHJcbiAgICAgICAgICAuY2FuY2VsKCdDYW5jZWxhcicpXHJcbiAgICAgICAgICAuY2xpY2tPdXRzaWRlVG9DbG9zZSh0cnVlKTtcclxuICAgICAgJG1kRGlhbG9nLnNob3cocmVtb3ZlRGlhbG9nKS50aGVuKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJlbW92ZUVuZFNlY3RvcihpZCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJlbW92ZUVuZFNlY3RvcihpZCl7XHJcbiAgICAgIHZhciBzZWN0b3IgPSBzZWN0b3Jlc1NlcnZpY2Uuc2VjdG9yZXNSZXN0KCkuZ2V0KHtpZDogaWR9LCBmdW5jdGlvbigpe1xyXG4gICAgICAgIGlmKHNlY3RvclswXS5jYWxsZXMubGVuZ3RoICE9PSAwKXtcclxuICAgICAgICAgICRtZFRvYXN0LnNob3coXHJcbiAgICAgICAgICAgICRtZFRvYXN0LnNpbXBsZSgpXHJcbiAgICAgICAgICAgICAgLmNvbnRlbnQoJ05vIHNlIHB1ZWRlIGVsaW1pbmFyIHVuIHNlY3RvciBjb24gY2FsbGVzIGFzaWduYWRhcycpXHJcbiAgICAgICAgICAgICAgLnBvc2l0aW9uKCd0b3AgcmlnaHQnKVxyXG4gICAgICAgICAgICAgIC5oaWRlRGVsYXkoMzAwMClcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICBzZWN0b3JbMF0uJGRlbGV0ZSh7aWQ6IGlkfSkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBpZigkc3RhdGUuY3VycmVudC5uYW1lID09PSAnc2VjdG9yZXMnKXtcclxuICAgICAgICAgICAgICAkc3RhdGUudHJhbnNpdGlvblRvKCRzdGF0ZS5jdXJyZW50LCBudWxsLCB7XHJcbiAgICAgICAgICAgICAgICByZWxvYWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBpbmhlcml0OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgJHN0YXRlLmdvKCdzZWN0b3JlcycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdyZW1vdmVTZWN0b3InLCByZW1vdmVTZWN0b3IpO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlU2VjdG9yKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9kaXJlY3RpdmVzL3NlY3RvcmVzL3JlbW92ZS9yZW1vdmVTZWN0b3IuZGlyZWN0aXZlLmh0bWwnLFxyXG4gICAgICBzY29wZToge1xyXG4gICAgICAgIHNlY3RvcklkOiAnPXNlY3RvcicgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBjb250cm9sbGVyOiAnUmVtb3ZlU2VjdG9yJyxcclxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgnYXBwJylcclxuICAgIC5jb250cm9sbGVyKCdSZW1vdmVDb2ZyYWRlVG1wbCcsIFJlbW92ZUNvZnJhZGVUbXBsKTtcclxuXHJcbiAgZnVuY3Rpb24gUmVtb3ZlQ29mcmFkZVRtcGwoJHN0YXRlLCAkbWREaWFsb2csIGNvZnJhZGVzU2VydmljZSkge1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICB2bS5jbG9zZURpYWxvZyA9IGNsb3NlRGlhbG9nO1xyXG4gICAgdm0ucmVtb3ZlRW5kQ29mcmFkZSA9IHJlbW92ZUVuZENvZnJhZGU7XHJcblxyXG4gICAgZnVuY3Rpb24gY2xvc2VEaWFsb2coKSB7XHJcbiAgICAgICRtZERpYWxvZy5jYW5jZWwoKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHJlbW92ZUVuZENvZnJhZGUoaWQpe1xyXG4gICAgICB2YXIgY29mcmFkZSA9IGNvZnJhZGVzU2VydmljZS5jb2ZyYWRlc1Jlc3QoKS5nZXQoe2lkOiBpZH0sIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgY29mcmFkZS5iYWphID0ge21vdGl2byA6IHZtLm1vdGl2b0JhamEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlY2hhQmFqYTogbmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKX07XHJcbiAgICAgICAgY29mcmFkZS5udW1lcm9Db2ZyYWRlID0gbnVsbDtcclxuICAgICAgICBcclxuICAgICAgICBjb2ZyYWRlLiRzYXZlKHt1cGRhdGVOdW1lcm9Db2ZyYWRlOiB0cnVlfSkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgdm0uY2xvc2VEaWFsb2coKTtcclxuICAgICAgICAgIGlmKCRzdGF0ZS5jdXJyZW50Lm5hbWUgPT09ICdjb2ZyYWRlcycpe1xyXG4gICAgICAgICAgICAkc3RhdGUudHJhbnNpdGlvblRvKCRzdGF0ZS5jdXJyZW50LCBudWxsLCB7XHJcbiAgICAgICAgICAgICAgcmVsb2FkOiB0cnVlLFxyXG4gICAgICAgICAgICAgIGluaGVyaXQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICRzdGF0ZS5nbygnY29mcmFkZXMnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
