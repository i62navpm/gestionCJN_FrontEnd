!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,o){o.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:o,cofradesBajasPrepService:r}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:t,getMapsPrepService:a}}).state("cofradesCambios",{url:"/cofrades/nuevos/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/add/cofradeNuevo.html")}],controller:"CofradeNuevo",controllerAs:"vm",resolve:{getCofradePrepService:t}})}function o(e){return e.cofradesRest().query()}function r(e){return e.cofradesBajasRest().query()}function t(e,o){return o.cofradeId?e.cofradesRest().get({id:o.cofradeId}):!1}function a(e,o,r){return o.$promise.then(function(o){var t=o.datosPersonales.direccion.calle+" "+o.datosPersonales.direccion.numero+" "+o.datosPersonales.direccion.municipio+" "+o.datosPersonales.direccion.provincia+" "+o.datosPersonales.direccion.cp;return r.geoCodingAPI(t).then(function(o){if(o.data.results.length){var r=o.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:r.lat,longitude:r.lng},marker:{latitude:r.lat,longitude:r.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],o.$inject=["cofradesService"],r.$inject=["cofradesService"],t.$inject=["cofradesService","$stateParams"],a.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e,o){function r(o){e(o).toggle()}function t(e,t){r(t),o.go(e)}var a=this;a.toggleSidenav=r,a.navigateTo=t}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,o,r,t,a,n,c){function i(){a?a.$promise.then(s):n.getRegistros().then(function(e){P.cofrade.numeroOrden=e.data.numeroOrden,P.cofrade.numeroCofrade=e.data.numeroCofrade})}function s(e){return P.cofrade=e,P.calleSelected={calle:P.cofrade.datosPersonales.direccion.calle,cp:P.cofrade.datosPersonales.direccion.cp,provincia:P.cofrade.datosPersonales.direccion.provincia,municipio:P.cofrade.datosPersonales.direccion.municipio},P.fechaNacimiento=P.cofrade.datosPersonales.fechaNacimiento,P.fechaInscripcion=P.cofrade.datosPersonales.fechaInscripcion,P.cofrade.datosFinancieros=P.cofrade.datosFinancieros||{cuenta:{},deuda:[]},P.cofrade.datosFinancieros.cuenta=P.cofrade.datosFinancieros.cuenta||{},P.cofrade.datosFinancieros.deuda=P.cofrade.datosFinancieros.deuda||[],!0}function u(){window.history.back()}function l(e){return n.getCalles(e).then(function(e){return e.data})}function d(e){e?(P.cofrade.datosPersonales.direccion.calle=e.calle,P.cofrade.datosPersonales.direccion.municipio=e.municipio,P.cofrade.datosPersonales.direccion.cp=e.cp,P.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):(P.cofrade.datosPersonales.direccion.calle=null,P.cofrade.datosPersonales.direccion.municipio=null,P.cofrade.datosPersonales.direccion.cp=null,P.cofrade.datosPersonales.direccion.provincia=null,P.sector=null,P.nuevaCalle=!0)}function f(e){c.sectoresRest().query({calle:e},function(e){P.sector=e[0].numeroSector,P.nuevaCalle=!1})}function p(){P.cofrade.datosFinancieros.cuenta.iban&&(P.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")(P.cofrade.datosFinancieros.cuenta.iban))}function m(){P.cofrade.datosFinancieros.cuenta.cc&&(P.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")(P.cofrade.datosFinancieros.cuenta.cc))}function g(e){function t(){c.sectoresRest().get({sector:P.sector},function(e){var t=e[0];t?(t.calles.push(P.searchText),t.$save(),i.save(P.cofrade,v,h)):r.show(r.simple().content("El sector "+P.sector+" no existe!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var a={cuenta:{},deuda:[]};P.cofrade.datosPersonales.direccion.calle=P.searchText,JSON.stringify(P.cofrade.datosFinancieros)===JSON.stringify(a)&&delete P.cofrade.datosFinancieros;var i=n.cofradesRest();P.nuevaCalle?t():i.save(P.cofrade,v,h)}else C()}function v(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),t.go("cofrades")}function h(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function C(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var P=this;P.nuevaCalle=!0,P.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:new Date,fechaNacimiento:new Date}},P.backState=u,P.querySearch=l,P.selectedItemChange=d,P.calcularCC=p,P.calcularIban=m,P.guardar=g,i()}angular.module("app").controller("CofradeNuevo",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,o,r,t){function a(){return r.$promise.then(function(e){c.cofrade=e,c.cofrade.datosFinancieros&&c.cofrade.datosFinancieros.cuenta&&(c.iban=o("parseIban")(c.cofrade.datosFinancieros.cuenta.iban),c.cc=o("parseCC")(c.cofrade.datosFinancieros.cuenta.cc)),c.maps=t})}function n(o,r){e.go("cofradesCambios",{cofradeId:o})}var c=this;c.cofrade=null,c.maps=null,c.modifyCofrade=n,a()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,o){function r(){return e.$promise.then(function(e){t.nextPage=e.next,t.cofrades=e.results}),o.$promise.then(function(e){t.nextPageBajas=e.next,t.cofradesBajas=e.results})}var t=this;t.cofrades=null,t.nextPage=null,t.cofradesBajas=null,t.nextPageBajas=null,t.selectedTab=0,r()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,o,r){var t=o[0];o.bind("scroll",function(){t.scrollTop+t.offsetHeight>=t.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var o="",r=0;r<e.length;r++)r>0&&r%4===0&&(o+=" "),o+=e[r];return o}}function o(){return function(e){e=e||"";var o="";return o=e.substr(0,4)+"-",o+=e.substr(4,4)+"-",o+=e.substr(8,2)+"-",o+=e.substr(10,10)}}function r(){return function(e){return e=e||"",e.substr(4,20)}}function t(){function e(e){for(var o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=[],t=0;t<e.length;t++){var a=o.indexOf(e[t]);r.push(0>a?"-":a)}return r.join("")}function o(e,o){for(var r=10,t=e.length,a=0,n=0;t>n;n+=r){var c=a+""+e.substr(n,r);a=c%o}return a}function r(e,o){for(e+="";e.length<o;)e="0"+e;return e}return function(t){var a="ES",n=t+e(a)+"00",c=o(n,97);return a+r(98-c,2)+t}}angular.module("app").filter("parseIban",e).filter("parseCC",o).filter("calcularIban",t).filter("calcularCC",r)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento).toLocaleDateString(),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion).toLocaleDateString(),e}}function o(){return function(e){var o=e.datosPersonales.fechaNacimiento.split("/");return e.datosPersonales.fechaNacimiento=o[2]+"-"+o[1]+"-"+o[0],o=e.datosPersonales.fechaInscripcion.split("/"),e.datosPersonales.fechaInscripcion=o[2]+"-"+o[1]+"-"+o[0],e}}angular.module("app").filter("stringToDateFormat",e).filter("formatDates",o)}(),function(){"use strict";function e(){return function(o){var r=o instanceof Array;for(var t in o)null===o[t]?r?o.splice(t,1):delete o[t]:"object"==typeof o[t]&&e(o[t]);return o}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,o,r){function t(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,o){return r("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(r("formatDates")(r("removeNulls")(e)))}}})}function a(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(e){return o.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function c(){return o.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:t,cofradesBajasRest:a,getCalles:n,getRegistros:c}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e){function o(o){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:o,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:o}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function o(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:o}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,o,r,t){function a(){p.bajas?c():n()}function n(){if(p.nextPage){var e={page:p.nextPage};p.buscar&&(e[p.filtro]=p.buscar),t.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=p.cofrades.concat(e.results)})}}function c(){if(p.nextPageBajas){var e={page:p.nextPageBajas};p.buscar&&(e[p.filtro]=p.buscar),t.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=p.cofradesBajas.concat(e.results)})}}function i(){p.bajas?u():s()}function s(){var e={};e[p.filtro]=p.buscar,t.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=e.results})}function u(){var e={};e[p.filtro]=p.buscar,t.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=e.results})}function l(){p.buscar=null,p.typeInput="nombre"===p.filtro?"text":"number",p.search()}function d(e,o){r.go("cofradesDetalle",{cofradeId:e})}function f(e,o){o.stopPropagation(),r.go("cofradesCambios",{cofradeId:e})}var p=this;p.filtro="nombre",p.typeInput="text",p.buscar=null,p.search=i,p.radioChange=l,p.goToCofrade=d,p.modifyCofrade=f;var m=e.$on("scrollDown",a);o.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}(),function(){"use strict";function e(e,o){function r(e,r){r.stopPropagation(),o.show({templateUrl:"./templates/directives/cofrades/remove/dialogTmpl/removeCofrade.tmpl.html",locals:{id:e},controller:"RemoveCofradeTmpl",controllerAs:"vm",bindToController:!0,targetEvent:r,clickOutsideToClose:!0}).then(function(){})}var t=this;t.removeCofrade=r}angular.module("app").controller("RemoveCofrade",e),e.$inject=["$state","$mdDialog"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/remove/removeCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RemoveCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCofrade",e)}(),function(){"use strict";function e(e,o,r){function t(e,r){r.stopPropagation();var t=o.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(r).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);o.show(t).then(function(){a(e)})}function a(o){var t=r.cofradesRest().get({id:o},function(){t.baja=null,t.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.restoreCofrade=t}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e,o,r){function t(){o.cancel()}function a(o){var t=r.cofradesRest().get({id:o},function(){t.baja={motivo:n.motivoBaja,fechaBaja:(new Date).toLocaleDateString()},t.numeroCofrade=null,t.$save({updateNumeroCofrade:!0}).then(function(){n.closeDialog(),"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.closeDialog=t,n.removeEndCofrade=a}angular.module("app").controller("RemoveCofradeTmpl",e),e.$inject=["$state","$mdDialog","cofradesService"]}();
//# sourceMappingURL=data:application/json;base64,
