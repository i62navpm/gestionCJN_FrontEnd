!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.interceptors.push("myHttpInterceptor")}function o(e){var o=angular.element(document.querySelector(".m-app-loading"));return{request:function(e){return"POST"===e.method&&o.css("display","block"),e},requestError:function(o){return e.reject(o)},response:function(e){return o.css("display","none"),e},responseError:function(t){return o.css("display","none"),e.reject(t)}}}angular.module("app").factory("myHttpInterceptor",o).config(e),e.$inject=["$httpProvider"],o.$inject=["$q"]}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,o){o.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:o,cofradesBajasPrepService:t}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:r,getMapsPrepService:a}}).state("cofradesCambios",{url:"/cofrades/cambios/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/addModify/cofradeAddModify.html")}],controller:"CofradeAddModify",controllerAs:"vm",resolve:{getCofradePrepService:r}})}function o(e){return e.cofradesRest().query()}function t(e){return e.cofradesBajasRest().query()}function r(e,o){return o.cofradeId?e.cofradesRest().get({id:o.cofradeId}):!1}function a(e,o,t){return o.$promise.then(function(o){var r=o.datosPersonales.direccion.calle+" "+o.datosPersonales.direccion.numero+" "+o.datosPersonales.direccion.municipio+" "+o.datosPersonales.direccion.provincia+" "+o.datosPersonales.direccion.cp;return t.geoCodingAPI(r).then(function(o){if(o.data.results.length){var t=o.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:t.lat,longitude:t.lng},marker:{latitude:t.lat,longitude:t.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],o.$inject=["cofradesService"],t.$inject=["cofradesService"],r.$inject=["cofradesService","$stateParams"],a.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e){e.state("costaleros",{url:"/costaleros",templateProvider:["$templateCache",function(e){return e.get("costaleros/list/costaleros.html")}],controller:"Costaleros",controllerAs:"vm",resolve:{costalerosPrepService:o}}).state("costalerosDetalle",{url:"/costaleros/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/detail/costaleroDetalle.html")}],controller:"CostaleroDetalle",controllerAs:"vm",resolve:{getCostaleroPrepService:t}}).state("costalerosCambios",{url:"/costaleros/cambios/:costaleroId",templateProvider:["$templateCache",function(e){return e.get("costaleros/addModify/costaleroAddModify.html")}],controller:"CostaleroAddModify",controllerAs:"vm",resolve:{getCostaleroPrepService:t}})}function o(e){return e.costalerosRest().query()}function t(e,o){return o.costaleroId?e.costalerosRest().get({id:o.costaleroId}):!1}angular.module("app").config(e),e.$inject=["$stateProvider"],o.$inject=["costalerosService"],t.$inject=["costalerosService","$stateParams"]}(),function(){"use strict";function e(e,o){function t(o){e(o).toggle()}function r(e,r){t(r),o.go(e)}var a=this;a.toggleSidenav=t,a.navigateTo=r}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,o,t,r,a,n,c){function s(){a?a.$promise.then(i):n.getRegistros().then(function(e){$.cofrade.numeroOrden=e.data.numeroOrden,$.cofrade.numeroCofrade=e.data.numeroCofrade})}function i(e){return $.cofrade=e,$.calleSelected={calle:$.cofrade.datosPersonales.direccion.calle,cp:$.cofrade.datosPersonales.direccion.cp,provincia:$.cofrade.datosPersonales.direccion.provincia,municipio:$.cofrade.datosPersonales.direccion.municipio},$.fechaNacimiento=$.cofrade.datosPersonales.fechaNacimiento,$.fechaInscripcion=$.cofrade.datosPersonales.fechaInscripcion,$.cofrade.datosFinancieros=$.cofrade.datosFinancieros||{cuenta:{},deuda:[]},$.cofrade.datosFinancieros.cuenta=$.cofrade.datosFinancieros.cuenta||{},$.cofrade.datosFinancieros.deuda=$.cofrade.datosFinancieros.deuda||[],!0}function l(){window.history.back()}function u(e){return n.getCalles(e).then(function(e){return e.data})}function d(e){e?($.cofrade.datosPersonales.direccion.calle=e.calle,$.cofrade.datosPersonales.direccion.municipio=e.municipio,$.cofrade.datosPersonales.direccion.cp=e.cp,$.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):($.cofrade.datosPersonales.direccion.calle=null,$.cofrade.datosPersonales.direccion.municipio=null,$.cofrade.datosPersonales.direccion.cp=null,$.cofrade.datosPersonales.direccion.provincia=null,$.sector=null,$.nuevaCalle=!0)}function f(e){c.sectoresRest().query({calle:e},function(e){$.sector=e[0].numeroSector,$.nuevaCalle=!1})}function p(){$.cofrade.datosFinancieros.cuenta.iban&&($.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")($.cofrade.datosFinancieros.cuenta.iban))}function m(){$.cofrade.datosFinancieros.cuenta.cc&&($.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")($.cofrade.datosFinancieros.cuenta.cc))}function g(e){function r(){c.sectoresRest().get({sector:$.sector},function(e){var r=e[0];r?(r.calles.push($.searchText),r.$save(),s.save($.cofrade,v,h)):t.show(t.simple().content("El sector "+$.sector+" no existe!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var a={cuenta:{},deuda:[]};$.cofrade.datosPersonales.direccion.calle=$.searchText,JSON.stringify($.cofrade.datosFinancieros)===JSON.stringify(a)&&delete $.cofrade.datosFinancieros;var s=n.cofradesRest();$.nuevaCalle?r():s.save($.cofrade,v,h)}else C()}function v(e){t.show(t.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),r.go("cofrades")}function h(e){t.show(t.simple().content("Error al guardar!!").position("top right").parent(o[0].querySelector("#toastBounds")).hideDelay(3e3))}function C(){t.show(t.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(o[0].querySelector("#toastBounds")).position("top right"))}var $=this;$.nuevaCalle=!0,$.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:(new Date).toLocaleDateString(),fechaNacimiento:(new Date).toLocaleDateString()}},$.backState=l,$.querySearch=u,$.selectedItemChange=d,$.calcularCC=p,$.calcularIban=m,$.guardar=g,s()}angular.module("app").controller("CofradeAddModify",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,o,t,r){function a(){return t.$promise.then(function(e){c.cofrade=e,c.cofrade.datosFinancieros&&c.cofrade.datosFinancieros.cuenta&&(c.iban=o("parseIban")(c.cofrade.datosFinancieros.cuenta.iban),c.cc=o("parseCC")(c.cofrade.datosFinancieros.cuenta.cc)),c.maps=r})}function n(o,t){e.go("cofradesCambios",{cofradeId:o})}var c=this;c.cofrade=null,c.maps=null,c.modifyCofrade=n,a()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,o){function t(){return e.$promise.then(function(e){r.nextPage=e.next,r.cofrades=e.results}),o.$promise.then(function(e){r.nextPageBajas=e.next,r.cofradesBajas=e.results})}var r=this;r.cofrades=null,r.nextPage=null,r.cofradesBajas=null,r.nextPageBajas=null,r.selectedTab=0,t()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,o,t){var r=o[0];o.bind("scroll",function(){r.scrollTop+r.offsetHeight>=r.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var o="",t=0;t<e.length;t++)t>0&&t%4===0&&(o+=" "),o+=e[t];return o}}function o(){return function(e){e=e||"";var o="";return o=e.substr(0,4)+"-",o+=e.substr(4,4)+"-",o+=e.substr(8,2)+"-",o+=e.substr(10,10)}}function t(){return function(e){return e=e||"",e.substr(4,20)}}function r(){function e(e){for(var o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",t=[],r=0;r<e.length;r++){var a=o.indexOf(e[r]);t.push(0>a?"-":a)}return t.join("")}function o(e,o){for(var t=10,r=e.length,a=0,n=0;r>n;n+=t){var c=a+""+e.substr(n,t);a=c%o}return a}function t(e,o){for(e+="";e.length<o;)e="0"+e;return e}return function(r){var a="ES",n=r+e(a)+"00",c=o(n,97);return a+t(98-c,2)+r}}angular.module("app").filter("parseIban",e).filter("parseCC",o).filter("calcularIban",r).filter("calcularCC",t)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales&&(e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento).toLocaleDateString(),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion).toLocaleDateString()),e.fecha&&(e.fecha=new Date(e.fecha).toLocaleDateString()),e}}function o(){return function(e){var o=null;return e.datosPersonales&&(o=e.datosPersonales.fechaNacimiento.split("/"),e.datosPersonales.fechaNacimiento=o[2]+"-"+o[1]+"-"+o[0],o=e.datosPersonales.fechaInscripcion.split("/"),e.datosPersonales.fechaInscripcion=o[2]+"-"+o[1]+"-"+o[0]),e.fecha&&(o=e.fecha.split("/"),e.fecha=o[2]+"-"+o[1]+"-"+o[0]),e}}angular.module("app").filter("stringToDateFormat",e).filter("formatDates",o)}(),function(){"use strict";function e(){return function(o){var t=o instanceof Array;for(var r in o)null===o[r]?t?o.splice(r,1):delete o[r]:"object"==typeof o[r]&&e(o[r]);return o}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,o,t){function r(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,o){return t("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,o){return angular.toJson(t("formatDates")(t("removeNulls")(e)))}}})}function a(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(e){return o.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function c(){return o.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:r,cofradesBajasRest:a,getCalles:n,getRegistros:c}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e,o){function t(){return e("http://127.0.0.1:5050/api/costaleros/:id.json:json",null,{query:{method:"GET",isArray:!0},get:{method:"GET",transformResponse:function(e,t){return o("stringToDateFormat")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,t){return angular.toJson(o("formatDates")(o("removeNulls")(e)))}}})}return{costalerosRest:t}}angular.module("app").factory("costalerosService",e),e.$inject=["$resource","$filter"]}(),function(){"use strict";function e(e){function o(o){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:o,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:o}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function o(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:o}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,o,t,r,a,n,c,s){function i(){n&&n.$promise.then(l)}function l(e){return h.costalero=e,h.cofradeSelected=h.costalero.cofrade,!0}function u(){window.history.back()}function d(e){var o={};return isNaN(e)?o.nombre=e:isNaN(e)||(o.numeroOrden=e),s.cofradesRest().query(o).$promise.then(function(e){return e.results})}function f(e){h.costalero.cofrade=e?e.id:null}function p(o){o?(h.costalero.fecha=""===h.costalero.fecha?null:h.costalero.fecha,h.costalero.cofrade?c.costalerosRest().save(h.costalero,m,g):(e.costaleroForm.cofrade.$error.required=!0,v())):v()}function m(e){r.show(r.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("costaleros")}function g(e){r.show(r.simple().content("Error al guardar!!").position("top right").parent(t[0].querySelector("#toastBounds")).hideDelay(3e3))}function v(){r.show(r.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(t[0].querySelector("#toastBounds")).position("top right"))}var h=this;h.backState=u,h.querySearch=d,h.selectedItemChange=f,h.guardar=p,i()}angular.module("app").controller("CostaleroAddModify",e),e.$inject=["$scope","$filter","$document","$mdToast","$state","getCostaleroPrepService","costalerosService","cofradesService"]}(),function(){"use strict";function e(e,o,t,r){function a(){return t.$promise.then(function(e){c.costalero=e,c.costalero.datosFinancieros&&c.costalero.datosFinancieros.cuenta&&(c.iban=o("parseIban")(c.costalero.datosFinancieros.cuenta.iban),c.cc=o("parseCC")(c.costalero.datosFinancieros.cuenta.cc)),c.maps=r})}function n(o,t){e.go("costalerosCambios",{costaleroId:o})}var c=this;c.costalero=null,c.maps=null,c.modifyCostalero=n,a()}angular.module("app").controller("CostaleroDetalle",e),e.$inject=["$state","$filter","getCostaleroPrepService","getMapsPrepService"]}(),function(){"use strict";function e(e){function o(){return e.$promise.then(function(e){t.costaleros=e})}var t=this;t.costaleros=null,o()}angular.module("app").controller("Costaleros",e),e.$inject=["costalerosPrepService"]}(),function(){"use strict";function e(e,o,t,r){function a(){p.bajas?c():n()}function n(){if(p.nextPage){var e={page:p.nextPage};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=p.cofrades.concat(e.results)})}}function c(){if(p.nextPageBajas){var e={page:p.nextPageBajas};p.buscar&&(e[p.filtro]=p.buscar),r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=p.cofradesBajas.concat(e.results)})}}function s(){p.bajas?l():i()}function i(){var e={};e[p.filtro]=p.buscar,r.cofradesRest().query(e,function(e){p.nextPage=e.next,p.cofrades=e.results})}function l(){var e={};e[p.filtro]=p.buscar,r.cofradesBajasRest().query(e,function(e){p.nextPageBajas=e.next,p.cofradesBajas=e.results})}function u(){p.buscar=null,p.typeInput="nombre"===p.filtro?"text":"number",p.search()}function d(e,o){t.go("cofradesDetalle",{cofradeId:e})}function f(e,o){o.stopPropagation(),t.go("cofradesCambios",{cofradeId:e})}var p=this;p.filtro="nombre",p.typeInput="text",p.buscar=null,p.search=s,p.radioChange=u,p.goToCofrade=d,p.modifyCofrade=f;var m=e.$on("scrollDown",a);o.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}(),function(){"use strict";function e(e,o){function t(e,t){t.stopPropagation(),o.show({templateUrl:"./templates/directives/cofrades/remove/dialogTmpl/removeCofrade.tmpl.html",locals:{id:e},controller:"RemoveCofradeTmpl",controllerAs:"vm",bindToController:!0,targetEvent:t,clickOutsideToClose:!0}).then(function(){})}var r=this;r.removeCofrade=t}angular.module("app").controller("RemoveCofrade",e),e.$inject=["$state","$mdDialog"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/remove/removeCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RemoveCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCofrade",e)}(),function(){"use strict";function e(e,o,t){function r(e,t){t.stopPropagation();var r=o.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(t).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);o.show(r).then(function(){a(e)})}function a(o){var r=t.cofradesRest().get({id:o},function(){r.baja=null,r.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.restoreCofrade=r}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e){function o(o,t){t.stopPropagation(),e.go("costalerosCambios",{costaleroId:o})}var t=this;t.modifyCostalero=o}angular.module("app").controller("ListaCostaleros",e),e.$inject=["$state"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/list/costaleros.directive.html",scope:{costaleros:"=costaleros"},link:function(e,o){e.$watch("vm.costaleros",function(o){o&&(e.vm.costalerosShort=e.vm.costaleros.map(function(e){var o={sitio:e.sitio};return e.cofrade&&(o.id=e.id,o.numeroOrden=e.cofrade.numeroOrden,o.nombre=e.cofrade.datosPersonales.nombre+" "+e.cofrade.datosPersonales.apellido1+" "+e.cofrade.datosPersonales.apellido2),o}))},!0)},controller:"ListaCostaleros",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCostaleros",e)}(),function(){"use strict";function e(e,o,t){function r(e,t){t.stopPropagation();var r=o.confirm().title("Eliminar costalero").content("¿Está seguro que desea eliminar este costalero?<br>Dejará su sitio libre.").ariaLabel("Eliminar costalero").targetEvent(t).ok("Aceptar").cancel("Cancelar").clickOutsideToClose(!0);o.show(r).then(function(){a(e)})}function a(o){var r=t.costalerosRest().get({id:o},function(){r.cofrade=null,r.talla=null,r.fecha=null,r.$save().then(function(){"costaleros"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("costaleros")})})}var n=this;n.removeCostalero=r}angular.module("app").controller("RemoveCostalero",e),e.$inject=["$state","$mdDialog","costalerosService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/costaleros/remove/removeCostalero.directive.html",scope:{costaleroId:"=costalero"},controller:"RemoveCostalero",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("removeCostalero",e)}(),function(){"use strict";function e(e,o,t){function r(){o.cancel()}function a(o){var r=t.cofradesRest().get({id:o},function(){r.baja={motivo:n.motivoBaja,fechaBaja:(new Date).toLocaleDateString()},r.numeroCofrade=null,r.$save({updateNumeroCofrade:!0}).then(function(){n.closeDialog(),"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.closeDialog=r,n.removeEndCofrade=a}angular.module("app").controller("RemoveCofradeTmpl",e),e.$inject=["$state","$mdDialog","cofradesService"]}();
//# sourceMappingURL=data:application/json;base64,
