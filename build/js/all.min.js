!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,r){r.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:r,cofradesBajasPrepService:o}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:a,getMapsPrepService:n}}).state("cofradesCambios",{url:"/cofrades/nuevos/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/add/cofradeNuevo.html")}],controller:"CofradeNuevo",controllerAs:"vm",resolve:{getCofradePrepService:a,getCallesPrepService:t}})}function r(e){return e.cofradesRest().query()}function o(e){return e.cofradesBajasRest().query()}function a(e,r){return r.cofradeId?e.cofradesRest().get({id:r.cofradeId}):!1}function t(e){return e.getCalles().then(function(e){return e.data})}function n(e,r,o){return r.$promise.then(function(r){var a=r.datosPersonales.direccion.calle+" "+r.datosPersonales.direccion.numero+" "+r.datosPersonales.direccion.municipio+" "+r.datosPersonales.direccion.provincia+" "+r.datosPersonales.direccion.cp;return o.geoCodingAPI(a).then(function(r){if(r.data.results.length){var o=r.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],r.$inject=["cofradesService"],o.$inject=["cofradesService"],a.$inject=["cofradesService","$stateParams"],t.$inject=["cofradesService"],n.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e,r){function o(r){e(r).toggle()}function a(e,a){o(a),r.go(e)}var t=this;t.toggleSidenav=o,t.navigateTo=a}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,r,o,a,t,n,c,s){function i(){t?t.$promise.then(u):c.getRegistros().then(function(e){$.cofrade.numeroOrden=e.data.numeroOrden,$.cofrade.numeroCofrade=e.data.numeroCofrade}),$.calles=n}function u(e){return $.cofrade=e,$.calleSelected={calle:$.cofrade.datosPersonales.direccion.calle,cp:$.cofrade.datosPersonales.direccion.cp,provincia:$.cofrade.datosPersonales.direccion.provincia,municipio:$.cofrade.datosPersonales.direccion.municipio},g($.cofrade.datosPersonales.direccion.calle),$.cofrade.datosFinancieros=$.cofrade.datosFinancieros||{cuenta:{},deuda:[]},$.cofrade.datosFinancieros.cuenta=$.cofrade.datosFinancieros.cuenta||{},$.cofrade.datosFinancieros.deuda=$.cofrade.datosFinancieros.deuda||[],!0}function l(){window.history.back()}function d(e){var r=e?$.calles.filter(f(e)):$.calles;return r}function f(e){var r=angular.lowercase(e);return function(e){return 0===angular.lowercase(e.calle).indexOf(r)}}function p(e){e?($.cofrade.datosPersonales.direccion.calle=e.calle,$.cofrade.datosPersonales.direccion.municipio=e.municipio,$.cofrade.datosPersonales.direccion.cp=e.cp,$.cofrade.datosPersonales.direccion.provincia=e.provincia,g(e.calle)):($.cofrade.datosPersonales.direccion.calle=null,$.cofrade.datosPersonales.direccion.municipio=null,$.cofrade.datosPersonales.direccion.cp=null,$.cofrade.datosPersonales.direccion.provincia=null,$.sector=null,$.nuevaCalle=!0)}function g(e){s.sectoresRest().query({calle:e},function(e){$.sector=e[0].numeroSector,$.nuevaCalle=!1})}function m(){$.cofrade.datosFinancieros.cuenta.iban&&($.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")($.cofrade.datosFinancieros.cuenta.iban))}function v(){$.cofrade.datosFinancieros.cuenta.cc&&($.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")($.cofrade.datosFinancieros.cuenta.cc))}function h(e){function a(){s.sectoresRest().get({sector:$.sector},function(e){var a=e[0];a?(a.calles.push($.searchText),a.$save(),n.save($.cofrade,P,j)):o.show(o.simple().content("El sector "+$.sector+" no existe!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var t={cuenta:{},deuda:[]};$.cofrade.datosPersonales.direccion.calle=$.searchText,JSON.stringify($.cofrade.datosFinancieros)===JSON.stringify(t)&&delete $.cofrade.datosFinancieros;var n=c.cofradesRest();$.nuevaCalle?a():n.save($.cofrade,P,j)}else C()}function P(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),a.go("cofrades")}function j(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))}function C(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(r[0].querySelector("#toastBounds")).position("top right"))}var $=this;$.nuevaCalle=!0,$.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:new Date,fechaNacimiento:new Date}},$.backState=l,$.querySearch=d,$.selectedItemChange=p,$.calcularCC=m,$.calcularIban=v,$.guardar=h,i()}angular.module("app").controller("CofradeNuevo",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","getCallesPrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,r,o,a){function t(){return o.$promise.then(function(e){c.cofrade=r("dateToString")(e),c.cofrade.datosFinancieros&&c.cofrade.datosFinancieros.cuenta&&(c.iban=r("parseIban")(c.cofrade.datosFinancieros.cuenta.iban),c.cc=r("parseCC")(c.cofrade.datosFinancieros.cuenta.cc)),c.maps=a})}function n(r,o){e.go("cofradesCambios",{cofradeId:r})}var c=this;c.cofrade=null,c.maps=null,c.modifyCofrade=n,t()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,r){function o(){return e.$promise.then(function(e){a.nextPage=e.next,a.cofrades=e.results}),r.$promise.then(function(e){a.nextPageBajas=e.next,a.cofradesBajas=e.results})}var a=this;a.cofrades=null,a.nextPage=null,a.cofradesBajas=null,a.nextPageBajas=null,a.selectedTab=0,o()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,r,o){var a=r[0];r.bind("scroll",function(){a.scrollTop+a.offsetHeight>=a.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var r="",o=0;o<e.length;o++)o>0&&o%4===0&&(r+=" "),r+=e[o];return r}}function r(){return function(e){e=e||"";var r="";return r=e.substr(0,4)+"-",r+=e.substr(4,4)+"-",r+=e.substr(8,2)+"-",r+=e.substr(10,10)}}function o(){return function(e){return e=e||"",e.substr(4,20)}}function a(){function e(e){for(var r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",o=[],a=0;a<e.length;a++){var t=r.indexOf(e[a]);o.push(0>t?"-":t)}return o.join("")}function r(e,r){for(var o=10,a=e.length,t=0,n=0;a>n;n+=o){var c=t+""+e.substr(n,o);t=c%r}return t}function o(e,r){for(e+="";e.length<r;)e="0"+e;return e}return function(a){var t="ES",n=a+e(t)+"00",c=r(n,97);return t+o(98-c,2)+a}}angular.module("app").filter("parseIban",e).filter("parseCC",r).filter("calcularIban",a).filter("calcularCC",o)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion),e}}function r(){return function(e){return e.datosPersonales.fechaNacimiento=e.datosPersonales.fechaNacimiento.toLocaleDateString(),e.datosPersonales.fechaInscripcion=e.datosPersonales.fechaInscripcion.toLocaleDateString(),e}}angular.module("app").filter("stringToDate",e).filter("dateToString",r)}(),function(){"use strict";function e(){return function(r){var o=r instanceof Array;for(var a in r)null===r[a]?o?r.splice(a,1):delete r[a]:"object"==typeof r[a]&&e(r[a]);return r}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,r,o){function a(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,r){return o("stringToDate")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,r){return angular.toJson(o("removeNulls")(e))}}})}function t(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(){return r.get("http://127.0.0.1:5050/api/calles/").then(function(e){return angular.fromJson(e)})}function c(){return r.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:a,cofradesBajasRest:t,getCalles:n,getRegistros:c}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e){function r(r){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:r,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:r}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function r(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:r}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,r,o,a){function t(){m.bajas?c():n()}function n(){if(m.nextPage){var e={page:m.nextPage};m.buscar&&(e[m.filtro]=m.buscar),a.cofradesRest().query(e,function(e){m.nextPage=e.next,m.cofrades=m.cofrades.concat(e.results)})}}function c(){if(m.nextPageBajas){var e={page:m.nextPageBajas};m.buscar&&(e[m.filtro]=m.buscar),a.cofradesBajasRest().query(e,function(e){m.nextPageBajas=e.next,m.cofradesBajas=m.cofradesBajas.concat(e.results)})}}function s(){m.bajas?u():i()}function i(){var e={};e[m.filtro]=m.buscar,a.cofradesRest().query(e,function(e){m.nextPage=e.next,m.cofrades=e.results})}function u(){var e={};e[m.filtro]=m.buscar,a.cofradesBajasRest().query(e,function(e){m.nextPageBajas=e.next,m.cofradesBajas=e.results})}function l(){m.buscar=null,m.typeInput="nombre"===m.filtro?"text":"number",m.search()}function d(e,r){o.go("cofradesDetalle",{cofradeId:e})}function f(e,r){r.stopPropagation(),o.go("cofradesCambios",{cofradeId:e})}function p(e,r){r.stopPropagation(),console.log("eliminar cofrade")}function g(e,r){r.stopPropagation(),console.log("restaurar cofrade")}var m=this;m.filtro="nombre",m.typeInput="text",m.buscar=null,m.search=s,m.radioChange=l,m.goToCofrade=d,m.modifyCofrade=f,m.removeCofrade=p,m.restoreCofrade=g;var v=e.$on("scrollDown",t);r.$on("$destroy",function(){v(),v=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}();
//# sourceMappingURL=data:application/json;base64,
