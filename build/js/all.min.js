!function(){"use strict";angular.module("app",["ui.router","ngResource","ngMaterial","uiGmapgoogle-maps","ngMessages"])}(),function(){"use strict";function e(e){e.configure({libraries:"weather,geometry,visualization"})}angular.module("app").config(e),e.$inject=["uiGmapGoogleMapApiProvider"]}(),function(){"use strict";function e(e){e.months=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],e.shortMonths=["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],e.days=["lunes","martes","miércoles","jueves","viernes","sábado","domingo"],e.shortDays=["lun","mar","mié","jue","vie","sáb","dom"],e.firstDayOfWeek=1,e.parseDate=function(e){return new Date(e)},e.formatDate=function(e){return new Date(e).toLocaleDateString()}}angular.module("app").config(e),e.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,r){r.otherwise("/"),e.state("home",{url:"/",template:'<p class="lead">Welcome to the UI-Router Demo</p><p>Use the menu above to navigate. Pay attention to the <code>$state</code> and <code>$stateParams</code> values below.</p><p>Click these links—<a href="#/c?id=1">Alice</a> or <a href="#/user/42">Bob</a>—to see a url redirect in action.</p>'})}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){}angular.module("app").config(e),e.$inject=["$mdThemingProvider"]}(),function(){"use strict";function e(e){e.state("cofrades",{url:"/cofrades",templateProvider:["$templateCache",function(e){return e.get("cofrades/list/cofrades.html")}],controller:"Cofrades",controllerAs:"vm",resolve:{cofradesPrepService:r,cofradesBajasPrepService:o}}).state("cofradesDetalle",{url:"/cofrades/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/detail/cofradeDetalle.html")}],controller:"CofradeDetalle",controllerAs:"vm",resolve:{getCofradePrepService:t,getMapsPrepService:a}}).state("cofradesCambios",{url:"/cofrades/nuevos/:cofradeId",templateProvider:["$templateCache",function(e){return e.get("cofrades/add/cofradeNuevo.html")}],controller:"CofradeNuevo",controllerAs:"vm",resolve:{getCofradePrepService:t}})}function r(e){return e.cofradesRest().query()}function o(e){return e.cofradesBajasRest().query()}function t(e,r){return r.cofradeId?e.cofradesRest().get({id:r.cofradeId}):!1}function a(e,r,o){return r.$promise.then(function(r){var t=r.datosPersonales.direccion.calle+" "+r.datosPersonales.direccion.numero+" "+r.datosPersonales.direccion.municipio+" "+r.datosPersonales.direccion.provincia+" "+r.datosPersonales.direccion.cp;return o.geoCodingAPI(t).then(function(r){if(r.data.results.length){var o=r.data.results[0].geometry.location;return e.then(function(e){return{coord:{latitude:o.lat,longitude:o.lng},marker:{latitude:o.lat,longitude:o.lng},zoom:17}})}})})}angular.module("app").config(e),e.$inject=["$stateProvider"],r.$inject=["cofradesService"],o.$inject=["cofradesService"],t.$inject=["cofradesService","$stateParams"],a.$inject=["uiGmapGoogleMapApi","getCofradePrepService","mapasService"]}(),function(){"use strict";function e(e,r){function o(r){e(r).toggle()}function t(e,t){o(t),r.go(e)}var a=this;a.toggleSidenav=o,a.navigateTo=t}angular.module("app").controller("AppCtrl",e),e.$inject=["$mdSidenav","$state"]}(),function(){"use strict";function e(e,r,o,t,a,n,c){function s(){a?a.$promise.then(i):n.getRegistros().then(function(e){C.cofrade.numeroOrden=e.data.numeroOrden,C.cofrade.numeroCofrade=e.data.numeroCofrade})}function i(e){return C.cofrade=e,C.calleSelected={calle:C.cofrade.datosPersonales.direccion.calle,cp:C.cofrade.datosPersonales.direccion.cp,provincia:C.cofrade.datosPersonales.direccion.provincia,municipio:C.cofrade.datosPersonales.direccion.municipio},f(C.cofrade.datosPersonales.direccion.calle),C.cofrade.datosFinancieros=C.cofrade.datosFinancieros||{cuenta:{},deuda:[]},C.cofrade.datosFinancieros.cuenta=C.cofrade.datosFinancieros.cuenta||{},C.cofrade.datosFinancieros.deuda=C.cofrade.datosFinancieros.deuda||[],!0}function u(){window.history.back()}function l(e){return n.getCalles(e).then(function(e){return e.data})}function d(e){e?(C.cofrade.datosPersonales.direccion.calle=e.calle,C.cofrade.datosPersonales.direccion.municipio=e.municipio,C.cofrade.datosPersonales.direccion.cp=e.cp,C.cofrade.datosPersonales.direccion.provincia=e.provincia,f(e.calle)):(C.cofrade.datosPersonales.direccion.calle=null,C.cofrade.datosPersonales.direccion.municipio=null,C.cofrade.datosPersonales.direccion.cp=null,C.cofrade.datosPersonales.direccion.provincia=null,C.sector=null,C.nuevaCalle=!0)}function f(e){c.sectoresRest().query({calle:e},function(e){C.sector=e[0].numeroSector,C.nuevaCalle=!1})}function p(){C.cofrade.datosFinancieros.cuenta.iban&&(C.cofrade.datosFinancieros.cuenta.cc=e("calcularCC")(C.cofrade.datosFinancieros.cuenta.iban))}function g(){C.cofrade.datosFinancieros.cuenta.cc&&(C.cofrade.datosFinancieros.cuenta.iban=e("calcularIban")(C.cofrade.datosFinancieros.cuenta.cc))}function m(e){function t(){c.sectoresRest().get({sector:C.sector},function(e){var t=e[0];t?(t.calles.push(C.searchText),t.$save(),s.save(C.cofrade,v,h)):o.show(o.simple().content("El sector "+C.sector+" no existe!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))})}if(e){var a={cuenta:{},deuda:[]};C.cofrade.datosPersonales.direccion.calle=C.searchText,JSON.stringify(C.cofrade.datosFinancieros)===JSON.stringify(a)&&delete C.cofrade.datosFinancieros;var s=n.cofradesRest();C.nuevaCalle?t():s.save(C.cofrade,v,h)}else P()}function v(e){o.show(o.simple().content("Guardado con éxito!!").position("top right").hideDelay(3e3)),t.go("cofrades")}function h(e){o.show(o.simple().content("Error al guardar!!").position("top right").parent(r[0].querySelector("#toastBounds")).hideDelay(3e3))}function P(){o.show(o.simple().content("Existen errores en el formulario").action("OK").highlightAction(!1).parent(r[0].querySelector("#toastBounds")).position("top right"))}var C=this;C.nuevaCalle=!0,C.cofrade={datosFinancieros:{cuenta:{},deuda:[]},datosPersonales:{direccion:{},sexo:"Hombre",fechaInscripcion:new Date,fechaNacimiento:new Date}},C.backState=u,C.querySearch=l,C.selectedItemChange=d,C.calcularCC=p,C.calcularIban=g,C.guardar=m,s()}angular.module("app").controller("CofradeNuevo",e),e.$inject=["$filter","$document","$mdToast","$state","getCofradePrepService","cofradesService","sectoresService"]}(),function(){"use strict";function e(e,r,o,t){function a(){return o.$promise.then(function(e){c.cofrade=r("dateToString")(e),c.cofrade.datosFinancieros&&c.cofrade.datosFinancieros.cuenta&&(c.iban=r("parseIban")(c.cofrade.datosFinancieros.cuenta.iban),c.cc=r("parseCC")(c.cofrade.datosFinancieros.cuenta.cc)),c.maps=t})}function n(r,o){e.go("cofradesCambios",{cofradeId:r})}var c=this;c.cofrade=null,c.maps=null,c.modifyCofrade=n,a()}angular.module("app").controller("CofradeDetalle",e),e.$inject=["$state","$filter","getCofradePrepService","getMapsPrepService"]}(),function(){"use strict";function e(e,r){function o(){return e.$promise.then(function(e){t.nextPage=e.next,t.cofrades=e.results}),r.$promise.then(function(e){t.nextPageBajas=e.next,t.cofradesBajas=e.results})}var t=this;t.cofrades=null,t.nextPage=null,t.cofradesBajas=null,t.nextPageBajas=null,t.selectedTab=0,o()}angular.module("app").controller("Cofrades",e),e.$inject=["cofradesPrepService","cofradesBajasPrepService"]}(),function(){"use strict";function e(){return{restrict:"A",link:function(e,r,o){var t=r[0];r.bind("scroll",function(){t.scrollTop+t.offsetHeight>=t.scrollHeight-5&&e.$emit("scrollDown")})}}}angular.module("app").directive("scrolly",e)}(),function(){"use strict";function e(){return function(e){e=e||"";for(var r="",o=0;o<e.length;o++)o>0&&o%4===0&&(r+=" "),r+=e[o];return r}}function r(){return function(e){e=e||"";var r="";return r=e.substr(0,4)+"-",r+=e.substr(4,4)+"-",r+=e.substr(8,2)+"-",r+=e.substr(10,10)}}function o(){return function(e){return e=e||"",e.substr(4,20)}}function t(){function e(e){for(var r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",o=[],t=0;t<e.length;t++){var a=r.indexOf(e[t]);o.push(0>a?"-":a)}return o.join("")}function r(e,r){for(var o=10,t=e.length,a=0,n=0;t>n;n+=o){var c=a+""+e.substr(n,o);a=c%r}return a}function o(e,r){for(e+="";e.length<r;)e="0"+e;return e}return function(t){var a="ES",n=t+e(a)+"00",c=r(n,97);return a+o(98-c,2)+t}}angular.module("app").filter("parseIban",e).filter("parseCC",r).filter("calcularIban",t).filter("calcularCC",o)}(),function(){"use strict";function e(){return function(e){return e.datosPersonales.fechaNacimiento=new Date(e.datosPersonales.fechaNacimiento),e.datosPersonales.fechaInscripcion=new Date(e.datosPersonales.fechaInscripcion),e}}function r(){return function(e){return e.datosPersonales.fechaNacimiento=e.datosPersonales.fechaNacimiento.toLocaleDateString(),e.datosPersonales.fechaInscripcion=e.datosPersonales.fechaInscripcion.toLocaleDateString(),e}}angular.module("app").filter("stringToDate",e).filter("dateToString",r)}(),function(){"use strict";function e(){return function(r){var o=r instanceof Array;for(var t in r)null===r[t]?o?r.splice(t,1):delete r[t]:"object"==typeof r[t]&&e(r[t]);return r}}angular.module("app").filter("removeNulls",e)}(),function(){"use strict";function e(e,r,o){function t(){return e("http://127.0.0.1:5050/api/cofrades/:id.json:json",null,{query:{method:"GET",isArray:!1},get:{method:"GET",transformResponse:function(e,r){return o("stringToDate")(angular.fromJson(e))}},save:{method:"POST",transformRequest:function(e,r){return angular.toJson(o("removeNulls")(e))}}})}function a(){return e("http://127.0.0.1:5050/api/cofradesBajas/:id.json:json",null,{query:{method:"GET",isArray:!1}})}function n(e){return r.get("http://127.0.0.1:5050/api/calles/",{params:{calle:e}}).then(function(e){return angular.fromJson(e)})}function c(){return r.get("http://127.0.0.1:5050/api/registros/").then(function(e){return angular.fromJson(e)})}return{cofradesRest:t,cofradesBajasRest:a,getCalles:n,getRegistros:c}}angular.module("app").factory("cofradesService",e),e.$inject=["$resource","$http","$filter"]}(),function(){"use strict";function e(e){function r(r){return e.get("https://maps.googleapis.com/maps/api/geocode/json",{params:{address:r,key:"AIzaSyDC_OIDSl6curjCMCLyzn2yhMmg-er5knI"}}).then(function(e){return e})}return{geoCodingAPI:r}}angular.module("app").factory("mapasService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){function r(){return e("http://127.0.0.1:5050/api/sectores/:id.json:json",null,{get:{method:"GET",isArray:!0}})}return{sectoresRest:r}}angular.module("app").factory("sectoresService",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,r,o){function t(e,o){o.stopPropagation();var t=r.confirm().title("Restaurar cofrade").content("¿Está seguro que desea restaurar este cofrade?<br>Su número de Cofrade se calculará de nuevo.").ariaLabel("Restaurar cofrade").targetEvent(o).ok("Aceptar").cancel("Cancelar");r.show(t).then(function(){a(e)})}function a(r){var t=o.cofradesRest().get({id:r},function(){t.baja=null,t.$save({updateNumeroCofrade:!0}).then(function(){"cofrades"===e.current.name?e.transitionTo(e.current,null,{reload:!0,inherit:!1,notify:!0}):e.go("cofrades")})})}var n=this;n.restoreCofrade=t}angular.module("app").controller("RestoreCofrade",e),e.$inject=["$state","$mdDialog","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/restore/restoreCofrade.directive.html",scope:{cofradeId:"=cofrade"},controller:"RestoreCofrade",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("restoreCofrade",e)}(),function(){"use strict";function e(e,r,o,t){function a(){g.bajas?c():n()}function n(){if(g.nextPage){var e={page:g.nextPage};g.buscar&&(e[g.filtro]=g.buscar),t.cofradesRest().query(e,function(e){g.nextPage=e.next,g.cofrades=g.cofrades.concat(e.results)})}}function c(){if(g.nextPageBajas){var e={page:g.nextPageBajas};g.buscar&&(e[g.filtro]=g.buscar),t.cofradesBajasRest().query(e,function(e){g.nextPageBajas=e.next,g.cofradesBajas=g.cofradesBajas.concat(e.results)})}}function s(){g.bajas?u():i()}function i(){var e={};e[g.filtro]=g.buscar,t.cofradesRest().query(e,function(e){g.nextPage=e.next,g.cofrades=e.results})}function u(){var e={};e[g.filtro]=g.buscar,t.cofradesBajasRest().query(e,function(e){g.nextPageBajas=e.next,g.cofradesBajas=e.results})}function l(){g.buscar=null,g.typeInput="nombre"===g.filtro?"text":"number",g.search()}function d(e,r){o.go("cofradesDetalle",{cofradeId:e})}function f(e,r){r.stopPropagation(),o.go("cofradesCambios",{cofradeId:e})}function p(e,r){r.stopPropagation(),console.log("eliminar cofrade")}var g=this;g.filtro="nombre",g.typeInput="text",g.buscar=null,g.search=s,g.radioChange=l,g.goToCofrade=d,g.modifyCofrade=f,g.removeCofrade=p;var m=e.$on("scrollDown",a);r.$on("$destroy",function(){m(),m=null})}angular.module("app").controller("ListaCofrades",e),e.$inject=["$rootScope","$scope","$state","cofradesService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"./templates/directives/cofrades/list/cofrades.directive.html",scope:{cofrades:"=cofrades",nextPage:"=page",cofradesBajas:"=cofradesBajas",nextPageBajas:"=pageBajas"},controller:"ListaCofrades",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("listaCofrades",e)}();
//# sourceMappingURL=data:application/json;base64,
